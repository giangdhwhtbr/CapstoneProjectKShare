{"version":3,"sources":["todo-dao_test.js"],"names":[],"mappings":"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","file":"todo-dao_test-compiled.js","sourcesContent":["import mongoose from 'mongoose';\nimport TodoDAO from '../../../../server/api/todo/dao/todo-dao';\nimport {expect} from 'chai';\nimport {setupMongoose, createTodos} from '../../_helpers/db';\n\ndescribe('todo.dao', () => {\n    before(() => {\n        setupMongoose(mongoose);\n    });\n\n    afterEach(() => {\n        TodoDAO.remove();\n    })\n\n    describe('getAll', () => {\n        beforeEach((done) => {\n            createTodos()\n            .then(() => done())\n            .catch(() => done());\n        })\n\n        it('should get all todos', (done) => {\n            let _onSuccess = todos => {\n                expect(todos).to.be.defined;\n                expect(todos[0]).to.have.property('todoMessage').and.to.equal('a0');\n                expect(todos[0]).to.have.property('createdAt').and.to.be.defined;\n\n                done();\n            }\n\n            let _onError = () => {\n                expect(true).to.be.false; // should not come here;\n            }\n\n            TodoDAO\n              .getAll()\n              .then(_onSuccess)\n              .catch(_onError);\n        })\n    })\n\n    describe('createTodo', () => {\n        it('should throw an error, object passed is not defined', (done) => {\n            let _undefinedTodo = undefined;\n\n            let _onSuccess = () => {\n                expect(true).to.be.false; // should not come here;\n            }\n\n            let _onError = error => {\n                expect(error).to.be.defined;\n\n                done();\n            }\n\n            TodoDAO\n              .createTodo(_undefinedTodo)\n              .then(_onSuccess)\n              .catch(_onError);\n        })\n\n        it('should create the todo correctly', (done) => {\n            let _todo = {todoMessage: 'abc'};\n\n            let _onSuccess = todo => {\n                expect(todo).to.be.defined;\n                expect(todo.todoMessage).to.equal('abc');\n                expect(todo.createdAt).to.be.defined;\n\n                done();\n            }\n\n            let _onError = () => {\n                expect(true).to.be.false;\n            }\n\n            TodoDAO\n              .createTodo(_todo)\n              .then(_onSuccess)\n              .catch(_onError);\n        })\n    })\n\n    describe('deleteTodo', () => {\n        beforeEach((done) => {\n            createTodos()\n              .then(() => done())\n              .catch(() => done());\n        })\n\n        it('should get an error back, id is not defined', (done) => {\n            let _id = null;\n\n            let _onSuccess = () => {\n                expect(true).to.be.false;\n            }\n\n            let _onError = error => {\n                expect(error).to.be.defined;\n\n                done();\n            }\n\n            TodoDAO\n              .deleteTodo(_id)\n              .then(_onSuccess)\n              .catch(_onError);\n        })\n\n        it('should delete the doc successfully', (done) => {\n          let _id = '507c7f79bcf86cd7994f6c10';\n\n          let _onSuccess = () => {\n            expect(true).to.be.true;\n\n            done();\n          }\n\n          let _onError = () => {\n            expect(true).to.be.false;\n          }\n\n          TodoDAO\n            .deleteTodo(_id)\n            .then(_onSuccess)\n            .catch(_onError);\n        })\n    })\n})\n"]}