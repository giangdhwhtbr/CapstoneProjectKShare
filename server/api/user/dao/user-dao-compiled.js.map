{"version":3,"sources":["user-dao.js"],"names":[],"mappings":"AAAA;;AAEA,IAAM,WAAW,QAAQ,UAAR,CAAjB;AACA,IAAM,UAAU,QAAQ,UAAR,CAAhB;AACA,IAAM,aAAa,QAAQ,qBAAR,CAAnB;AACA,IAAM,IAAI,QAAQ,QAAR,CAAV;;;AAIA,IAAI,mBAAmB,SAAnB,gBAAmB,CAAS,GAAT,EAAc,MAAd,EAAsB,OAAtB,EAA+B;AACpD,MAAI,MAAJ,CAAW,MAAX;AACA,MAAI,IAAJ,CAAS,OAAT;AACD,CAHD;;AAKA,WAAW,OAAX,CAAmB,MAAnB,GAA4B,YAAM;AAChC,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,QAAI,SAAS,EAAb;;AAEA,SACG,IADH,CACQ,MADR,EAEG,IAFH,CAEQ,UAAC,GAAD,EAAM,IAAN,EAAe;AACnB,YAAM,OAAO,GAAP,CAAN,GACI,QAAQ,IAAR,CADJ;AAED,KALH;AAMD,GATM,CAAP;AAWD,CAZD;;AAcA,WAAW,OAAX,CAAmB,WAAnB,GAAiC,UAAC,EAAD,EAAQ;;AAEvC,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,QAAG,CAAC,EAAE,QAAF,CAAW,EAAX,CAAJ,EAAmB;AACjB,aAAO,OAAO,IAAI,SAAJ,CAAc,qBAAd,CAAP,CAAP;AACD;AACD,SACG,QADH,CACY,EADZ,EAEG,IAFH,CAEQ,UAAC,GAAD,EAAM,IAAN,EAAe;AACnB,YAAM,OAAO,GAAP,CAAN,GACI,QAAQ,IAAR,CADJ;AAED,KALH;AAMD,GAVM,CAAP;AAWD,CAbD;;AAeA,WAAW,OAAX,CAAmB,SAAnB,GAA+B,UAAC,IAAD,EAAU;AACvC,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,QAAI,CAAC,EAAE,QAAF,CAAW,IAAX,CAAL,EAAuB;AACrB,aAAO,OAAO,IAAI,SAAJ,CAAc,6BAAd,CAAP,CAAP;AACD;;AAED,QAAI,QAAQ,IAAI,IAAJ,CAAS,IAAT,CAAZ;;AAEA,UAAM,IAAN,CAAW,UAAC,GAAD,EAAM,KAAN,EAAgB;AACzB,YAAM,OAAO,GAAP,CAAN,GACI,QAAQ,KAAR,CADJ;AAED,KAHD;AAID,GAXM,CAAP;AAYD,CAbD;;AAeA,WAAW,OAAX,CAAmB,UAAnB,GAAgC,UAAC,EAAD,EAAQ;AACtC,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,QAAI,CAAC,EAAE,QAAF,CAAW,EAAX,CAAL,EAAqB;AACnB,aAAO,OAAO,IAAI,SAAJ,CAAc,2BAAd,CAAP,CAAP;AACD;;AAED,SACG,iBADH,CACqB,EADrB,EAEG,IAFH,CAEQ,UAAC,GAAD,EAAM,OAAN,EAAkB;AACtB,YAAM,OAAO,GAAP,CAAN,GACI,SADJ;AAED,KALH;AAMD,GAXM,CAAP;AAYD,CAbD;;AAeA,WAAW,OAAX,CAAmB,cAAnB,GAAoC,UAAC,QAAD,EAAc;AAChD,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAS,MAAT,EAAoB;AACrC,QAAI,CAAC,EAAE,QAAF,CAAW,QAAX,CAAL,EAA2B;AACzB,aAAO,OAAO,IAAI,SAAJ,CAAc,6BAAd,CAAP,CAAP;AACD;;;AAGD,aAAS,IAAT,CAAc,UAAC,GAAD,EAAM,KAAN,EAAgB;AAC5B,YAAM,OAAO,GAAP,CAAN,GACI,QAAQ,KAAR,CADJ;AAED,KAHD;AAID,GAVM,CAAP;AAWD,CAZD;;AAeA,IAAM,OAAO,SAAS,KAAT,CAAe,MAAf,EAAuB,UAAvB,CAAb;AACA,OAAO,OAAP,GAAiB,IAAjB","file":"user-dao-compiled.js","sourcesContent":["\"use strict\";\n\nconst mongoose = require('mongoose');\nconst Promise = require('bluebird');\nconst userSchema = require('../model/user-model');\nconst _ = require('lodash');\n\n\n//Send Json\nvar sendJsonResponse = function(res, status, content) {\n  res.status(status);\n  res.json(content);\n};\n\nuserSchema.statics.getAll = () => {\n  return new Promise((resolve, reject) => {\n    let _query = {};\n\n    User\n      .find(_query)\n      .exec((err, user) => {\n        err ? reject(err)\n          : resolve(user);\n      });\n  });\n\n}\n\nuserSchema.statics.getUserById = (id) => {\n\n  return new Promise((resolve, reject) => {\n    if(!_.isString(id)){\n      return reject(new TypeError('ID is not a String.'));\n    }\n    User\n      .findById(id)\n      .exec((err, user) => {\n        err ? reject(err)\n          : resolve(user);\n      });\n  });\n}\n\nuserSchema.statics.createNew = (user) => {\n  return new Promise((resolve, reject) => {\n    if (!_.isObject(user)) {\n      return reject(new TypeError('User is not a valid object.'));\n    }\n\n    let _user = new User(user);\n\n    _user.save((err, saved) => {\n      err ? reject(err)\n        : resolve(saved);\n    });\n  });\n}\n\nuserSchema.statics.removeById = (id) => {\n  return new Promise((resolve, reject) => {\n    if (!_.isString(id)) {\n      return reject(new TypeError('Id is not a valid string.'));\n    }\n\n    User\n      .findByIdAndRemove(id)\n      .exec((err, deleted) => {\n        err ? reject(err)\n          : resolve();\n      });\n  });\n}\n\nuserSchema.statics.updateUserById = (userinfo) => {\n  return new Promise((resolve,reject) => {\n    if (!_.isObject(userinfo)) {\n      return reject(new TypeError('User is not a valid object.'));\n    }\n    //let _user = new User(userinfo);\n    //res.status(200).json(userinfo);\n    userinfo.save((err, saved) => {\n      err ? reject(err)\n        : resolve(saved);\n    });\n  });\n}\n\n\nconst User = mongoose.model('user', userSchema);\nmodule.exports = User;\n"]}