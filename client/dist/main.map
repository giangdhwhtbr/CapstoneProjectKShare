{"version":3,"file":"main.bundle.js","sources":["webpack:///./client/dev/index.ts","webpack:///./client/dev/app/services/knowledge.ts","webpack:///./client/dev/app/services/auth.ts","webpack:///./client/dev/app/services/requests.ts","webpack:///./client/dev/app/services/users.ts","webpack:///./~/ng2-pagination/index.js","webpack:///./client/dev/app/components/back-end/shared/filter.ts","webpack:///./client/dev/app/services/kspace.ts","webpack:///./~/rxjs/AsyncSubject.js","webpack:///./~/rxjs/util/EmptyError.js","webpack:///./~/rxjs/util/isDate.js","webpack:///./client/dev/app/components/back-end/badword/badword-update.ts","webpack:///./client/dev/app/components/back-end/knowledge/knowledge-update.ts","webpack:///./client/dev/app/components/back-end/request/request-update.ts","webpack:///./client/dev/app/components/front-end/request/request-search.ts","webpack:///./client/dev/app/components/front-end/shared/notification.ts","webpack:///./client/dev/app/services/request-offer.ts","webpack:///./~/rxjs/operator/combineLatest.js","webpack:///./~/rxjs/operator/concat.js","webpack:///./~/rxjs/operator/zip.js","webpack:///./~/rxjs/util/isNumeric.js","webpack:///./~/ng2-pagination/dist/pagination-service.js","webpack:///./client/dev/app/components/back-end/badword/badwords-list.ts","webpack:///./client/dev/app/components/back-end/knowledge/knowledges-list.ts","webpack:///./client/dev/app/components/back-end/request/requests-list.ts","webpack:///./client/dev/app/components/back-end/users/user-list.ts","webpack:///./client/dev/app/components/front-end/home/home.ts","webpack:///./client/dev/app/components/front-end/kspace/kspace-info.ts","webpack:///./client/dev/app/components/front-end/kspace/kspace-list.ts","webpack:///./client/dev/app/components/front-end/kspace/kspace.ts","webpack:///./client/dev/app/components/front-end/request/request-detail.ts","webpack:///./client/dev/app/components/front-end/request/request-list.ts","webpack:///./client/dev/app/components/front-end/request/request-update.ts","webpack:///./client/dev/app/components/front-end/user-profile/friend-list.ts","webpack:///./client/dev/app/components/front-end/user-profile/user-profile.ts","webpack:///./client/dev/app/components/kshare.component.ts","webpack:///./client/dev/app/services/badword.ts","webpack:///./~/rxjs/ReplaySubject.js","webpack:///./~/rxjs/Rx.js","webpack:///./~/rxjs/operator/filter.js","webpack:///./~/rxjs/operator/merge.js","webpack:///./~/rxjs/operator/mergeMapTo.js","webpack:///./~/rxjs/operator/publishReplay.js","webpack:///./~/rxjs/operator/race.js","webpack:///./~/rxjs/scheduler/asap.js","webpack:///./~/rxjs/scheduler/queue.js","webpack:///./~/rxjs/util/noop.js","webpack:///./client/dev/app/app.component.ts","webpack:///./client/dev/app/app.routes.ts","webpack:///./client/dev/app/components/admin.component.ts","webpack:///./client/dev/app/components/back-end/knowledge/sub-knowledge-create.ts","webpack:///./client/dev/app/components/back-end/request/request-create.ts","webpack:///./client/dev/app/components/back-end/shared/nav-bar.ts","webpack:///./client/dev/app/components/back-end/shared/side-bar.ts","webpack:///./client/dev/app/components/front-end/kspace/chalkboard.ts","webpack:///./client/dev/app/components/front-end/kspace/rtc-services.ts","webpack:///./client/dev/app/components/front-end/offer/offer-create.ts","webpack:///./client/dev/app/components/front-end/shared/footer.ts","webpack:///./client/dev/app/components/front-end/shared/friend-list.ts","webpack:///./client/dev/app/components/front-end/shared/header.ts","webpack:///./client/dev/app/components/front-end/shared/login.ts","webpack:///./client/dev/app/components/front-end/shared/register.ts","webpack:///./client/dev/app/components/front-end/shared/side-bar.ts","webpack:///./client/dev/app/components/front-end/user-profile/request-record.ts","webpack:///./client/dev/app/routes/admin.routes.ts","webpack:///./client/dev/app/routes/kshare.routes.ts","webpack:///./client/dev/app/services/socket.io.services.ts","webpack:///./~/rxjs/Operator.js","webpack:///./~/rxjs/add/observable/bindCallback.js","webpack:///./~/rxjs/add/observable/bindNodeCallback.js","webpack:///./~/rxjs/add/observable/combineLatest.js","webpack:///./~/rxjs/add/observable/concat.js","webpack:///./~/rxjs/add/observable/defer.js","webpack:///./~/rxjs/add/observable/empty.js","webpack:///./~/rxjs/add/observable/fromEvent.js","webpack:///./~/rxjs/add/observable/fromEventPattern.js","webpack:///./~/rxjs/add/observable/interval.js","webpack:///./~/rxjs/add/observable/merge.js","webpack:///./~/rxjs/add/observable/never.js","webpack:///./~/rxjs/add/observable/of.js","webpack:///./~/rxjs/add/observable/race.js","webpack:///./~/rxjs/add/observable/range.js","webpack:///./~/rxjs/add/observable/throw.js","webpack:///./~/rxjs/add/observable/timer.js","webpack:///./~/rxjs/add/observable/zip.js","webpack:///./~/rxjs/add/operator/audit.js","webpack:///./~/rxjs/add/operator/auditTime.js","webpack:///./~/rxjs/add/operator/buffer.js","webpack:///./~/rxjs/add/operator/bufferCount.js","webpack:///./~/rxjs/add/operator/bufferTime.js","webpack:///./~/rxjs/add/operator/bufferToggle.js","webpack:///./~/rxjs/add/operator/bufferWhen.js","webpack:///./~/rxjs/add/operator/cache.js","webpack:///./~/rxjs/add/operator/catch.js","webpack:///./~/rxjs/add/operator/combineAll.js","webpack:///./~/rxjs/add/operator/combineLatest.js","webpack:///./~/rxjs/add/operator/concat.js","webpack:///./~/rxjs/add/operator/concatAll.js","webpack:///./~/rxjs/add/operator/concatMap.js","webpack:///./~/rxjs/add/operator/concatMapTo.js","webpack:///./~/rxjs/add/operator/count.js","webpack:///./~/rxjs/add/operator/debounce.js","webpack:///./~/rxjs/add/operator/defaultIfEmpty.js","webpack:///./~/rxjs/add/operator/delay.js","webpack:///./~/rxjs/add/operator/delayWhen.js","webpack:///./~/rxjs/add/operator/dematerialize.js","webpack:///./~/rxjs/add/operator/distinctUntilChanged.js","webpack:///./~/rxjs/add/operator/do.js","webpack:///./~/rxjs/add/operator/expand.js","webpack:///./~/rxjs/add/operator/filter.js","webpack:///./~/rxjs/add/operator/finally.js","webpack:///./~/rxjs/add/operator/first.js","webpack:///./~/rxjs/add/operator/groupBy.js","webpack:///./~/rxjs/add/operator/ignoreElements.js","webpack:///./~/rxjs/add/operator/last.js","webpack:///./~/rxjs/add/operator/let.js","webpack:///./~/rxjs/add/operator/mapTo.js","webpack:///./~/rxjs/add/operator/materialize.js","webpack:///./~/rxjs/add/operator/merge.js","webpack:///./~/rxjs/add/operator/mergeMapTo.js","webpack:///./~/rxjs/add/operator/multicast.js","webpack:///./~/rxjs/add/operator/partition.js","webpack:///./~/rxjs/add/operator/pluck.js","webpack:///./~/rxjs/add/operator/publishBehavior.js","webpack:///./~/rxjs/add/operator/publishLast.js","webpack:///./~/rxjs/add/operator/publishReplay.js","webpack:///./~/rxjs/add/operator/race.js","webpack:///./~/rxjs/add/operator/repeat.js","webpack:///./~/rxjs/add/operator/retry.js","webpack:///./~/rxjs/add/operator/retryWhen.js","webpack:///./~/rxjs/add/operator/sample.js","webpack:///./~/rxjs/add/operator/sampleTime.js","webpack:///./~/rxjs/add/operator/scan.js","webpack:///./~/rxjs/add/operator/share.js","webpack:///./~/rxjs/add/operator/single.js","webpack:///./~/rxjs/add/operator/skip.js","webpack:///./~/rxjs/add/operator/skipUntil.js","webpack:///./~/rxjs/add/operator/skipWhile.js","webpack:///./~/rxjs/add/operator/startWith.js","webpack:///./~/rxjs/add/operator/subscribeOn.js","webpack:///./~/rxjs/add/operator/switch.js","webpack:///./~/rxjs/add/operator/switchMap.js","webpack:///./~/rxjs/add/operator/switchMapTo.js","webpack:///./~/rxjs/add/operator/takeLast.js","webpack:///./~/rxjs/add/operator/takeUntil.js","webpack:///./~/rxjs/add/operator/takeWhile.js","webpack:///./~/rxjs/add/operator/throttle.js","webpack:///./~/rxjs/add/operator/throttleTime.js","webpack:///./~/rxjs/add/operator/timeout.js","webpack:///./~/rxjs/add/operator/timeoutWith.js","webpack:///./~/rxjs/add/operator/toArray.js","webpack:///./~/rxjs/add/operator/window.js","webpack:///./~/rxjs/add/operator/windowCount.js","webpack:///./~/rxjs/add/operator/windowTime.js","webpack:///./~/rxjs/add/operator/windowToggle.js","webpack:///./~/rxjs/add/operator/windowWhen.js","webpack:///./~/rxjs/add/operator/withLatestFrom.js","webpack:///./~/rxjs/add/operator/zip.js","webpack:///./~/rxjs/add/operator/zipAll.js","webpack:///./~/rxjs/observable/BoundCallbackObservable.js","webpack:///./~/rxjs/observable/BoundNodeCallbackObservable.js","webpack:///./~/rxjs/observable/DeferObservable.js","webpack:///./~/rxjs/observable/ErrorObservable.js","webpack:///./~/rxjs/observable/FromEventObservable.js","webpack:///./~/rxjs/observable/FromEventPatternObservable.js","webpack:///./~/rxjs/observable/IntervalObservable.js","webpack:///./~/rxjs/observable/NeverObservable.js","webpack:///./~/rxjs/observable/RangeObservable.js","webpack:///./~/rxjs/observable/SubscribeOnObservable.js","webpack:///./~/rxjs/observable/TimerObservable.js","webpack:///./~/rxjs/observable/bindCallback.js","webpack:///./~/rxjs/observable/bindNodeCallback.js","webpack:///./~/rxjs/observable/concat.js","webpack:///./~/rxjs/observable/defer.js","webpack:///./~/rxjs/observable/empty.js","webpack:///./~/rxjs/observable/fromEvent.js","webpack:///./~/rxjs/observable/fromEventPattern.js","webpack:///./~/rxjs/observable/interval.js","webpack:///./~/rxjs/observable/merge.js","webpack:///./~/rxjs/observable/never.js","webpack:///./~/rxjs/observable/range.js","webpack:///./~/rxjs/observable/throw.js","webpack:///./~/rxjs/observable/timer.js","webpack:///./~/rxjs/observable/zip.js","webpack:///./~/rxjs/operator/audit.js","webpack:///./~/rxjs/operator/auditTime.js","webpack:///./~/rxjs/operator/buffer.js","webpack:///./~/rxjs/operator/bufferCount.js","webpack:///./~/rxjs/operator/bufferTime.js","webpack:///./~/rxjs/operator/bufferToggle.js","webpack:///./~/rxjs/operator/bufferWhen.js","webpack:///./~/rxjs/operator/cache.js","webpack:///./~/rxjs/operator/catch.js","webpack:///./~/rxjs/operator/combineAll.js","webpack:///./~/rxjs/operator/concatAll.js","webpack:///./~/rxjs/operator/concatMap.js","webpack:///./~/rxjs/operator/concatMapTo.js","webpack:///./~/rxjs/operator/count.js","webpack:///./~/rxjs/operator/debounce.js","webpack:///./~/rxjs/operator/defaultIfEmpty.js","webpack:///./~/rxjs/operator/delay.js","webpack:///./~/rxjs/operator/delayWhen.js","webpack:///./~/rxjs/operator/dematerialize.js","webpack:///./~/rxjs/operator/distinctUntilChanged.js","webpack:///./~/rxjs/operator/do.js","webpack:///./~/rxjs/operator/expand.js","webpack:///./~/rxjs/operator/finally.js","webpack:///./~/rxjs/operator/first.js","webpack:///./~/rxjs/operator/groupBy.js","webpack:///./~/rxjs/operator/ignoreElements.js","webpack:///./~/rxjs/operator/last.js","webpack:///./~/rxjs/operator/let.js","webpack:///./~/rxjs/operator/mapTo.js","webpack:///./~/rxjs/operator/materialize.js","webpack:///./~/rxjs/operator/partition.js","webpack:///./~/rxjs/operator/pluck.js","webpack:///./~/rxjs/operator/publishBehavior.js","webpack:///./~/rxjs/operator/publishLast.js","webpack:///./~/rxjs/operator/repeat.js","webpack:///./~/rxjs/operator/retry.js","webpack:///./~/rxjs/operator/retryWhen.js","webpack:///./~/rxjs/operator/sample.js","webpack:///./~/rxjs/operator/sampleTime.js","webpack:///./~/rxjs/operator/scan.js","webpack:///./~/rxjs/operator/share.js","webpack:///./~/rxjs/operator/single.js","webpack:///./~/rxjs/operator/skip.js","webpack:///./~/rxjs/operator/skipUntil.js","webpack:///./~/rxjs/operator/skipWhile.js","webpack:///./~/rxjs/operator/startWith.js","webpack:///./~/rxjs/operator/subscribeOn.js","webpack:///./~/rxjs/operator/switch.js","webpack:///./~/rxjs/operator/switchMap.js","webpack:///./~/rxjs/operator/switchMapTo.js","webpack:///./~/rxjs/operator/takeLast.js","webpack:///./~/rxjs/operator/takeUntil.js","webpack:///./~/rxjs/operator/takeWhile.js","webpack:///./~/rxjs/operator/throttle.js","webpack:///./~/rxjs/operator/throttleTime.js","webpack:///./~/rxjs/operator/timeout.js","webpack:///./~/rxjs/operator/timeoutWith.js","webpack:///./~/rxjs/operator/toArray.js","webpack:///./~/rxjs/operator/window.js","webpack:///./~/rxjs/operator/windowCount.js","webpack:///./~/rxjs/operator/windowTime.js","webpack:///./~/rxjs/operator/windowToggle.js","webpack:///./~/rxjs/operator/windowWhen.js","webpack:///./~/rxjs/operator/withLatestFrom.js","webpack:///./~/rxjs/operator/zipAll.js","webpack:///./~/rxjs/scheduler/AsapAction.js","webpack:///./~/rxjs/scheduler/AsapScheduler.js","webpack:///./~/rxjs/util/FastMap.js","webpack:///./~/rxjs/util/Immediate.js","webpack:///./~/rxjs/util/Map.js","webpack:///./~/rxjs/util/MapPolyfill.js","webpack:///./~/rxjs/util/not.js","webpack:///./~/ng2-pagination/dist/ng2-pagination.js","webpack:///./~/ng2-pagination/dist/paginate-pipe.js","webpack:///./~/ng2-pagination/dist/pagination-controls-cmp.js","webpack:///./~/ng2-pagination/dist/template.js"],"sourcesContent":["\r\n/*\r\n * Angular\r\n */\r\nimport { bootstrap } from '@angular/platform-browser-dynamic';\r\nimport { APP_ROUTER_PROVIDERS } from './app/app.routes';\r\nimport { provide } from '@angular/core';\r\nimport { FORM_PROVIDERS } from '@angular/common';\r\nimport { Http, HTTP_PROVIDERS } from '@angular/http';\r\nimport { AuthConfig, AuthHttp } from 'angular2-jwt';\r\n\r\n\r\n/*\r\n * components\r\n */\r\nimport {AppComponent} from './app/app.component';\r\nbootstrap(\r\n  AppComponent,\r\n  APP_ROUTER_PROVIDERS\r\n).catch (err => console.error(err));\r\n\r\n\r\n// import {DemoPaper} from './demo/demo-paper';\r\n\r\n// bootstrap(DemoPaper);\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/index.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { Knowledge } from '../interface/knowledge';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class KnowledgeService {\r\n  private _knowledgesUrl = '/api/knowledges/:id';\r\n  constructor(private _http: Http) { }\r\n\r\n  getAllKnowledges(): Observable<Knowledge[]> {\r\n    return this._http.get(this._knowledgesUrl.replace(':id', ''))\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  addKnowledge(knowledge: Knowledge): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _knowledge = JSON.stringify({\r\n    name: knowledge.name,\r\n    description: knowledge.description,\r\n    parent: knowledge.parent,\r\n    });\r\n    return this._http\r\n      .post(this._knowledgesUrl.replace(':id', ''), _knowledge, options)\r\n      .map((r) => r.json());\r\n  }\r\n\r\n  deleteKnowledge(id: string): Observable<any> {\r\n    return this._http\r\n      .delete(this._knowledgesUrl.replace(':id', id));\r\n\r\n  }\r\n\r\n  findKnowledgeById(id: string): Observable<any> {\r\n    return this._http\r\n      .get(this._knowledgesUrl.replace(':id', id))\r\n      .map((r) => r.json());\r\n  }\r\n\r\n  updateKnowledge(knowledge: Knowledge): Observable<any> {\r\n    let header = new Headers;\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _knowledge = JSON.stringify({\r\n      name: knowledge.name,\r\n      description: knowledge.description,\r\n    });\r\n\r\n    return this._http\r\n      .put(this._knowledgesUrl.replace(':id', knowledge._id), _knowledge, options)\r\n      .map((r) => r.json());\r\n  }\r\n\r\n  //get child of a back.knowledge parent\r\n  getChildFromParent(knowledges: Knowledge[]){\r\n    var parent = [];\r\n    var subCate = [];\r\n    for (var i = 0; i < knowledges.length; i++) {\r\n      if (!knowledges[i].hasOwnProperty('parent')) {\r\n        parent.push(knowledges[i]);\r\n      }\r\n    }\r\n    for (var i = 0; i < parent.length; i++) {\r\n      for (var j = 0; j < knowledges.length; j++) {\r\n        if ((knowledges[j].hasOwnProperty('parent')) && (knowledges[j].parent === parent[i]._id)) {\r\n          subCate.push(knowledges[j]);\r\n        }\r\n      }\r\n      parent[i][\"subCategory\"] = subCate;\r\n      subCate = [];\r\n    }\r\n    knowledges = parent;\r\n    return parent;\r\n  }\r\n\r\n  private handleError(error: Response) {\r\n    console.error(error);\r\n    return Observable.throw(error.json().error || 'Server error');\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/services/knowledge.ts\n **/","/**\r\n * Created by GiangDH on 5/19/16.\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from '../interface/user';\r\nimport { Response, Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private _regUrl = '/api/user/';\r\n  private _loginUrl = '/api/login';\r\n  private _logOutUrl = '/api/logout';\r\n  private _checkLoginUrl = '/api/checkLogin/';\r\n  constructor(private _http: Http) {\r\n\r\n  }\r\n\r\n  login(user: User):Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json'});\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _user = JSON.stringify({\r\n      username: user.username,\r\n      password: user.password\r\n    })\r\n    var usertoken = user.username;\r\n    return this._http.post(this._loginUrl,_user,options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  register(user: User):Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json'});\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _user = JSON.stringify({\r\n      username: user.username,\r\n      password: user.password,\r\n      email:    user.email\r\n    });\r\n    return this._http.post(this._regUrl,_user,options)\r\n      .map((res) =>  res.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  logout():Observable<string[]> {\r\n    return this._http.get(this._logOutUrl)\r\n      .map((res) => res.json())\r\n      .catch(this.handleError);\r\n  }\r\n  logoutClient() {\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('userrole');\r\n  }\r\n  isLoggedIn(): Observable<string[]> {\r\n   return this._http.get(this._checkLoginUrl).map((res)=>res.json()).catch(this.handleError);\r\n  }\r\n\r\n  dashboardFilter(){\r\n    let roleToken = localStorage.getItem('userrole');\r\n\r\n    if(!roleToken){\r\n      return false;\r\n    }else if(roleToken !== 'admin'){\r\n      return false\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private handleError(error: Response) {\r\n    return Observable.throw(error.json());\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/services/auth.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { Request } from '../interface/request';\r\nimport { Http, Response, Headers,RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport  class RequestService {\r\n  private _requestsUrl = '/api/requests/:id';\r\n  private _getKnowledgeByParentUrl = '/api/knowledges/parent/:id';\r\n  private _searchRequetsUrl = '/api/requests-search/:id';\r\n  private _statusSubcriberUrl = '/api/requests-subcriber/:id';\r\n  private _requestStatusUrl = '/api/requests-status/:id';\r\n\r\n  constructor(private _http: Http) { }\r\n\r\n  getAllRequests(): Observable<Request[]> {\r\n    return this._http.get(this._requestsUrl.replace(':id',''))\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  addRequest(request: Request):Observable<any>{\r\n    let header = new Headers;\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _request = JSON.stringify({\r\n      title : request.title,\r\n      description : request.description,\r\n      knowledgeId: request.knowledgeId,\r\n      user: request.user\r\n    });\r\n    return this._http\r\n              .post(this._requestsUrl.replace(':id',''),_request,options)\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  getRequestById(id: string):Observable<any> {\r\n     return this._http.get(this._requestsUrl.replace(':id',id))\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  //delete templates\r\n  deleteRequest(request: Request):Observable<any> {\r\n    return this._http\r\n              .delete(this._requestsUrl.replace(':id',request._id))\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  deleteRequestById(id: string):Observable<any> {\r\n    return this._http\r\n              .delete(this._requestsUrl.replace(':id',id))\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  updateRequest(request: Request):Observable<any>{\r\n    let header = new Headers;\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _request = JSON.stringify({\r\n      _id : '',\r\n      title : request.title,\r\n      description : request.description,\r\n      knowledgeId: request.knowledgeId\r\n    });\r\n    console.log(_request);\r\n    return this._http\r\n              .put(this._requestsUrl.replace(':id',request._id),_request,options)\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  getRequestByKnowledgeId(id: string):Observable<any>{\r\n    return this._http\r\n              .post(this._requestsUrl.replace(':id',id),'')\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  // get child back.knowledge from parent back.knowledge\r\n  getKnowledgeByParent(id: string):Observable<any>{\r\n    return this._http.get(this._getKnowledgeByParentUrl.replace(':id',id))\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  //add a subcriber to templates subcribers\r\n  updateSubcriber(id: string, subcriber:string):Observable<any> {\r\n    let header = new Headers;\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _subcriber = JSON.stringify({\r\n      subcriber : subcriber\r\n    });\r\n    return this._http.post(this._statusSubcriberUrl.replace(':id',id),_subcriber,options)\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  //change status request\r\n  changeStatusRequest(id: string):Observable<any> {\r\n    return this._http.get(this._requestStatusUrl.replace(':id',id))\r\n              .map((r) => r.json());\r\n  }\r\n\r\n   //search request\r\n  searchRequest(search: string):Observable<any>{\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _search = JSON.stringify({\r\n      text : search\r\n    });\r\n    return this._http\r\n              .post(this._searchRequetsUrl.replace(':id',''),_search,options)\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  private handleError(error: Response) {\r\n    console.error(error);\r\n    return Observable.throw(error.json().error || 'Server error');\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/services/requests.ts\n **/","/**\r\n * Created by GiangDH on 5/8/16.\r\n */\r\n\r\nimport { Injectable} from '@angular/core';\r\n\r\n//interface\r\nimport { User } from '../interface/user';\r\nimport { FriendShip } from '../interface/friendship';\r\n\r\nimport { Response, Http, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private _usersUrl = '/api/user/:id';\r\n  private _friendUrl = '/api/friendship/:id';\r\n  private _getFriendUrl = '/api/getFriendship';\r\n  private _getRequestByUserUrl = '/api/requests-user/:user';\r\n\r\n  constructor(private _http: Http) { }\r\n\r\n  getAllUsers(): Observable<User[]> {\r\n    return this._http.get(this._usersUrl.replace(':id', ''))\r\n      .toPromise()\r\n      .then((res) => res.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  getUserById(id: string): Observable<User> {\r\n    return this._http.get(this._usersUrl.replace(':id', id))\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  //get user informations by username\r\n  getUserByUserName(user: string): Observable<User> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let _search = JSON.stringify({\r\n      username: user\r\n    });\r\n\r\n    return this._http.put(this._usersUrl.replace(':id', ''), _search, options)\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  addUser(user: User): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json', 'Connection': 'keep-alive' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    var formatDate = function (date) {\r\n      if (date) {\r\n        var newDate, day, month, year;\r\n        year = date.substr(6, 4);\r\n        day = date.substr(3, 2);\r\n        month = date.substr(0, 2);\r\n        return newDate = year + '-' + month + '-' + day;\r\n      }\r\n    }\r\n    let _user = JSON.stringify({\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      displayName: user.displayName,\r\n      birthday: formatDate(user.birthday),\r\n      username: user.username,\r\n      password: user.password,\r\n      email: user.email,\r\n      role: user.role,\r\n      ownKnowledgeId: user.ownKnowledgeId.split(\",\"),\r\n      interestedKnowledgeId: user.interestedKnowledgeId.split(\",\"),\r\n      onlineTime: user.onlineTime.split(\",\")\r\n    });\r\n\r\n    return this._http\r\n      .post(this._usersUrl.replace(':id', ''), _user, options)\r\n      .map((r) => r.json());\r\n  }\r\n\r\n\r\n  updateUser(user: User): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json'});\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let _user = JSON.stringify({\r\n      _id: user._id,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      displayName: user.displayName,\r\n      username: user.username,\r\n      password: user.password,\r\n      email: user.email,\r\n      role: user.role\r\n    });\r\n    return this._http\r\n      .put(this._usersUrl.replace(':id', user._id), _user, options)\r\n      .map((r) => r.json());\r\n  }\r\n\r\n  //add friend service\r\n  addFriend(requestUser: string, acceptUser: string): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json'});\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let _friendship = JSON.stringify({\r\n      user1: requestUser,\r\n      user2: acceptUser\r\n    });\r\n\r\n    return this._http\r\n      .post(this._friendUrl.replace(':id', ''),_friendship,options)\r\n      .map((r) => r.json());\r\n  }\r\n\r\n  //select friend of logined user\r\n  getFriendList(currentUser):Observable<any>{\r\n    let headers = new Headers({ 'Content-Type': 'application/json'});\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let _friendship = JSON.stringify({\r\n      user: currentUser\r\n    });\r\n\r\n    return this._http\r\n      .post(this._getFriendUrl,_friendship,options)\r\n      .map((r) => r.json());\r\n  }\r\n\r\n  //get request of an user\r\n  getRequestByUser(user):Observable<any>{\r\n\r\n    return this._http\r\n      .get(this._getRequestByUserUrl.replace(':user',user))\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  //delete friend request\r\n  deleteFriendRequest(user1, user2):Observable<any>{\r\n    let headers = new Headers({ 'Content-Type': 'application/json'});\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let _friendship = JSON.stringify({\r\n      requestUser: user1,\r\n      acceptUser:user2\r\n    });\r\n\r\n    return this._http\r\n      .put(this._friendUrl.replace(':id',''),_friendship,options)\r\n      .map((r) => r.json());\r\n  }\r\n\r\n  private handleError(error: Response) {\r\n    return Observable.throw(error);\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/services/users.ts\n **/","function __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(require('./dist/ng2-pagination'));\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-pagination/index.js\n ** module id = 140\n ** module chunks = 2\n **/","import {Pipe} from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: 'stringFilter'\r\n})\r\nexport class StringFilterPipe {\r\n  transform(value, args) {\r\n  if (!args) {\r\n    return value;\r\n  } else if (args) {\r\n    return value.filter(item => {\r\n      for (let key in item) {\r\n        if ((typeof item[key] === 'string' || item[key] instanceof String ) &&\r\n            (item[key].indexOf(args) > -1)&&(key!==\"_id\")) {\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/shared/filter.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { KSpace } from '../interface/kspace';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class KSpaceService {\r\n  private _kspaceUrl = '/api/kspace/:id';\r\n  constructor(private _http: Http) { }\r\n\r\n  getAllKSpace(): Observable<KSpace[]> {\r\n    return this._http.get(this._kspaceUrl.replace(':id', ''))\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  getKSpaceById(id: string): Observable<KSpace> {\r\n    return this._http.get(this._kspaceUrl.replace(':id', id))\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  addKSpace(learner:string, lecturer:string, requestId:string,requestTitle:string, offerId:string) {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let _kspace = JSON.stringify({\r\n      lecturer: lecturer,\r\n      learner: learner,\r\n      requestId: requestId,\r\n      requestTitle: requestTitle,\r\n      offerId: offerId,\r\n    });\r\n    return this._http\r\n      .post(this._kspaceUrl.replace(':id', ''), _kspace, options)\r\n      .map((r) => r.json());\r\n  }\r\n\r\n  private handleError(error: Response) {\r\n    console.error(error);\r\n    return Observable.throw(error || 'server error');\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/services/kspace.ts\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\n/**\n * @class AsyncSubject<T>\n */\nvar AsyncSubject = (function (_super) {\n    __extends(AsyncSubject, _super);\n    function AsyncSubject() {\n        _super.apply(this, arguments);\n        this.value = null;\n        this.hasNext = false;\n    }\n    AsyncSubject.prototype._subscribe = function (subscriber) {\n        if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    AsyncSubject.prototype._next = function (value) {\n        this.value = value;\n        this.hasNext = true;\n    };\n    AsyncSubject.prototype._complete = function () {\n        var index = -1;\n        var observers = this.observers;\n        var len = observers.length;\n        // optimization to block our SubjectSubscriptions from\n        // splicing themselves out of the observers list one by one.\n        this.isUnsubscribed = true;\n        if (this.hasNext) {\n            while (++index < len) {\n                var o = observers[index];\n                o.next(this.value);\n                o.complete();\n            }\n        }\n        else {\n            while (++index < len) {\n                observers[index].complete();\n            }\n        }\n        this.isUnsubscribed = false;\n        this.unsubscribe();\n    };\n    return AsyncSubject;\n}(Subject_1.Subject));\nexports.AsyncSubject = AsyncSubject;\n//# sourceMappingURL=AsyncSubject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/AsyncSubject.js\n ** module id = 179\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nvar EmptyError = (function (_super) {\n    __extends(EmptyError, _super);\n    function EmptyError() {\n        _super.call(this, 'no elements in sequence');\n        this.name = 'EmptyError';\n    }\n    return EmptyError;\n}(Error));\nexports.EmptyError = EmptyError;\n//# sourceMappingURL=EmptyError.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/EmptyError.js\n ** module id = 188\n ** module chunks = 2\n **/","\"use strict\";\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\nexports.isDate = isDate;\n//# sourceMappingURL=isDate.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/isDate.js\n ** module id = 189\n ** module chunks = 2\n **/","\r\nimport {\r\n  Component,\r\n  Inject,\r\n  Input\r\n} from '@angular/core';\r\n\r\nimport {\r\n  FORM_DIRECTIVES,\r\n  FormBuilder,\r\n  ControlGroup,\r\n  Control,\r\n  AbstractControl\r\n} from '@angular/common';\r\n\r\nimport {\r\n  Router,\r\n  ROUTER_DIRECTIVES,\r\n  ActivatedRoute\r\n} from'@angular/router';\r\n\r\n//interface\r\nimport { Badword } from '../../../interface/badword';\r\n\r\n//services\r\nimport { BadwordService } from '../../../services/badword';\r\nimport { CreateBadwordComponent } from './badword-create';\r\nimport { BadwordListComponent } from './badwords-list';\r\n\r\n\r\n@Component({\r\n  selector: 'badword-update',\r\n  template: require('./client/dev/app/components/back-end/badword/templates/badword-update.html'),\r\n  directives: [\r\n    FORM_DIRECTIVES,\r\n    ROUTER_DIRECTIVES\r\n  ],\r\n  providers: [BadwordService]\r\n})\r\n\r\nexport class UpdateBadwordComponent {\r\n  updateBadwordForm: ControlGroup;\r\n\r\n  id: string;\r\n\r\n  badword: Badword;\r\n  _id: string;\r\n  word: string;\r\n\r\n  constructor(\r\n    @Inject(FormBuilder) fb: FormBuilder,\r\n    @Inject(BadwordService) private _badwordService: BadwordService,\r\n    public router: Router,\r\n    private route: ActivatedRoute) {\r\n\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.id = params['id'];\r\n      });\r\n    this.updateBadwordForm = fb.group({\r\n      \"word\": [\"\"],\r\n      \"_id\":[\"\"],\r\n    });\r\n  }\r\n\r\n  ngOnInit():void {\r\n    this._badwordService.findBadwordById(this.id).subscribe(\r\n      (badword) => {\r\n        this.badword = badword;\r\n        this.word = badword.word;\r\n        this._id = badword._id;\r\n\r\n    },\r\n      (error) => {\r\n        console.log(error.text());\r\n      }\r\n    );\r\n  }\r\n\r\n  updateBadword(badword) {\r\n    this._badwordService.updateBadword(badword).subscribe((badword)=> {\r\n      console.log('update successed');\r\n    },\r\n    (error) => {\r\n      console.log(error.text());\r\n    }\r\n    );\r\n    this.router.navigateByUrl('admin/badwords');\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/badword/badword-update.ts\n **/","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute } from'@angular/router';\r\nimport { FORM_DIRECTIVES, FormBuilder, ControlGroup, Control, AbstractControl  } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'knowledge-update',\r\n  template: require('./client/dev/app/components/back-end/knowledge/templates/knowledge-update.html'),\r\n  directives: [FORM_DIRECTIVES, ROUTER_DIRECTIVES],\r\n  providers: [KnowledgeService]\r\n})\r\n\r\nexport class UpdateKnowledgeComponent {\r\n  updateKnowledgeForm: ControlGroup;\r\n\r\n  id: string;\r\n\r\n  knowledge: Knowledge;\r\n  _id: string;\r\n  name: string;\r\n  description: string;\r\n\r\n  constructor(\r\n    @Inject(FormBuilder) fb: FormBuilder,\r\n    @Inject(KnowledgeService) private _knowledgeService: KnowledgeService,\r\n    private router: Router,\r\n    private route: ActivatedRoute) {\r\n\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.id = params['id'];\r\n      });\r\n\r\n    this.updateKnowledgeForm = fb.group({\r\n      \"name\": [\"\"],\r\n      \"description\": [\"\"],\r\n      \"_id\":[\"\"],\r\n    });\r\n  }\r\n\r\n  ngOnInit():void {\r\n    this._knowledgeService.findKnowledgeById(this.id).subscribe(\r\n      (knowledge) => {\r\n        this.knowledge = knowledge;\r\n        this.name = knowledge.name;\r\n        this.description = knowledge.description;\r\n        this._id = knowledge._id;\r\n\r\n    },\r\n      (error) => {\r\n        console.log(error.text());\r\n      }\r\n    );\r\n  }\r\n\r\n  updateKnowledge(knowledge) {\r\n    this._knowledgeService.updateKnowledge(knowledge).subscribe((knowledge)=> {\r\n      console.log('update successed');\r\n    },\r\n    (error) => {\r\n      console.log(error.text());\r\n    }\r\n    );\r\n    this.router.navigateByUrl('admin/knowledges');\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/knowledge/knowledge-update.ts\n **/","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Request } from '../../../interface/request';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\n\r\nimport { RequestService } from '../../../services/requests';\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\n\r\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute} from'@angular/router';\r\nimport { FORM_DIRECTIVES, FormBuilder, ControlGroup, Control, AbstractControl  } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'request-update-cli',\r\n  template: require('./client/dev/app/components/back-end/request/templates/request-update.html'),\r\n  directives: [FORM_DIRECTIVES, ROUTER_DIRECTIVES]\r\n})\r\n\r\nexport class UpdateRequestComponent {\r\n  updateRequestFormCli: ControlGroup;\r\n\r\n  knowledges: Knowledge[];\r\n\r\n  id: string;\r\n\r\n  request: Request;\r\n  _id: string;\r\n  title: string;\r\n  description: string;\r\n  knowledgeId: string;\r\n\r\n  constructor(\r\n    @Inject(FormBuilder) fb: FormBuilder,\r\n    @Inject(RequestService) private _requestService: RequestService,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    @Inject(KnowledgeService)\r\n    private _knowledgeService: KnowledgeService) {\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.id = params['id'];\r\n      });\r\n\r\n    this.updateRequestFormCli = fb.group({\r\n      \"_id\": [\"\"],\r\n      \"title\": [\"\"],\r\n      \"description\": [\"\"],\r\n      \"knowledgeId\": [\"\"]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //get all back.knowledge\r\n    this._knowledgeService.getAllKnowledges().subscribe((knowledges) => {\r\n      this.knowledges = this._knowledgeService.getChildFromParent(knowledges);\r\n    });\r\n\r\n    this._requestService.getRequestById(this.id).subscribe(\r\n      (request) => {\r\n        this.request = request;\r\n        this.title = request.title;\r\n        this.description = request.description;\r\n        this._id = request._id;\r\n      },\r\n      (error) => {\r\n        console.log(error.text());\r\n      }\r\n    );\r\n  }\r\n\r\n  updateRequest(request) {\r\n    console.log(request);\r\n    this._requestService.updateRequest(request).subscribe((request) => {\r\n      console.log('update successed');\r\n    },\r\n      (error) => {\r\n        console.log(error.text());\r\n      }\r\n    );\r\n    this.router.navigateByUrl('admin/requests');\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/request/request-update.ts\n **/","import { Component, OnInit,OnChanges, AfterViewInit, DoCheck, Input } from '@angular/core';\r\nimport { ROUTER_DIRECTIVES, Router, ActivatedRoute} from '@angular/router';\r\nimport { Request } from '../../../interface/request';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\n\r\nimport { RequestService } from '../../../services/requests';\r\n\r\n@Component({\r\n  selector: 'request-search-cli',\r\n  template: require('./client/dev/app/components/front-end/request/templates/request-search.html'),\r\n  styles: [require('./client/dev/app/components/front-end/request/styles/request.css')],\r\n  directives: [ROUTER_DIRECTIVES]\r\n})\r\n\r\nexport class RequestCategoryComponent {\r\n  @Input() search: string;\r\n  pageTitle: string = 'Welcome to Knowledge Sharing Network';\r\n\r\n  id: string;\r\n  type: string;\r\n  changeRoute: boolean = false;\r\n\r\n\r\n  constructor(private _requestService: RequestService, public router: Router, private route: ActivatedRoute) {\r\n   this.route.params.subscribe(params => {\r\n                          this.id = params['id'];\r\n                          this.type = params['type'];\r\n                        });\r\n  }\r\n  requests: Request[];\r\n  knowledges: Knowledge[];\r\n\r\n  ngOnInit(): void {\r\n      this.loadRequest(s);\r\n  }\r\n\r\n  loadRequests():void {\r\n      //get templates from children category\r\n    if (this.type === \"subcategory\") {\r\n      this._requestService.getRequestByKnowledgeId(this.id).subscribe(\r\n        (requests) => {\r\n          //format date\r\n          var formatDate = function (date) {\r\n            if (date) {\r\n              var newDate, day, month, year;\r\n              year = date.substr(0, 4);\r\n              month = date.substr(5, 2);\r\n              day = date.substr(8, 2);\r\n              return newDate = day + '/' + month + '/' + year;\r\n            }\r\n          }\r\n          for (var i = 0; i < requests.length; i++) {\r\n            requests[i].createdAt = formatDate(requests[i].createdAt);\r\n            requests[i].modifiedDate = formatDate(requests[i].modifiedDate);\r\n          }\r\n          this.requests = requests;\r\n        });\r\n    }\r\n\r\n    //get templates from parent category\r\n    if (this.type === \"category\") {\r\n      this._requestService.getKnowledgeByParent(this.id).subscribe(\r\n        (knowledges) => {\r\n          var formatDate = function (date) {\r\n            if (date) {\r\n              var newDate, day, month, year;\r\n              year = date.substr(0, 4);\r\n              month = date.substr(5, 2);\r\n              day = date.substr(8, 2);\r\n              return newDate = day + '/' + month + '/' + year;\r\n            }\r\n          };\r\n          var a = [];\r\n          this.knowledges = knowledges;\r\n          for (var i = 0; i < this.knowledges.length; i++) {\r\n            this._requestService.getRequestByKnowledgeId(this.knowledges[i]._id).subscribe(\r\n              (requests) => {\r\n                //for each child back.knowledge get requests\r\n                for (var j = 0; j < requests.length; j++) {\r\n                  a.push(requests[j]);\r\n                }\r\n\r\n                for (var i = 0; i < a.length; i++) {\r\n                  a[i].createdAt = formatDate(requests[i].createdAt);\r\n                  a[i].modifiedDate = formatDate(requests[i].modifiedDate);\r\n                }\r\n                this.requests = a;\r\n              });\r\n          }\r\n        },\r\n        (Error) => {\r\n          console.log(Error);\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/request/request-search.ts\n **/","import {\r\n  Component,\r\n  EventEmitter,\r\n  OnInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Input,\r\n  Output\r\n} from '@angular/core';\r\n\r\ndeclare var Notification;\r\n\r\n@Component({\r\n  selector: 'push-notification',\r\n  styles: [':host { display: none; }'],\r\n  template: ''\r\n})\r\n\r\nexport class PushNotificationComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input() public title: string;\r\n  @Input() public body: string;\r\n  @Input() public icon: string;\r\n  @Input() public sound: string;\r\n  @Input() public data: any;\r\n  @Input() public tag: string;\r\n  @Input() public dir: string = 'auto';\r\n  @Input() public lang: string = 'en-US';\r\n  @Input() public renotify: boolean = false;\r\n  @Input() public sticky: boolean = false;\r\n  @Input() public vibrate: Array<number>;\r\n  @Input() public noscreen: boolean = false;\r\n  @Input() public silent: boolean = true;\r\n  @Input() public closeDelay: number = 0;\r\n\r\n  @Output('load') public onLoad: EventEmitter<any> = new EventEmitter();\r\n  @Output('show') public onShow: EventEmitter<any> = new EventEmitter();\r\n  @Output('close') public onClose: EventEmitter<any> = new EventEmitter();\r\n  @Output('error') public onError: EventEmitter<any> = new EventEmitter();\r\n  @Output('action') public onClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  public checkCompatibility () {\r\n    return !!('Notification' in window);\r\n  }\r\n\r\n  public isPermissionGranted (permission) {\r\n    return permission === 'granted';\r\n  }\r\n\r\n  public requestPermission () {\r\n    return Notification.requestPermission();\r\n  }\r\n\r\n  public show () {\r\n    if (!this.checkCompatibility()) {\r\n        return console.log('Notification API not available in this browser.');\r\n    }\r\n\r\n    return this.requestPermission()\r\n      .then((permission) => this.isPermissionGranted(permission))\r\n      .then(() => this.create());\r\n  }\r\n\r\n  public create () {\r\n    let notification = new Notification(this.title, {\r\n      dir: this.dir,\r\n      lang: this.lang,\r\n      data: this.data,\r\n      tag: this.tag,\r\n      body: this.body,\r\n      icon: this.icon,\r\n      silent: this.silent,\r\n      sound: this.sound,\r\n      renotify: this.renotify,\r\n      sticky: this.sticky,\r\n      vibrate: this.vibrate,\r\n      noscreen: this.noscreen\r\n    });\r\n\r\n    this.attachEventHandlers(notification);\r\n    this.close(notification);\r\n\r\n    return notification;\r\n  }\r\n\r\n  public close (notification): void {\r\n    if (this.closeDelay) {\r\n      setTimeout(() => {\r\n        notification.close();\r\n      }, this.closeDelay);\r\n    } else {\r\n      notification.close();\r\n    }\r\n  }\r\n\r\n  public closeAll (): void {\r\n    Notification.close();\r\n  }\r\n\r\n  attachEventHandlers (notification): void {\r\n    notification.onshow = () => {\r\n      this.onShow.emit({ notification });\r\n    };\r\n\r\n    notification.onclick = (event) => {\r\n      this.onClick.emit({ event, notification });\r\n    };\r\n\r\n    notification.onerror = () => {\r\n      this.onError.emit({ notification });\r\n    };\r\n\r\n    notification.onclose = () => {\r\n      this.onClose.emit({ notification });\r\n    };\r\n  }\r\n\r\n  public ngOnInit (): void {\r\n    this.onLoad.emit({});\r\n  }\r\n\r\n  public ngOnDestroy (): void {\r\n    this.closeAll();\r\n  }\r\n\r\n  public ngOnChanges(): void {\r\n  }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/shared/notification.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { Offer } from '../interface/offer';\r\nimport { Http, Response, Headers,RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport  class OfferService {\r\n  private _Url = '/api/offers/:id';\r\n  constructor(private _http: Http) { }\r\n\r\n\r\n  addOffer(offer: Offer):Observable<any>{\r\n    let header = new Headers;\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _offer = JSON.stringify({\r\n      price: offer.price,\r\n      requestId: offer.requestId,\r\n      numberOfLecture: offer.numOfLecture,\r\n      message: offer.message,\r\n      user: offer.user\r\n    });\r\n    //console.log(_offer);\r\n    return this._http\r\n              .post(this._Url.replace(':id',''),_offer,options)\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  getOfferByRequestId(id: string):Observable<any>{\r\n    return this._http.post(this._Url.replace(':id',id),'')\r\n      .map((r) => r.json())\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error: Response) {\r\n    console.error(error);\r\n    return Observable.throw(error.json().error || 'Server error');\r\n  }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/services/request-offer.ts\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar isScheduler_1 = require('../util/isScheduler');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    observables.unshift(this);\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n/* tslint:enable:max-line-length */\n/**\n * Combines the values from observables passed as arguments. This is done by subscribing\n * to each observable, in order, and collecting an array of each of the most recent values any time any of the observables\n * emits, then either taking that array and passing it as arguments to an option `project` function and emitting the return\n * value of that, or just emitting the array of recent values directly if there is no `project` function.\n * @param {...Observable} observables the observables to combine\n * @param {function} [project] an optional function to project the values from the combined recent values into a new value for emission.\n * @return {Observable} an observable of other projected values from the most recent values from each observable, or an array of each of\n * the most recent values from each observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatestStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new CombineLatestOperator(project));\n}\nexports.combineLatestStatic = combineLatestStatic;\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n        this.toRespond = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        var toRespond = this.toRespond;\n        toRespond.push(toRespond.length);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n        if (toRespond.length === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values);\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/combineLatest.js\n ** module id = 280\n ** module chunks = 2\n **/","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins this Observable with multiple other Observables by subscribing to them\n * one at a time, starting with the source, and merging their results into the\n * output Observable. Will wait for each Observable to complete before moving\n * on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = timer.concat(sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = timer1.concat(timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} other An input Observable to concatenate after the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @method concat\n * @owner Observable\n */\nfunction concat() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return concatStatic.apply(void 0, [this].concat(observables));\n}\nexports.concat = concat;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from every\n * given input Observable after the current Observable.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * Joins multiple Observables together by subscribing to them one at a time and\n * merging their results into the output Observable. Will wait for each\n * Observable to complete before moving on to the next.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Concatenate 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {Observable} input1 An input Observable to concatenate with others.\n * @param {Observable} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional Scheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nfunction concatStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var scheduler = null;\n    var args = observables;\n    if (isScheduler_1.isScheduler(args[observables.length - 1])) {\n        scheduler = args.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatStatic = concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/concat.js\n ** module id = 281\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar Subscriber_1 = require('../Subscriber');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar iterator_1 = require('../symbol/iterator');\n/**\n * @param observables\n * @return {Observable<R>}\n * @method zip\n * @owner Observable\n */\nfunction zipProto() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    observables.unshift(this);\n    return zipStatic.apply(this, observables);\n}\nexports.zipProto = zipProto;\n/* tslint:enable:max-line-length */\n/**\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nfunction zipStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = observables[observables.length - 1];\n    if (typeof project === 'function') {\n        observables.pop();\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new ZipOperator(project));\n}\nexports.zipStatic = zipStatic;\nvar ZipOperator = (function () {\n    function ZipOperator(project) {\n        this.project = project;\n    }\n    ZipOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ZipSubscriber(subscriber, this.project));\n    };\n    return ZipOperator;\n}());\nexports.ZipOperator = ZipOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipSubscriber = (function (_super) {\n    __extends(ZipSubscriber, _super);\n    function ZipSubscriber(destination, project, values) {\n        if (values === void 0) { values = Object.create(null); }\n        _super.call(this, destination);\n        this.index = 0;\n        this.iterators = [];\n        this.active = 0;\n        this.project = (typeof project === 'function') ? project : null;\n        this.values = values;\n    }\n    ZipSubscriber.prototype._next = function (value) {\n        var iterators = this.iterators;\n        var index = this.index++;\n        if (isArray_1.isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[iterator_1.$$iterator] === 'function') {\n            iterators.push(new StaticIterator(value[iterator_1.$$iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value, index));\n        }\n    };\n    ZipSubscriber.prototype._complete = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        this.active = len;\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    };\n    ZipSubscriber.prototype.notifyInactive = function () {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ZipSubscriber.prototype.checkIterators = function () {\n        var iterators = this.iterators;\n        var len = iterators.length;\n        var destination = this.destination;\n        // abort if not all of them have values\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        var shouldComplete = false;\n        var args = [];\n        for (var i = 0; i < len; i++) {\n            var iterator = iterators[i];\n            var result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.project) {\n            this._tryProject(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    };\n    ZipSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return ZipSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ZipSubscriber = ZipSubscriber;\nvar StaticIterator = (function () {\n    function StaticIterator(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    StaticIterator.prototype.hasValue = function () {\n        return true;\n    };\n    StaticIterator.prototype.next = function () {\n        var result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    };\n    StaticIterator.prototype.hasCompleted = function () {\n        var nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    };\n    return StaticIterator;\n}());\nvar StaticArrayIterator = (function () {\n    function StaticArrayIterator(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    StaticArrayIterator.prototype[iterator_1.$$iterator] = function () {\n        return this;\n    };\n    StaticArrayIterator.prototype.next = function (value) {\n        var i = this.index++;\n        var array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { done: true };\n    };\n    StaticArrayIterator.prototype.hasValue = function () {\n        return this.array.length > this.index;\n    };\n    StaticArrayIterator.prototype.hasCompleted = function () {\n        return this.array.length === this.index;\n    };\n    return StaticArrayIterator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ZipBufferIterator = (function (_super) {\n    __extends(ZipBufferIterator, _super);\n    function ZipBufferIterator(destination, parent, observable, index) {\n        _super.call(this, destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.index = index;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    ZipBufferIterator.prototype[iterator_1.$$iterator] = function () {\n        return this;\n    };\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    ZipBufferIterator.prototype.next = function () {\n        var buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    };\n    ZipBufferIterator.prototype.hasValue = function () {\n        return this.buffer.length > 0;\n    };\n    ZipBufferIterator.prototype.hasCompleted = function () {\n        return this.buffer.length === 0 && this.isComplete;\n    };\n    ZipBufferIterator.prototype.notifyComplete = function () {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    };\n    ZipBufferIterator.prototype.subscribe = function (value, index) {\n        return subscribeToResult_1.subscribeToResult(this, this.observable, this, index);\n    };\n    return ZipBufferIterator;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=zip.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/zip.js\n ** module id = 283\n ** module chunks = 2\n **/","\"use strict\";\nvar isArray_1 = require('../util/isArray');\nfunction isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\nexports.isNumeric = isNumeric;\n;\n//# sourceMappingURL=isNumeric.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/isNumeric.js\n ** module id = 287\n ** module chunks = 2\n **/","\"use strict\";\r\nvar core_1 = require('@angular/core');\r\nvar PaginationService = (function () {\r\n    function PaginationService() {\r\n        this.change = new core_1.EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    Object.defineProperty(PaginationService.prototype, \"defaultId\", {\r\n        get: function () { return this.DEFAULT_ID; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (!instance.id) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            this.change.emit(instance.id);\r\n        }\r\n        else {\r\n            var changed = this.updateInstance(instance);\r\n            if (changed) {\r\n                this.change.emit(instance.id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\r\nexports.PaginationService = PaginationService;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-pagination/dist/pagination-service.js\n ** module id = 309\n ** module chunks = 2\n **/","import { Component, OnInit,ViewChild, ElementRef, AfterViewInit } from '@angular/core';\r\nimport { ROUTER_DIRECTIVES, Router } from '@angular/router';\r\nimport {FORM_DIRECTIVES, FormBuilder, ControlGroup, Control } from '@angular/common';\r\nimport  { Badword} from '../../../interface/badword';\r\nimport  { BadwordService} from '../../../services/badword';\r\nimport  { UpdateBadwordComponent} from './badword-update';\r\nimport { PaginationControlsCmp, PaginatePipe, PaginationService,IPaginationInstance } from 'ng2-pagination';\r\nimport {StringFilterPipe} from '../shared/filter';\r\n\r\n@Component({\r\n  selector: 'badword-list',\r\n  template: require('./client/dev/app/components/back-end/badword/templates/badword-list.html'),\r\n  directives: [PaginationControlsCmp,UpdateBadwordComponent,ROUTER_DIRECTIVES,FORM_DIRECTIVES],\r\n  providers: [BadwordService,PaginationService],\r\n  pipes: [PaginatePipe,StringFilterPipe]\r\n})\r\nexport class BadwordListComponent {\r\n  pageTitle: string = 'Badword List';\r\n  errorMessage: string;\r\n  badwordForm: ControlGroup;\r\n  badwords: Badword[];\r\n  public filter: string = '';\r\n  public maxSize: number = 7;\r\n  public directionLinks: boolean = true;\r\n  public autoHide: boolean = false;\r\n  constructor(fb: FormBuilder,private badwordService: BadwordService,private router: Router){\r\n    this.badwordForm = fb.group({\r\n      \"word\": [\"\"],\r\n    });\r\n  }\r\n  ngOnInit() {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll():void {\r\n    this.badwordService\r\n        .getAllBadwords()\r\n        .subscribe((badwords) => {\r\n          this.badwords=badwords;\r\n        });\r\n  }\r\n\r\n  private deleteBadword(id):void {\r\n    this.badwordService\r\n      .deleteBadword(id)\r\n      .subscribe(() => {\r\n        this.badwords.forEach((t, i) => {\r\n          if (t._id === id)\r\n            return this.badwords.splice(i, 1);\r\n        });\r\n      })\r\n  }\r\n\r\n  findBadwordById(id):void {\r\n    this.badwordService\r\n        .findBadwordById(id)\r\n        .subscribe((badwords) => {\r\n          return badwords;\r\n        });\r\n  }\r\n\r\n  addBadword(word):void {\r\n    this.badwordService\r\n        .addBadword(word)\r\n        .subscribe((word) => {\r\n          this.badwords.push(word);\r\n          (<Control>this.badwordForm.controls[\"word\"]).updateValue(\"\");\r\n        });\r\n  }\r\n\r\n  public config: IPaginationInstance = {\r\n        id: 'advanced',\r\n        itemsPerPage: 10,\r\n        currentPage: 1\r\n    };\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/badword/badwords-list.ts\n **/","import {\r\n  Component,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n  ROUTER_DIRECTIVES,\r\n  Router\r\n} from '@angular/router';\r\n\r\nimport {\r\n  FORM_DIRECTIVES,\r\n  FormBuilder,\r\n  ControlGroup,\r\n  Control\r\n} from '@angular/common';\r\n\r\n\r\nimport { Knowledge } from '../../../interface/knowledge';\r\n\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\nimport { UpdateKnowledgeComponent } from './knowledge-update';\r\nimport { CreateSubCategoryComponent } from './sub-knowledge-create';\r\nimport { AuthService} from '../../../services/auth';\r\nimport { CreateKnowledgeComponent } from './knowledge-create';\r\nimport { PaginationControlsCmp, PaginatePipe, PaginationService,IPaginationInstance } from 'ng2-pagination';\r\nimport {StringFilterPipe} from '../shared/filter';\r\ndeclare var $:any\r\n@Component({\r\n  selector: 'knowledge-list',\r\n  template: require('./client/dev/app/components/back-end/knowledge/templates/knowledge-list.html'),\r\n  directives: [\r\n    UpdateKnowledgeComponent,\r\n    CreateSubCategoryComponent,\r\n    ROUTER_DIRECTIVES,PaginationControlsCmp],\r\n  providers: [KnowledgeService,PaginationService],\r\n  pipes: [PaginatePipe,StringFilterPipe]\r\n})\r\n\r\nexport class KnowledgeListComponent {\r\n  pageTitle: string = 'Knowledge List';\r\n  errorMessage: string;\r\n  knowledgeForm: ControlGroup;\r\n  subCategoryForm: ControlGroup;\r\n  knowledges: Knowledge[];\r\n\r\n  constructor(fb: FormBuilder,private _knowledgeService: KnowledgeService){\r\n    this.knowledgeForm = fb.group({\r\n      \"name\": [\"\"],\r\n      \"description\": [\"\"],\r\n    });\r\n    this.subCategoryForm = fb.group({\r\n      \"name\": [\"\"],\r\n      \"description\": [\"\"],\r\n      \"parent\": [\"\"]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._knowledgeService.getAllKnowledges().subscribe((knowledges) => {\r\n      console.log(knowledges);\r\n      /*this.knowledges = this._knowledgeService.getChildFromParent(knowledges);*/\r\n      this.knowledges = this._knowledgeService.getChildFromParent(knowledges);\r\n    });\r\n\r\n  }\r\n  private deleteKnowledge(id):void {\r\n    this._knowledgeService\r\n      .deleteKnowledge(id)\r\n      .subscribe(() => {\r\n        this.knowledges.forEach((t, i) => {\r\n          if (t._id === id)\r\n            return this.knowledges.splice(i, 1);\r\n        });\r\n      })\r\n  }\r\n  addKnowledge(knowledge):void {\r\n    this._knowledgeService\r\n        .addKnowledge(knowledge)\r\n        .subscribe((m) => {\r\n          this.knowledges.push(m);\r\n          (<Control>this.knowledgeForm.controls[\"name\"]).updateValue(\"\");\r\n          (<Control>this.knowledgeForm.controls[\"description\"]).updateValue(\"\");\r\n        });\r\n  }\r\n\r\n  addSubKnowledge(knowledge):void {\r\n    this._knowledgeService\r\n        .addKnowledge(knowledge)\r\n        .subscribe((m) => {\r\n          (<Control>this.subCategoryForm.controls[\"name\"]).updateValue(\"\");\r\n          (<Control>this.subCategoryForm.controls[\"description\"]).updateValue(\"\");\r\n            for(var i=0;i<this.knowledges.length;i++){\r\n              if(this.knowledges[i]._id===m.parent){\r\n                console.log(this.knowledges[i]._id);\r\n                var a = [];\r\n                a.push(m);\r\n                this.knowledges[i][\"subCategory\"]=a;\r\n              }\r\n            }\r\n        });\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/knowledge/knowledges-list.ts\n **/","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { ROUTER_DIRECTIVES, Router } from '@angular/router';\r\nimport {FORM_DIRECTIVES, FormBuilder, ControlGroup, Control } from '@angular/common';\r\n\r\n\r\nimport { Request } from '../../../interface/request';\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\nimport { RequestService} from '../../../services/requests';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\nimport { AuthService} from '../../../services/auth';\r\n\r\nimport { OfferService } from '../../../services/request-offer';\r\n\r\nimport { CreateRequestComponent } from './request-create';\r\nimport { CreateOfferComponent  } from '../../front-end/offer/offer-create';\r\nimport { UpdateRequestComponent } from './request-update';\r\nimport { PaginationControlsCmp, PaginatePipe, PaginationService,IPaginationInstance } from 'ng2-pagination';\r\nimport {StringFilterPipe} from '../shared/filter';\r\n@Component({\r\n  selector: 'request-list',\r\n  template: require('./client/dev/app/components/back-end/request/templates/request-list.html'),\r\n  directives: [UpdateRequestComponent,ROUTER_DIRECTIVES,PaginationControlsCmp,ROUTER_DIRECTIVES,FORM_DIRECTIVES],\r\n  providers: [RequestService,PaginationService],\r\n  pipes: [PaginatePipe,StringFilterPipe]\r\n})\r\n\r\nexport class RequestListComponent {\r\n  pageTitle: string = 'Request List';\r\n  errorMessage: string;\r\n  requests:Request[];\r\n  user:string;\r\n  roleToken:string;\r\n  requestForm: ControlGroup;\r\n  public filter: string = '';\r\n  knowledges: Knowledge[];\r\n\r\n  constructor(@Inject(FormBuilder) fb: FormBuilder, @Inject(RequestService) private _requestService: RequestService, private _knowledgeService: KnowledgeService,\r\n                    private _authService: AuthService) {\r\n    this.user = localStorage.getItem('username');\r\n    this.roleToken = localStorage.getItem('userrole');\r\n\r\n    this.requestForm = fb.group({\r\n      \"knowledgeId\": [\"\"],\r\n      \"title\": [\"\"],\r\n      \"description\": [\"\"],\r\n      \"user\": [\"\"]\r\n    });\r\n    this._knowledgeService.getAllKnowledges().subscribe((knowledges) => {\r\n      this.knowledges = this._knowledgeService.getChildFromParent(knowledges);\r\n    });\r\n  }\r\n\r\n  addRequest(request) {\r\n    this._requestService.addRequest(request).subscribe((request)=> {\r\n      this.requests.push(request);\r\n      (<Control>this.requestForm.controls[\"title\"]).updateValue(\"\");\r\n      (<Control>this.requestForm.controls[\"description\"]).updateValue(\"\");\r\n      (<Control>this.requestForm.controls[\"knowledgeId\"]).updateValue(\"\");\r\n    },\r\n    (error) => {\r\n      console.log(error.text());\r\n    }\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._requestService.getAllRequests().subscribe((requests) => {\r\n      var formatDate = function (date){\r\n        if(date) {\r\n          var newDate, day, month, year;\r\n          year = date.substr(0, 4);\r\n          month = date.substr(5, 2);\r\n          day = date.substr(8, 2);\r\n          return newDate = day + '/' + month + '/' + year;\r\n        }\r\n      };\r\n\r\n      for (var i = 0; i < requests.length; i++) {\r\n        requests[i].createdAt = formatDate(requests[i].createdAt);\r\n        requests[i].modifiedDate = formatDate(requests[i].modifiedDate);\r\n      }\r\n      this.requests = requests;\r\n    });\r\n  }\r\n\r\n  private deleteRequest(id):void {\r\n    this._requestService\r\n      .deleteRequest(id)\r\n      .subscribe(() => {\r\n        this.requests.forEach((t, i) => {\r\n          if (t._id === id)\r\n            return this.requests.splice(i, 1);\r\n        });\r\n      })\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/request/requests-list.ts\n **/","import {\r\n  Component,\r\n  OnInit,\r\n  Pipe,\r\n  PipeTransform,\r\n  Inject\r\n} from '@angular/core';\r\nimport {\r\n  ROUTER_DIRECTIVES,\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  Validators,\r\n  FormBuilder,\r\n  ControlGroup,\r\n  Control,\r\n  FORM_DIRECTIVES,\r\n} from '@angular/common';\r\nimport {\r\n  DataTable,\r\n  Column,\r\n  Header,\r\n  MultiSelect,\r\n  Footer,\r\n  InputText\r\n} from 'primeng/primeng';\r\n\r\nimport  { User } from '../../../interface/user';\r\n\r\nimport  { UserService} from '../../../services/users';\r\nimport  { AuthService} from '../../../services/auth';\r\nimport { PaginationControlsCmp, PaginatePipe, PaginationService,IPaginationInstance } from 'ng2-pagination';\r\nimport {StringFilterPipe} from '../shared/filter';\r\n@Component({\r\n  selector: 'user-list',\r\n  template: require('./client/dev/app/components/back-end/users/templates/user-list.html'),\r\n  directives: [ROUTER_DIRECTIVES,PaginationControlsCmp,ROUTER_DIRECTIVES,FORM_DIRECTIVES],\r\n  providers: [UserService,PaginationService],\r\n  pipes: [PaginatePipe,StringFilterPipe]\r\n})\r\n\r\nexport class UserListComponent {\r\n  pageTitle: string = 'users';\r\n  errorMessage: string;\r\n  roleToken:string;\r\n  users: User[];\r\n  public filter: string = '';\r\n  numOfUser: number = 0;\r\n  userForm: ControlGroup;\r\n  constructor(@Inject(FormBuilder) fb:FormBuilder,private _userService: UserService, private _auth:AuthService, private router: Router){\r\n    this.userForm = fb.group({\r\n      firstName : [\"\"],\r\n      lastName : [\"\"],\r\n      displayName: [\"\"],\r\n      birthday: [\"\"],\r\n      username: [\"\",Validators.required],\r\n      password: [\"\",Validators.required],\r\n      email: [\"\",Validators.required],\r\n      role: [\"\",Validators.required],\r\n      ownKnowledgeId: [\"\"],\r\n      interestedKnowledgeId: [\"\"],\r\n      onlineTime: [\"\"]\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._userService\r\n      .getAllUsers()\r\n      .then(\r\n      (users) => {\r\n        for (var i = 0; i < users.length; i++) {\r\n          if (users[i].birthday) {\r\n            users[i].birthday = new Date(users[i].birthday);\r\n          }\r\n          users[i].createdAt = new Date(users[i].createdAt);\r\n          if (users[i].updatedAt) {\r\n            users[i].updatedAt = new Date(users[i].updatedAt);\r\n          }\r\n        }\r\n        this.users = users;\r\n        this.numOfUser = i;\r\n      },\r\n      (error) => {\r\n        this.errorMessage = error.message;\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/users/user-list.ts\n **/","/**\r\n * Created by GiangDH on 5/18/16.\r\n */\r\nimport { Component,OnInit } from '@angular/core';\r\nimport { ROUTER_DIRECTIVES } from '@angular/router';\r\n\r\n\r\n@Component ({\r\n  selector: 'home',\r\n  template:require('./client/dev/app/components/front-end/home/templates/home.html'),\r\n  directives: [\r\n    ROUTER_DIRECTIVES\r\n  ]\r\n})\r\n\r\nexport class HomeComponent {\r\n  pageTitle: string = 'Welcome to Knowledge Sharing Network';\r\n  ngOinit(): void{\r\n    console.log(\"what the fuck\");\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/home/home.ts\n **/","/**\r\n * Created by GiangDH on 7/9/16.\r\n */\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute } from '@angular/router';\r\nimport { KSpaceService } from '../../../services/kspace';\r\n\r\n@Component ({\r\n  template: `\r\n      <div class=\"container mg-top-50\">\r\n      <button (click)=\"accessRoom()\">{{accessRoomBtn}}</button>\r\n      </div>\r\n    `,\r\n  directives: [ROUTER_DIRECTIVES]\r\n})\r\n\r\nexport class KSpaceInfoComponent implements OnInit {\r\n  accessRoomBtn: string = 'Access Room';\r\n  kspaceId: string;\r\n\r\n  constructor( private router: Router, private route: ActivatedRoute) {\r\n    this.route.params.subscribe(params => {\r\n      this.kspaceId = params['id'];\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  accessRoom(): void {\r\n    var specs = 'resizable=yes, fullscreen=yes';\r\n    var name = '_blank';\r\n    var url = '/room/'+this.kspaceId;\r\n    window.open(url, name ,specs);\r\n    //this.router.navigateByUrl('/kspace/room/'+this.kspaceId);\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/kspace/kspace-info.ts\n **/","/**\r\n * Created by GiangDH on 7/9/16.\r\n */\r\nimport { Component, OnInit, OnDestroy, Pipe, PipeTransform } from '@angular/core';\r\nimport { KSpace } from '../../../interface/kspace';\r\nimport { KSpaceService } from '../../../services/kspace';\r\nimport { Router, ROUTER_DIRECTIVES } from '@angular/router';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"container mg-top-50\">\r\n          <!-- list all-->\r\n          <div class=\"search-container\">\r\n             <form role=\"search\">\r\n                     <div class=\"search-component\">\r\n                        <input #text type=\"text\" class=\"form-control search-input\" placeholder=\"Nhập nội dung tìm kiếm\">\r\n                        <button (click)=\"search(text.value)\" type=\"submit\"\r\n                        class=\"search-button fa fa-search fa-2x\"\r\n                        aria-hidden=\"true\"></button>\r\n                     </div>\r\n              </form>\r\n           </div><!-- /.search-component -->\r\n          <div *ngIf=\"kspaces\" id=\"kspace-list-component\" class=\"col-md-12\">\r\n            <div class=\"panel panel-default card-rq\" *ngFor=\"let kspace of kspaces\">\r\n              <div class=\"panel-body\">\r\n                <a [routerLink]=\"['/kspace/info/',kspace._id]\" >\r\n                  <p class=\"lead\">{{kspace.requestTitle}}</p>\r\n                </a>\r\n                <div class=\"col-xs-12 col-sm-6 col-md-6 col-lg-6 fixEfMenu\">\r\n                  Người yêu cầu : {{kspace.learner}}\r\n                </div>\r\n                <div class=\"col-xs-12 col-sm-6 col-md-6 col-lg-6 fixEfMenu\">\r\n                  Người dạy : {{kspace.lecturer}}\r\n                </div>\r\n                <div class=\"col-xs-12 col-sm-6 col-md-6 col-lg-6 fixEfMenu\">\r\n                  Trạng thái : ddddddd\r\n                </div>\r\n                <div class=\"col-xs-12 col-sm-6 col-md-6 col-lg-6 text-left fixEfMenu\">\r\n                  Ngày tạo : {{kspace.createdAt | date:\"dd/MM/yyyy\"}}\r\n                </div>\r\n            </div>\r\n          </div>\r\n    </div><!-- /.container -->\r\n    `,\r\n  directives: [\r\n    ROUTER_DIRECTIVES\r\n  ],\r\n  styles: [require('./client/dev/app/components/front-end/kspace/styles/kspace-list.css')]\r\n})\r\n\r\nexport class KSpaceListComponent{\r\n  kspaces: KSpace[];\r\n  errorMessage: string;\r\n  constructor(\r\n    private _kspaceService: KSpaceService,\r\n    private router: Router\r\n  ){}\r\n  ngOnInit():void {\r\n    console.log('dmc');\r\n    this._kspaceService\r\n      .getAllKSpace()\r\n      .subscribe((kspaces) => {\r\n        console.log(kspaces);\r\n          for (var i = 0; i < kspaces.length; i++) {\r\n            kspaces[i].createdAt = new Date(kspaces[i].createdAt);\r\n          }\r\n          this.kspaces = kspaces;\r\n        },\r\n        (error) => {\r\n          this.errorMessage = error.message;\r\n          console.log(error);\r\n        });\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/kspace/kspace-list.ts\n **/","import { Component, OnInit, Inject} from '@angular/core';\r\nimport { Request } from '../../../interface/request';\r\nimport { RequestService } from '../../../services/requests';\r\nimport { AuthService } from '../../../services/auth';\r\nimport { KSpaceService } from '../../../services/kspace';\r\nimport { WebRCTService } from './rtc-services';\r\n\r\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute } from'@angular/router';\r\n\r\nimport {\r\n  Validators,\r\n  FormBuilder,\r\n  ControlGroup,\r\n  Control,\r\n  FORM_DIRECTIVES,\r\n} from '@angular/common';\r\n\r\n//import { ChatComponent } from './chat';\r\nimport { ChalkBoardComponent } from './chalkboard';\r\n\r\ndeclare var SimpleWebRTC: any;\r\ndeclare var $: any;\r\ndeclare var io: any;\r\n\r\n\r\n\r\n@Component ({\r\n  selector: 'kspace',\r\n  template:require('./client/dev/app/components/front-end/kspace/templates/kspace.html'),\r\n  styles: [require('./client/dev/app/components/front-end/kspace/styles/kspace.css')],\r\n  directives: [\r\n     ROUTER_DIRECTIVES,\r\n     FORM_DIRECTIVES,\r\n     ChalkBoardComponent\r\n  ],\r\n  providers: [\r\n    WebRCTService\r\n  ]\r\n})\r\n\r\nexport class KSpaceComponent {\r\n    id: string;\r\n    user: string;\r\n    username: string;\r\n    kspace: any;\r\n    lecturer: string;\r\n    learner: string;\r\n\r\n    messages: string[] = [];\r\n\r\n    constructor(\r\n      public router:Router,\r\n      private route:ActivatedRoute,\r\n      private _kspaceService: KSpaceService,\r\n      private rtcService: WebRCTService\r\n      ) {\r\n      this.route\r\n        .params\r\n        .subscribe(params => {\r\n          this.id = params['id'];\r\n        });\r\n     this.username = localStorage.getItem('username');\r\n  }\r\n\r\n  chatting(mess:string): void {\r\n    var username = this.username;\r\n    var messages = this.messages;\r\n\r\n    messages.push(username+': '+mess);\r\n    this.messages = messages;\r\n\r\n  }\r\n\r\n  /*\r\n  * Init when the component is initiated\r\n  *\r\n  * */\r\n\r\n  ngOnInit(): void{\r\n    // DOM elements\r\n    \r\n    var shareScreenBtn = $('#sharescreen-btn');\r\n    var chalkBoardBtn = $('#chalkboard-btn');\r\n    var videoCallBtn = $('#videocall-btn');\r\n\r\n    var localVideo = $('#localVideo');\r\n    var remoteVideos = $('#remoteVideos');\r\n    var kspacePanel = $('#kspace-panel');\r\n    \r\n    var chatBox = $('#chat-box-panel');\r\n    var drawTools = $('#draw-tools-panel');\r\n\r\n    // initiate setting\r\n    var chatToolShow: boolean = false;\r\n    $('#chat-panel').hide();\r\n    //show chat-panel\r\n    $('#chat').click(function(){\r\n        if(!chatToolShow){\r\n            $('#chat-panel').show();\r\n            $('#kspace-panel').css('right','18%');\r\n            $('#draw-option').css('margin-left','96.8%');\r\n            chatToolShow = true;\r\n        } else {\r\n            $('#chat-panel').hide();\r\n            $('#kspace-panel').css('right','6%');\r\n            $('#draw-option').css('margin-left','97.15%');\r\n            chatToolShow = false;\r\n        }\r\n    });\r\n\r\n    this._kspaceService\r\n      .getKSpaceById(this.id)\r\n      .subscribe(kspace => {\r\n        var room = kspace._id;\r\n        var username = this.username;\r\n        var rtc = this.rtcService;\r\n        var socket = io('http://localhost:3333');\r\n        socket.emit('subscribe', room);\r\n\r\n\r\n      // $('#chat-form').submit(function () {\r\n      //   var message = $('#chat-input').val()\r\n      //   if(message && username){\r\n      //     var messages = showMessage(username, message);\r\n      //     this.messages = messages;\r\n      //   }\r\n      // })\r\n\r\n\r\n     \r\n\r\n        var isKspaceUser = function() {\r\n          if(username === kspace.lecturer || username === kspace.learner){\r\n            return true;\r\n          }\r\n          return false;\r\n        };\r\n        \r\n        if (isKspaceUser){\r\n          // initiate webrtc\r\n          if(username === kspace.lecturer){\r\n            var webrtc = new SimpleWebRTC({\r\n              localVideoEl: 'localVideo',\r\n              remoteVideosEl: '',\r\n              autoRequestMedia: true,\r\n              nick: username,\r\n              localVideo: {\r\n                autoplay: true, // automatically play the video stream on the page\r\n                mirror: true, // flip the local video to mirror mode (for UX)\r\n                muted: true // mute local video stream to prevent echo\r\n              },\r\n              log: true,\r\n              debug: false\r\n            });\r\n          }else if(username === kspace.learner) {\r\n            var webrtc = new SimpleWebRTC({\r\n              remoteVideosEl: '',\r\n              nick: username,\r\n              media: { video: false, audio: true}\r\n            })\r\n          }\r\n\r\n          console.log(webrtc);\r\n          rtc.rtcSetting(webrtc,room,kspace.lecturer);\r\n          var peers = webrtc.getPeers();\r\n          var sharescreenToken: boolean = false;\r\n          shareScreenBtn.click(function () {\r\n              sharescreenToken = rtc.shareScreen(webrtc,sharescreenToken);\r\n          });\r\n          chalkBoardBtn.click(function (){\r\n              kspacePanel.find('video').remove();\r\n          });\r\n\r\n           \r\n          }else {\r\n            this.router.navigateByUrl('/');\r\n          }\r\n      },\r\n        (error) => {\r\n      this.router.navigateByUrl('/');\r\n    });\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/kspace/kspace.ts\n **/","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute} from'@angular/router';\r\n\r\nimport { Request } from '../../../interface/request';\r\nimport { KSpace } from '../../../interface/kspace.ts';\r\nimport { Offer } from '../../../interface/offer';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\n\r\nimport { RequestService } from '../../../services/requests';\r\nimport { OfferService } from '../../../services/request-offer';\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\nimport { KSpaceService } from '../../../services/kspace';\r\n\r\nimport { HeaderComponent } from '../shared/header';\r\nimport { FooterComponent } from '../shared/footer';\r\nimport { SideBarComponent } from '../shared/side-bar';\r\nimport { FriendListComponent} from '../shared/friend-list';\r\n\r\nimport { CreateOfferComponent } from '../offer/offer-create';\r\n\r\n@Component({\r\n    selector: 'request-detail-cli',\r\n    template: require('./client/dev/app/components/front-end/request/templates/request-detail.html'),\r\n    styles:  [require('./client/dev/app/components/front-end/request/styles/request.css')],\r\n    directives: [\r\n      ROUTER_DIRECTIVES,\r\n      CreateOfferComponent\r\n    ]\r\n})\r\n\r\n\r\nexport class RequestDetailClientComponent {\r\n\r\n  pageTitle:string = 'Welcome to Knowledge Sharing Network';\r\n\r\n  id: string;\r\n  _id: string;\r\n  updateLink: string;\r\n  rid: string;\r\n  roleToken: string;\r\n  userToken: string;\r\n  knowledge: Knowledge;\r\n  request: Request;\r\n  user: string;\r\n  knowledgeId: string;\r\n  subscribers: string[];\r\n  //varialbe check to hide button when the status is deactive\r\n  checkDeactive: boolean;\r\n  //variable check to hide button, user can't front.offer their of templates\r\n  checkCreatedUser: boolean;\r\n  //variable check to hide button, user can't subcribe twice in a templates\r\n  checkSubcribedUser: boolean;\r\n  offers: Offer[];\r\n\r\n  constructor(private _requestService:RequestService, private _offerService:OfferService, public router:Router,\r\n              private _knowledgeService:KnowledgeService , private _kspaceService: KSpaceService, private route: ActivatedRoute) {\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.id = params['id'];\r\n      });\r\n    this.roleToken = localStorage.getItem('role');\r\n    this.userToken = localStorage.getItem('username');\r\n  }\r\n  ngOnInit():void {\r\n    //get templates when load the page\r\n    this._requestService.getRequestById(this.id)\r\n      .subscribe(request => {\r\n          var formatDate = function (date) {\r\n            if (date) {\r\n              var newDate, day, month, year;\r\n              year = date.substr(0, 4);\r\n              month = date.substr(5, 2);\r\n              day = date.substr(8, 2);\r\n              return newDate = day + '/' + month + '/' + year;\r\n            }\r\n          };\r\n          request.createdAt = formatDate(request.createdAt);\r\n          request.userlink = '/user/'+request.user;\r\n          this._id = request._id;\r\n          this.updateLink = '/requests/'+ request._id + '/update';\r\n\r\n          this.knowledgeId = request.knowledgeId;\r\n          this.subscribers = request.subcribers;\r\n\r\n          if (request.status === \"deactive\") {\r\n            this.checkDeactive = true;\r\n          }\r\n\r\n          if (request.user === this.userToken) {\r\n            this.checkCreatedUser = true;\r\n          }\r\n\r\n          for (var i = 0; i < this.subscribers.length; i++) {\r\n            if (this.userToken === this.subscribers[i]) {\r\n              this.checkSubcribedUser = true;\r\n              console.log(this.checkSubcribedUser + \" \" + i);\r\n              break;\r\n            }\r\n          }\r\n        this.request = request;\r\n\r\n          //get back.knowledge name by knowledgeId\r\n          this._knowledgeService.findKnowledgeById(this.knowledgeId)\r\n            .subscribe(\r\n              knowledge => {\r\n                this.knowledge = knowledge;\r\n                //this.knowledgeName = this.knowledge.name;\r\n              },\r\n              error => {\r\n                console.log(error);\r\n              }\r\n            );\r\n        }, error => console.log(error));\r\n    //get front.offer of the templates when load the page\r\n    this._offerService.getOfferByRequestId(this.id).subscribe(\r\n      (offers) => {\r\n        var formatDate = function (date) {\r\n          if (date) {\r\n            var newDate, day, month, year;\r\n            year = date.substr(0, 4);\r\n            month = date.substr(5, 2);\r\n            day = date.substr(8, 2);\r\n            return newDate = day + '/' + month + '/' + year;\r\n          }\r\n        };\r\n\r\n        for (var i = 0; i < offers.length; i++) {\r\n          offers[i].createdAt = formatDate(offers[i].createdAt);\r\n        }\r\n        this.offers = offers;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  deactivateRequest(id: String) {\r\n    var r = confirm(\"Bạn có muốn kết thúc yêu cầu này?\");\r\n    if (r == true) {\r\n      this._requestService\r\n        .changeStatusRequest(this.id)\r\n        .subscribe((r) => {\r\n          console.log(\"deactivate sucess\");\r\n          this.router.navigateByUrl('/kshare/requests/');\r\n        })\r\n    }\r\n\r\n  }\r\n\r\n  addKshare(learner: string, lecturer: string, requestId: string, requestTitle:string, offerId: string): void {\r\n    this._kspaceService\r\n      .addKSpace(learner, lecturer, requestId,requestTitle, offerId)\r\n      .subscribe((r) => {\r\n        this.router.navigateByUrl('/kspace/info/' + r._id);\r\n      })\r\n  }\r\n\r\n  addSubcriber(id: string): void {\r\n    if (this.checkSubcribedUser == true) {\r\n      alert('Bạn đã theo dõi vài viết này');\r\n    } else {\r\n      this._requestService\r\n        .updateSubcriber(id, this.userToken)\r\n        .subscribe((r) => {\r\n          console.log(r);\r\n          console.log(\"add subcriber successfull\");\r\n          this.checkSubcribedUser = true;\r\n        });\r\n      this._requestService.getRequestById(this.id).subscribe(\r\n        (request) => {\r\n          this.subscribers = request.subcribers;\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/request/request-detail.ts\n **/","import { Component, OnInit } from '@angular/core';\r\nimport { ROUTER_DIRECTIVES } from '@angular/router';\r\nimport { Request } from '../../../interface/request';\r\nimport { RequestService } from '../../../services/requests';\r\nimport { FriendListComponent} from '../shared/friend-list';\r\nimport { CreateRequestComponent } from '../../back-end/request/request-create';\r\nimport { RequestCategoryComponent} from './request-search';\r\nimport { AuthService } from '../../../services/auth';\r\nimport { Router } from \"@angular/router\";\r\nimport { PaginationControlsCmp, PaginatePipe, PaginationService,IPaginationInstance } from 'ng2-pagination';\r\n\r\n\r\n@Component ({\r\n  selector: 'request-list-cli',\r\n  template:require('./client/dev/app/components/front-end/request/templates/request-list.html'),\r\n  styles: [require('./client/dev/app/components/front-end/request/styles/request.css')],\r\n  directives: [\r\n     PaginationControlsCmp,\r\n     ROUTER_DIRECTIVES,\r\n     FriendListComponent,\r\n     CreateRequestComponent,\r\n     RequestCategoryComponent\r\n  ],\r\n  providers: [PaginationService],\r\n  pipes: [PaginatePipe]\r\n})\r\n\r\nexport class RequestListClientComponent {\r\n  pageTitle: string = 'Welcome to Knowledge Sharing Network';\r\n  text: string;\r\n  hide: boolean;\r\n  roleToken:string;\r\n  userToken:string;\r\n  link: string;\r\n  public configRq: IPaginationInstance = {\r\n        id: 'rq',\r\n        itemsPerPage: 10,\r\n        currentPage: 1\r\n    };\r\n  public configRs: IPaginationInstance = {\r\n        id: 'rs',\r\n        itemsPerPage: 10,\r\n        currentPage: 1\r\n    };\r\n\r\n  constructor(private _requestService: RequestService,  private _auth:AuthService, private router: Router){\r\n    this.roleToken = localStorage.getItem('role');\r\n    this.userToken = localStorage.getItem('username');\r\n  }\r\n  requests: Request[];\r\n  searchs: Request[];\r\n\r\n  ngOnInit(): void {\r\n    this.hide = false;\r\n    this._requestService.getAllRequests().subscribe((requests) => {\r\n      var formatDate = function (date){\r\n        if(date) {\r\n          var newDate, day, month, year;\r\n          year = date.substr(0, 4);\r\n          month = date.substr(5, 2);\r\n          day = date.substr(8, 2);\r\n          return newDate = day + '/' + month + '/' + year;\r\n        }\r\n      };\r\n      for (var i = 0; i < requests.length; i++) {\r\n        requests[i].createdAt = formatDate(requests[i].createdAt);\r\n        requests[i].modifiedDate = formatDate(requests[i].modifiedDate);\r\n        requests[i].link = requests[i]._id + '/info';\r\n      }\r\n      this.requests = requests;\r\n    });\r\n  }\r\n\r\n  search(search: string) {\r\n    this._requestService.searchRequest(search).subscribe((requests) => {\r\n      this.searchs = requests;\r\n      this.hide = true;\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/request/request-list.ts\n **/","import { Component, OnInit, Inject } from '@angular/core';\r\n\r\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute} from'@angular/router';\r\nimport { FORM_DIRECTIVES, FormBuilder, ControlGroup, Control, AbstractControl  } from '@angular/common';\r\n\r\n\r\nimport { Request } from '../../../interface/request';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\nimport { RequestService } from '../../../services/requests';\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\n\r\n@Component({\r\n  selector: 'request-update-cli',\r\n  template: require('./client/dev/app/components/front-end/request/templates/request-update.html'),\r\n  styles:  [require('./client/dev/app/components/front-end/request/styles/request.css')],\r\n  directives: [FORM_DIRECTIVES, ROUTER_DIRECTIVES]\r\n})\r\n\r\nexport class RequestUpdateClientComponent {\r\n  updateRequestFormCli: ControlGroup;\r\n\r\n  id: string;\r\n\r\n  request: Request;\r\n  _id: string;\r\n  title: string;\r\n  description: string;\r\n  knowledges: Knowledge[];\r\n  knowledgeId: string;\r\n\r\n  constructor(\r\n      @Inject(FormBuilder)\r\n      fb: FormBuilder,\r\n      @Inject(RequestService)\r\n      private _requestService: RequestService,\r\n      public router: Router,\r\n      private route: ActivatedRoute,\r\n      @Inject(KnowledgeService)\r\n      private _knowledgeService: KnowledgeService ) {\r\n\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.id = params['id'];\r\n      });\r\n\r\n    this.updateRequestFormCli = fb.group({\r\n      \"_id\": [\"\"],\r\n      \"title\": [\"\"],\r\n      \"description\": [\"\"],\r\n      \"knowledgeId\": [\"\"]\r\n    });\r\n  }\r\n\r\n  ngOnInit():void {\r\n    //get all back.knowledge\r\n    this._knowledgeService.getAllKnowledges().subscribe((knowledges) => {\r\n      this.knowledges = this._knowledgeService.getChildFromParent(knowledges);\r\n    });\r\n\r\n    this._requestService.getRequestById(this.id).subscribe(\r\n      (request) => {\r\n        this.request = request;\r\n        this.title = request.title;\r\n        this._id = request._id;\r\n        this.description = request.description;\r\n    },\r\n      (error) => {\r\n        console.log(error.text());\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  updateRequest(request) {\r\n    this._requestService.updateRequest(request).subscribe((request)=> {\r\n      console.log('update successed');\r\n    },\r\n    (error) => {\r\n      console.log(error.text());\r\n    }\r\n    );\r\n    //window.location.href = '/kshare/requests/'+this.id;\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/request/request-update.ts\n **/","//cores\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute} from'@angular/router';\r\n\r\n//components\r\nimport { PushNotificationComponent } from '../shared/notification';\r\n\r\n//services\r\nimport { UserService } from '../../../services/users';\r\n\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\n\r\n//interfaces\r\nimport { User } from '../../../interface/user';\r\nimport { FriendShip } from '../../../interface/friendship';\r\nimport { Request } from '../../../interface/request';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\n\r\n@Component({\r\n  selector: 'request-record',\r\n  template: require('./client/dev/app/components/front-end/user-profile/templates/friend-list.html'),\r\n  styles: [require('./client/dev/app/components/front-end/user-profile/styles/user-profile.css')],\r\n  directives: [\r\n    ROUTER_DIRECTIVES,\r\n    PushNotificationComponent\r\n  ]\r\n})\r\n\r\nexport class FriendListComponent {\r\n  pendingRequests: FriendShip[];\r\n  friendships: FriendShip[];\r\n\r\n  roleToken: string;\r\n  userToken: string;\r\n\r\n  constructor(private router: Router,private route: ActivatedRoute, private _userService: UserService,\r\n             private _knowledgeService: KnowledgeService) {\r\n    this.roleToken = localStorage.getItem('role');\r\n    this.userToken = localStorage.getItem('username');\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.name = params['name'];\r\n      });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      console.log(this.name);\r\n      this.pendingRequests = [];\r\n      this.getFriendList();\r\n  }\r\n\r\n  //get friend list: pending and accepted\r\n  getFriendList(): void {\r\n    this._userService\r\n      .getFriendList(this.name)\r\n      .subscribe((friendlist) => {\r\n        this.friendships = friendlist;\r\n        //check sent request\r\n        for (var i = 0; i < this.friendships.length; i++) {\r\n          if (this.friendships[i].user2 === this.name && this.friendships[i].status === \"pending\") {\r\n            this.pendingRequests.push(this.friendships[i]);\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/user-profile/friend-list.ts\n **/","//cores\r\nimport { Component, OnInit, DoCheck  } from '@angular/core';\r\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute} from'@angular/router';\r\n\r\n//components\r\nimport { PushNotificationComponent } from '../shared/notification';\r\nimport { RequestRecordComponent } from './request-record';\r\n\r\n//services\r\nimport { UserService } from '../../../services/users';\r\nimport { AuthService } from '../../../services/auth';\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\n\r\n//interfaces\r\nimport { User } from '../../../interface/user';\r\nimport { FriendShip } from '../../../interface/friendship';\r\nimport { Request } from '../../../interface/request';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\n\r\n@Component({\r\n  selector: 'user-profile',\r\n  template: require('./client/dev/app/components/front-end/user-profile/templates/user-profile.html'),\r\n  styles: [require('./client/dev/app/components/front-end/user-profile/styles/user-profile.css')],\r\n  directives: [\r\n    ROUTER_DIRECTIVES,\r\n    PushNotificationComponent,\r\n    RequestRecordComponent\r\n  ]\r\n})\r\n\r\nexport class UserProfileComponent implements DoCheck {\r\n\r\n  //name of user in current profile page\r\n  name: string;\r\n\r\n  roleToken: string;\r\n  userToken: string;\r\n\r\n  //check if profile page of current user, hide \"addFriend\" button\r\n  checkUser: boolean;\r\n\r\n  //check if a user was sent friend request by current user\r\n  checkSentRequestUser: boolean;\r\n\r\n  differ: any;\r\n\r\n  userProfile: User;\r\n\r\n  buttonTitle: string;\r\n\r\n  friendList: FriendShip[];\r\n\r\n  requests: Request[];\r\n\r\n  knowledgeName: string;\r\n\r\n  constructor(public router : Router, private route : ActivatedRoute, public _userService: UserService,\r\n    public _knowledgeService: KnowledgeService) {\r\n    this.route\r\n      .params\r\n      .subscribe(params => {\r\n        this.name = params['name'];\r\n      });\r\n    this.roleToken = localStorage.getItem('role');\r\n    this.userToken = localStorage.getItem('username');\r\n    this.buttonTitle = \"Thêm bạn\";\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._userService.getUserByUserName(this.name).subscribe(\r\n      (user) => {\r\n        this.userProfile = user;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    //check if current user is staying in his/her profile page\r\n    if (this.name === this.userToken) {\r\n      this.checkUser = true;\r\n    }\r\n\r\n    this.getFriendList();\r\n    this.getRequestByUser();\r\n\r\n    setTimeout(() => {\r\n      this.differ = this.friendList;\r\n      console.log(this.friendList);\r\n      console.log(this.differ);\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    //boolean change = this.differ.diff(this.friendlist);\r\n    var isDiffirent;\r\n    setTimeout(() => {\r\n      if (this.differ !== this.friendList) {\r\n        isDiffirent = true;\r\n      }\r\n      if (this.differ === this.friendList) {\r\n        isDiffirent = false;\r\n      }\r\n      console.log(isDiffirent);\r\n    }, 1000);\r\n\r\n  }\r\n\r\n  addFriend(): void {\r\n    this._userService\r\n      .addFriend(this.userToken, this.name)\r\n      .subscribe((r) => {\r\n        console.log('friendship was created by ' + this.userToken + ' and ' + this.name);\r\n      })\r\n\r\n    this.getFriendList();\r\n    // setTimeout(() => {\r\n    //   console.log(this.friendList);\r\n    //   console.log(this.differ);\r\n    // }, 1000);\r\n\r\n  }\r\n\r\n  deleteFriend(): void {\r\n    this._userService\r\n      .deleteFriendRequest(this.userToken, this.name)\r\n      .subscribe(() => {\r\n        console.log('delete successfull');\r\n      })\r\n    this.getFriendList();\r\n  }\r\n\r\n  getRequestByUser(): void {\r\n    this._userService\r\n      .getRequestByUser(this.name)\r\n      .subscribe((requests) => {\r\n        for (var i = 0; i < requests.length; i++) {\r\n          requests[i].createdAt = this.formatDate(requests[i].createdAt);\r\n          requests[i].modifiedDate = this.formatDate(requests[i].modifiedDate);\r\n        }\r\n        this.requests = requests;\r\n        console.log(this.requests);\r\n      })\r\n  }\r\n\r\n  //get friend list: pending and accepted\r\n  getFriendList(): void {\r\n    this.checkSentRequestUser = false;\r\n    this._userService\r\n      .getFriendList(this.userToken)\r\n      .subscribe((friendlist) => {\r\n        this.friendList = friendlist;\r\n        //check sent request\r\n        for (var i = 0; i < this.friendList.length; i++) {\r\n          if (friendlist[i].user2 === this.name && this.friendList[i].status === \"pending\") {\r\n            this.checkSentRequestUser = true;\r\n            break;\r\n          }\r\n        }\r\n      })\r\n  }\r\n\r\n  public notification: any = {\r\n    show: false,\r\n    title: 'Demo notification!',\r\n    body: 'ng2-notifications',\r\n    icon: 'https://goo.gl/3eqeiE',\r\n    action: function () {\r\n      window.open('https://github.com/alexcastillo/ng2-notifications');\r\n    }\r\n  };\r\n\r\n  public formatDate = function (date) {\r\n    if (date) {\r\n      var newDate, day, month, year;\r\n      year = date.substr(0, 4);\r\n      month = date.substr(5, 2);\r\n      day = date.substr(8, 2);\r\n      return newDate = day + '/' + month + '/' + year;\r\n    }\r\n  }\r\n\r\n  public getKnowledgeNameOfRequest(knowledgeId) {\r\n    //get back.knowledge name by knowledgeId\r\n    this._knowledgeService.findKnowledgeById(knowledgeId).subscribe(\r\n      (knowledge) => {\r\n        this.knowledgeName = knowledge.name;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/user-profile/user-profile.ts\n **/","/**\r\n * Created by GiangDH on 6/4/16.\r\n */\r\nimport { Component } from '@angular/core';\r\nimport { ROUTER_DIRECTIVES } from '@angular/router';\r\n\r\n/**\r\n * Shared components\r\n */\r\n\r\nimport { HeaderComponent } from \"./front-end/shared/header\";\r\nimport { SideBarComponent } from \"./front-end/shared/side-bar\";\r\nimport { FooterComponent } from \"./front-end/shared/footer\";\r\nimport { LoginComponent} from \"./front-end/shared/login\";\r\nimport { RegisterComponent} from \"./front-end/shared/register\";\r\n\r\nimport { UserProfileComponent } from \"./front-end/user-profile/user-profile\";\r\n\r\n/**\r\n * Page components\r\n */\r\nimport { HomeComponent} from \"./front-end/home/home\";\r\nimport { RequestListClientComponent } from \"./front-end/request/request-list\";\r\nimport { RequestDetailClientComponent } from \"./front-end/request/request-detail\";\r\nimport { RequestUpdateClientComponent } from \"./front-end/request/request-update\";\r\nimport { RequestCategoryComponent } from \"./front-end/request/request-search\";\r\nimport { KSpaceComponent } from \"./front-end/kspace/kspace\";\r\nimport { KSpaceListComponent } from \"./front-end/kspace/kspace-list\";\r\nimport { KSpaceInfoComponent } from \"./front-end/kspace/kspace-info\";\r\nimport { FriendListComponent } from \"./front-end/user-profile/friend-list\";\r\n\r\n\r\n\r\n/**\r\n * Page components\r\n */\r\n\r\n\r\n@Component({\r\n  selector: 'kshare-app',\r\n  template:`\r\n    <header></header>\r\n    <sidebar></sidebar>\r\n    <router-outlet></router-outlet>\r\n    <login></login>\r\n    <register></register>\r\n    <footer></footer>\r\n  `,\r\n  directives: [\r\n    ROUTER_DIRECTIVES,\r\n    HeaderComponent,\r\n    SideBarComponent,\r\n    FooterComponent,\r\n    LoginComponent,\r\n    RegisterComponent\r\n  ],\r\n  precompile: [\r\n    HomeComponent,\r\n    RequestListClientComponent,\r\n    RequestDetailClientComponent,\r\n    RequestUpdateClientComponent,\r\n    RequestCategoryComponent,\r\n    KSpaceComponent,\r\n    KSpaceListComponent,\r\n    KSpaceInfoComponent,\r\n    UserProfileComponent,\r\n    FriendListComponent\r\n  ]\r\n})\r\nexport class KshareComponent {\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/kshare.component.ts\n **/","import { Injectable } from '@angular/core';\r\nimport { Badword } from '../interface/badword';\r\nimport { Http, Response, Headers,RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport  class BadwordService {\r\n  private _badwordsUrl = '/api/badwords/:id';\r\n  constructor(private _http: Http) { }\r\n\r\n  getAllBadwords(): Observable<Badword[]> {\r\n    return this._http.get(this._badwordsUrl.replace(':id',''))\r\n      .map((r) => r.json())\r\n      .do(data => console.log(\"All: \" +  JSON.stringify(data)))\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  addBadword(badword: Badword):Observable<any>{\r\n    let header = new Headers;\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _badword = JSON.stringify({\r\n      word : badword.word,\r\n    });\r\n    console.log(_badword);\r\n    console.log(header);\r\n    return this._http\r\n              .post(this._badwordsUrl.replace(':id',''),_badword,options)\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  deleteBadword(id :string):Observable<any> {\r\n    return this._http\r\n              .delete(this._badwordsUrl.replace(':id',id));\r\n  }\r\n\r\n  findBadwordById(id: string):Observable<any> {\r\n    return this._http\r\n              .get(this._badwordsUrl.replace(':id',id))\r\n              .map((r) => r.json());\r\n  }\r\n  updateBadword(badword: Badword):Observable<any>{\r\n    console.log(badword);\r\n    let header = new Headers;\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let _badword = JSON.stringify({\r\n      word : badword.word,\r\n    });\r\n\r\n    return this._http\r\n              .put(this._badwordsUrl.replace(':id',badword._id),_badword,options)\r\n              .map((r) => r.json());\r\n  }\r\n\r\n  private handleError(error: Response) {\r\n    console.error(error);\r\n    return Observable.throw(error.json().error || 'Server error');\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/services/badword.ts\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('./Subject');\nvar queue_1 = require('./scheduler/queue');\nvar observeOn_1 = require('./operator/observeOn');\n/**\n * @class ReplaySubject<T>\n */\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(bufferSize, windowTime, scheduler) {\n        if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n        if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n        _super.call(this);\n        this.events = [];\n        this.scheduler = scheduler;\n        this.bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n    }\n    ReplaySubject.prototype._next = function (value) {\n        var now = this._getNow();\n        this.events.push(new ReplayEvent(now, value));\n        this._trimBufferThenGetEvents(now);\n        _super.prototype._next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        var events = this._trimBufferThenGetEvents(this._getNow());\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));\n        }\n        var index = -1;\n        var len = events.length;\n        while (++index < len && !subscriber.isUnsubscribed) {\n            subscriber.next(events[index].value);\n        }\n        return _super.prototype._subscribe.call(this, subscriber);\n    };\n    ReplaySubject.prototype._getNow = function () {\n        return (this.scheduler || queue_1.queue).now();\n    };\n    ReplaySubject.prototype._trimBufferThenGetEvents = function (now) {\n        var bufferSize = this.bufferSize;\n        var _windowTime = this._windowTime;\n        var events = this.events;\n        var eventsCount = events.length;\n        var spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount += 1;\n        }\n        if (eventsCount > bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - bufferSize);\n        }\n        if (spliceCount > 0) {\n            events.splice(0, spliceCount);\n        }\n        return events;\n    };\n    return ReplaySubject;\n}(Subject_1.Subject));\nexports.ReplaySubject = ReplaySubject;\nvar ReplayEvent = (function () {\n    function ReplayEvent(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n    return ReplayEvent;\n}());\n//# sourceMappingURL=ReplaySubject.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/ReplaySubject.js\n ** module id = 420\n ** module chunks = 2\n **/","\"use strict\";\n/* tslint:disable:no-unused-variable */\n// Subject imported before Observable to bypass circular dependency issue since\n// Subject extends Observable and Observable references Subject in it's\n// definition\nvar Subject_1 = require('./Subject');\nexports.Subject = Subject_1.Subject;\n/* tslint:enable:no-unused-variable */\nvar Observable_1 = require('./Observable');\nexports.Observable = Observable_1.Observable;\n// statics\n/* tslint:disable:no-use-before-declare */\nrequire('./add/observable/bindCallback');\nrequire('./add/observable/bindNodeCallback');\nrequire('./add/observable/combineLatest');\nrequire('./add/observable/concat');\nrequire('./add/observable/defer');\nrequire('./add/observable/empty');\nrequire('./add/observable/forkJoin');\nrequire('./add/observable/from');\nrequire('./add/observable/fromEvent');\nrequire('./add/observable/fromEventPattern');\nrequire('./add/observable/fromPromise');\nrequire('./add/observable/interval');\nrequire('./add/observable/merge');\nrequire('./add/observable/race');\nrequire('./add/observable/never');\nrequire('./add/observable/of');\nrequire('./add/observable/range');\nrequire('./add/observable/throw');\nrequire('./add/observable/timer');\nrequire('./add/observable/zip');\n//operators\nrequire('./add/operator/buffer');\nrequire('./add/operator/bufferCount');\nrequire('./add/operator/bufferTime');\nrequire('./add/operator/bufferToggle');\nrequire('./add/operator/bufferWhen');\nrequire('./add/operator/cache');\nrequire('./add/operator/catch');\nrequire('./add/operator/combineAll');\nrequire('./add/operator/combineLatest');\nrequire('./add/operator/concat');\nrequire('./add/operator/concatAll');\nrequire('./add/operator/concatMap');\nrequire('./add/operator/concatMapTo');\nrequire('./add/operator/count');\nrequire('./add/operator/dematerialize');\nrequire('./add/operator/debounce');\nrequire('./add/operator/debounceTime');\nrequire('./add/operator/defaultIfEmpty');\nrequire('./add/operator/delay');\nrequire('./add/operator/delayWhen');\nrequire('./add/operator/distinctUntilChanged');\nrequire('./add/operator/do');\nrequire('./add/operator/expand');\nrequire('./add/operator/filter');\nrequire('./add/operator/finally');\nrequire('./add/operator/first');\nrequire('./add/operator/groupBy');\nrequire('./add/operator/ignoreElements');\nrequire('./add/operator/audit');\nrequire('./add/operator/auditTime');\nrequire('./add/operator/last');\nrequire('./add/operator/let');\nrequire('./add/operator/every');\nrequire('./add/operator/map');\nrequire('./add/operator/mapTo');\nrequire('./add/operator/materialize');\nrequire('./add/operator/merge');\nrequire('./add/operator/mergeAll');\nrequire('./add/operator/mergeMap');\nrequire('./add/operator/mergeMapTo');\nrequire('./add/operator/multicast');\nrequire('./add/operator/observeOn');\nrequire('./add/operator/partition');\nrequire('./add/operator/pluck');\nrequire('./add/operator/publish');\nrequire('./add/operator/publishBehavior');\nrequire('./add/operator/publishReplay');\nrequire('./add/operator/publishLast');\nrequire('./add/operator/race');\nrequire('./add/operator/reduce');\nrequire('./add/operator/repeat');\nrequire('./add/operator/retry');\nrequire('./add/operator/retryWhen');\nrequire('./add/operator/sample');\nrequire('./add/operator/sampleTime');\nrequire('./add/operator/scan');\nrequire('./add/operator/share');\nrequire('./add/operator/single');\nrequire('./add/operator/skip');\nrequire('./add/operator/skipUntil');\nrequire('./add/operator/skipWhile');\nrequire('./add/operator/startWith');\nrequire('./add/operator/subscribeOn');\nrequire('./add/operator/switch');\nrequire('./add/operator/switchMap');\nrequire('./add/operator/switchMapTo');\nrequire('./add/operator/take');\nrequire('./add/operator/takeLast');\nrequire('./add/operator/takeUntil');\nrequire('./add/operator/takeWhile');\nrequire('./add/operator/throttle');\nrequire('./add/operator/throttleTime');\nrequire('./add/operator/timeout');\nrequire('./add/operator/timeoutWith');\nrequire('./add/operator/toArray');\nrequire('./add/operator/toPromise');\nrequire('./add/operator/window');\nrequire('./add/operator/windowCount');\nrequire('./add/operator/windowTime');\nrequire('./add/operator/windowToggle');\nrequire('./add/operator/windowWhen');\nrequire('./add/operator/withLatestFrom');\nrequire('./add/operator/zip');\nrequire('./add/operator/zipAll');\n/* tslint:disable:no-unused-variable */\nvar Operator_1 = require('./Operator');\nexports.Operator = Operator_1.Operator;\nvar Subscription_1 = require('./Subscription');\nexports.Subscription = Subscription_1.Subscription;\nvar Subscriber_1 = require('./Subscriber');\nexports.Subscriber = Subscriber_1.Subscriber;\nvar AsyncSubject_1 = require('./AsyncSubject');\nexports.AsyncSubject = AsyncSubject_1.AsyncSubject;\nvar ReplaySubject_1 = require('./ReplaySubject');\nexports.ReplaySubject = ReplaySubject_1.ReplaySubject;\nvar BehaviorSubject_1 = require('./BehaviorSubject');\nexports.BehaviorSubject = BehaviorSubject_1.BehaviorSubject;\nvar ConnectableObservable_1 = require('./observable/ConnectableObservable');\nexports.ConnectableObservable = ConnectableObservable_1.ConnectableObservable;\nvar Notification_1 = require('./Notification');\nexports.Notification = Notification_1.Notification;\nvar EmptyError_1 = require('./util/EmptyError');\nexports.EmptyError = EmptyError_1.EmptyError;\nvar ArgumentOutOfRangeError_1 = require('./util/ArgumentOutOfRangeError');\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\nvar ObjectUnsubscribedError_1 = require('./util/ObjectUnsubscribedError');\nexports.ObjectUnsubscribedError = ObjectUnsubscribedError_1.ObjectUnsubscribedError;\nvar UnsubscriptionError_1 = require('./util/UnsubscriptionError');\nexports.UnsubscriptionError = UnsubscriptionError_1.UnsubscriptionError;\nvar asap_1 = require('./scheduler/asap');\nvar async_1 = require('./scheduler/async');\nvar queue_1 = require('./scheduler/queue');\nvar rxSubscriber_1 = require('./symbol/rxSubscriber');\nvar observable_1 = require('./symbol/observable');\nvar iterator_1 = require('./symbol/iterator');\n/* tslint:enable:no-unused-variable */\n/**\n * @typedef {Object} Rx.Scheduler\n * @property {Scheduler} queue Schedules on a queue in the current event frame\n * (trampoline scheduler). Use this for iteration operations.\n * @property {Scheduler} asap Schedules on the micro task queue, which uses the\n * fastest transport mechanism available, either Node.js' `process.nextTick()`\n * or Web Worker MessageChannel or setTimeout or others. Use this for\n * asynchronous conversions.\n * @property {Scheduler} async Schedules work with `setInterval`. Use this for\n * time-based operations.\n */\nvar Scheduler = {\n    asap: asap_1.asap,\n    async: async_1.async,\n    queue: queue_1.queue\n};\nexports.Scheduler = Scheduler;\n/**\n * @typedef {Object} Rx.Symbol\n * @property {Symbol|string} rxSubscriber A symbol to use as a property name to\n * retrieve an \"Rx safe\" Observer from an object. \"Rx safety\" can be defined as\n * an object that has all of the traits of an Rx Subscriber, including the\n * ability to add and remove subscriptions to the subscription chain and\n * guarantees involving event triggering (can't \"next\" after unsubscription,\n * etc).\n * @property {Symbol|string} observable A symbol to use as a property name to\n * retrieve an Observable as defined by the [ECMAScript \"Observable\" spec](https://github.com/zenparsing/es-observable).\n * @property {Symbol|string} iterator The ES6 symbol to use as a property name\n * to retrieve an iterator from an object.\n */\nvar Symbol = {\n    rxSubscriber: rxSubscriber_1.$$rxSubscriber,\n    observable: observable_1.$$observable,\n    iterator: iterator_1.$$iterator\n};\nexports.Symbol = Symbol;\n//# sourceMappingURL=Rx.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Rx.js\n ** module id = 421\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctKey}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nfunction filter(predicate, thisArg) {\n    return this.lift(new FilterOperator(predicate, thisArg));\n}\nexports.filter = filter;\nvar FilterOperator = (function () {\n    function FilterOperator(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    FilterOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    };\n    return FilterOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FilterSubscriber = (function (_super) {\n    __extends(FilterSubscriber, _super);\n    function FilterSubscriber(destination, predicate, thisArg) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n        this.predicate = predicate;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    FilterSubscriber.prototype._next = function (value) {\n        var result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    };\n    return FilterSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=filter.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/filter.js\n ** module id = 436\n ** module chunks = 2\n **/","\"use strict\";\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar mergeAll_1 = require('./mergeAll');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    observables.unshift(this);\n    return mergeStatic.apply(this, observables);\n}\nexports.merge = merge;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {Observable} input1 An input Observable to merge with others.\n * @param {Observable} input2 An input Observable to merge with others.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The Scheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (observables.length === 1) {\n        return observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new mergeAll_1.MergeAllOperator(concurrent));\n}\nexports.mergeStatic = mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/merge.js\n ** module id = 438\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable.\n * @method mergeMapTo\n * @owner Observable\n */\nfunction mergeMapTo(innerObservable, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n        resultSelector = null;\n    }\n    return this.lift(new MergeMapToOperator(innerObservable, resultSelector, concurrent));\n}\nexports.mergeMapTo = mergeMapTo;\n// TODO: Figure out correct signature here: an Operator<Observable<T>, R>\n//       needs to implement call(observer: Subscriber<R>): Subscriber<Observable<T>>\nvar MergeMapToOperator = (function () {\n    function MergeMapToOperator(ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapToOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent));\n    };\n    return MergeMapToOperator;\n}());\nexports.MergeMapToOperator = MergeMapToOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapToSubscriber = (function (_super) {\n    __extends(MergeMapToSubscriber, _super);\n    function MergeMapToSubscriber(destination, ish, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.ish = ish;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapToSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            var resultSelector = this.resultSelector;\n            var index = this.index++;\n            var ish = this.ish;\n            var destination = this.destination;\n            this.active++;\n            this._innerSub(ish, destination, resultSelector, value, index);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapToSubscriber.prototype._innerSub = function (ish, destination, resultSelector, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapToSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.trySelectResult(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    MergeMapToSubscriber.prototype.trySelectResult = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    MergeMapToSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    MergeMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.MergeMapToSubscriber = MergeMapToSubscriber;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/mergeMapTo.js\n ** module id = 440\n ** module chunks = 2\n **/","\"use strict\";\nvar ReplaySubject_1 = require('../ReplaySubject');\nvar multicast_1 = require('./multicast');\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nfunction publishReplay(bufferSize, windowTime, scheduler) {\n    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n    return multicast_1.multicast.call(this, new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler));\n}\nexports.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/publishReplay.js\n ** module id = 441\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nfunction race() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    observables.unshift(this);\n    return raceStatic.apply(this, observables);\n}\nexports.race = race;\nfunction raceStatic() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray_1.isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return new ArrayObservable_1.ArrayObservable(observables).lift(new RaceOperator());\n}\nexports.raceStatic = raceStatic;\nvar RaceOperator = (function () {\n    function RaceOperator() {\n    }\n    RaceOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RaceSubscriber(subscriber));\n    };\n    return RaceOperator;\n}());\nexports.RaceOperator = RaceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RaceSubscriber = (function (_super) {\n    __extends(RaceSubscriber, _super);\n    function RaceSubscriber(destination) {\n        _super.call(this, destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    RaceSubscriber.prototype._next = function (observable) {\n        this.observables.push(observable);\n    };\n    RaceSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                var subscription = subscribeToResult_1.subscribeToResult(this, observable, observable, i);\n                this.subscriptions.push(subscription);\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    };\n    RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (var i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    var subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    };\n    return RaceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.RaceSubscriber = RaceSubscriber;\n//# sourceMappingURL=race.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/race.js\n ** module id = 442\n ** module chunks = 2\n **/","\"use strict\";\nvar AsapScheduler_1 = require('./AsapScheduler');\nexports.asap = new AsapScheduler_1.AsapScheduler();\n//# sourceMappingURL=asap.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/scheduler/asap.js\n ** module id = 443\n ** module chunks = 2\n **/","\"use strict\";\nvar QueueScheduler_1 = require('./QueueScheduler');\nexports.queue = new QueueScheduler_1.QueueScheduler();\n//# sourceMappingURL=queue.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/scheduler/queue.js\n ** module id = 444\n ** module chunks = 2\n **/","\"use strict\";\n/* tslint:disable:no-empty */\nfunction noop() { }\nexports.noop = noop;\n//# sourceMappingURL=noop.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/noop.js\n ** module id = 448\n ** module chunks = 2\n **/","/**\r\n * Created by GiangDH on 5/8/16.\r\n */\r\nimport { Component } from '@angular/core';\r\nimport { HTTP_PROVIDERS } from '@angular/http';\r\nimport 'rxjs/Rx';   // Load all features\r\nimport { ROUTER_DIRECTIVES} from '@angular/router';\r\n\r\n/**\r\n * Page components\r\n * */\r\n\r\nimport { AdminComponent } from \"./components/admin.component\";\r\nimport { KshareComponent } from \"./components/kshare.component\";\r\n//import { UserComponent } from \"./user.component\";\r\n\r\n/**\r\n * services\r\n **/\r\n\r\nimport {KnowledgeService} from \"./services/knowledge\";\r\nimport {OfferService} from \"./services/request-offer\";\r\nimport {RequestService} from \"./services/requests\";\r\nimport {UserService} from \"./services/users\";\r\nimport {AuthService} from \"./services/auth\";\r\nimport {KSpaceService} from \"./services/kspace\";\r\nimport {SocketIOService} from \"./services/socket.io.services\";\r\n\r\n\r\n@Component({\r\n  selector: 'kshare-app',\r\n  template:'<router-outlet></router-outlet>',\r\n  directives: [\r\n    ROUTER_DIRECTIVES\r\n  ],\r\n  precompile: [KshareComponent],\r\n  providers: [\r\n    AuthService,\r\n    UserService,\r\n    HTTP_PROVIDERS,\r\n    RequestService,\r\n    OfferService,\r\n    KnowledgeService,\r\n    KSpaceService,\r\n    SocketIOService\r\n  ]\r\n})\r\nexport class AppComponent {\r\n  pageTitle: string = 'Knowledge Sharing Network';\r\n}\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/app.component.ts\n **/","/**\r\n * Created by GiangDH on 7/9/16.\r\n */\r\nimport { provideRouter, RouterConfig } from '@angular/router';\r\nimport { KShareRoutes } from './routes/kshare.routes';\r\nimport { AdminRoutes } from './routes/admin.routes';\r\n\r\nexport const routes: RouterConfig = [\r\n  ...KShareRoutes,\r\n  ...AdminRoutes\r\n];\r\n\r\nexport const APP_ROUTER_PROVIDERS = [\r\n  provideRouter(routes)\r\n];\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/app.routes.ts\n **/","/**\r\n * Created by GiangDH on 6/4/16.\r\n */\r\nimport { Component } from '@angular/core';\r\nimport 'rxjs/Rx';   // Load all features\r\nimport { ROUTER_DIRECTIVES} from '@angular/router';\r\n\r\n// Layout component\r\nimport { NavbarComponent } from './back-end/shared/nav-bar';\r\nimport { SidebarComponent } from './back-end/shared/side-bar';\r\n\r\n// Functions\r\nimport { UpdateKnowledgeComponent } from './back-end/knowledge/knowledge-update';\r\nimport { KnowledgeListComponent } from './back-end/knowledge/knowledges-list';\r\nimport { RequestListComponent } from \"./back-end/request/requests-list\";\r\nimport { UpdateRequestComponent } from \"./back-end/request/request-update\";\r\nimport { UpdateBadwordComponent } from \"./back-end/badword/badword-update\";\r\nimport { BadwordListComponent } from \"./back-end/badword/badwords-list\";\r\nimport { UserListComponent } from \"./back-end/users/user-list\";\r\n\r\n@Component({\r\n  selector: 'kshare',\r\n  template:`\r\n  <div id=\"wrapper\">\r\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\r\n      <nav-bar></nav-bar>\r\n      <sidebar></sidebar>\r\n    </nav>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  `,\r\n  directives: [\r\n    ROUTER_DIRECTIVES,\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ],\r\n  precompile: [\r\n    UserListComponent,\r\n    RequestListComponent,\r\n    KnowledgeListComponent,\r\n    BadwordListComponent,\r\n    UpdateBadwordComponent,\r\n    UpdateKnowledgeComponent,\r\n    UpdateRequestComponent,\r\n  ]\r\n})\r\nexport class AdminComponent {}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/admin.component.ts\n **/","import {\r\n  Component,\r\n  Inject,\r\n  Input\r\n} from '@angular/core';\r\n\r\nimport {\r\n  FORM_DIRECTIVES,\r\n  FormBuilder,\r\n  ControlGroup,\r\n  Control,\r\n  AbstractControl\r\n} from '@angular/common';\r\n\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\n\r\n@Component({\r\n  selector: 'sub-create',\r\n  template: require('./client/dev/app/components/back-end/knowledge/templates/sub-knowledge-create.html'),\r\n  directives: [FORM_DIRECTIVES]\r\n})\r\nexport class CreateSubCategoryComponent {\r\n   @Input('kId') kId: string;\r\n\r\n   subCategoryForm: ControlGroup;\r\n\r\n   constructor(fb: FormBuilder, private _knowledgeService: KnowledgeService) {\r\n    this.subCategoryForm = fb.group({\r\n      \"name\": [\"\"],\r\n      \"description\": [\"\"],\r\n      \"parent\": [\"\"]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  addKnowledge(knowledge) {\r\n    this._knowledgeService.addKnowledge(knowledge).subscribe((knowledge)=> {\r\n      console.log('success');\r\n    },\r\n    (error) => {\r\n      console.log(error.text());\r\n    }\r\n    );\r\n\r\n    window.location.reload();\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/knowledge/sub-knowledge-create.ts\n **/","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FORM_DIRECTIVES, FormBuilder, ControlGroup, Control } from '@angular/common';\r\n\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\nimport { RequestService} from '../../../services/requests';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\nimport { AuthService} from '../../../services/auth';\r\n\r\n@Component({\r\n  selector: 'request-create',\r\n  template: require('./client/dev/app/components/back-end/request/templates/request-create.html'),\r\n  styles: [require('./client/dev/app/components/back-end/request/templates/request.css')],\r\n  directives: [FORM_DIRECTIVES]\r\n})\r\nexport class CreateRequestComponent {\r\n  user:string;\r\n  roleToken:string;\r\n  requestForm: ControlGroup;\r\n\r\n  knowledges: Knowledge[];\r\n\r\n  constructor(@Inject(FormBuilder) fb: FormBuilder, @Inject(RequestService) private _requestService: RequestService, private _knowledgeService: KnowledgeService,\r\n                    private _authService: AuthService) {\r\n    this.user = localStorage.getItem('username');\r\n    this.roleToken = localStorage.getItem('userrole');\r\n\r\n    this.requestForm = fb.group({\r\n      \"knowledgeId\": [\"\"],\r\n      \"title\": [\"\"],\r\n      \"description\": [\"\"],\r\n      \"user\": [\"\"]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._knowledgeService.getAllKnowledges().subscribe((knowledges) => {\r\n      this.knowledges = this._knowledgeService.getChildFromParent(knowledges);\r\n    });\r\n  }\r\n\r\n  addRequest(request) {\r\n    console.log(request);\r\n    this._requestService.addRequest(request).subscribe((request)=> {\r\n      console.log('success');\r\n    },\r\n    (error) => {\r\n      console.log(error.text());\r\n    }\r\n    );\r\n    console.log(request);\r\n    window.location.reload();\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/request/request-create.ts\n **/","import {\r\n  Component,\r\n  Inject\r\n} from '@angular/core';\r\nimport  { AuthService} from '../../../services/auth';\r\nimport  {Router, ROUTER_DIRECTIVES} from \"@angular/router\";\r\n@Component({\r\n  selector: 'nav-bar',\r\n  template: require('./client/dev/app/components/back-end/shared/templates/nav-bar.html'),\r\n  styles: [require('./client/dev/asserts/css/admin.css')],\r\n  directives: [\r\n    ROUTER_DIRECTIVES\r\n  ]\r\n})\r\nexport class NavbarComponent {\r\n  constructor(private _auth: AuthService, private router: Router){\r\n\r\n  }\r\n  logout(): void {\r\n    this._auth.logout();\r\n    this._auth.logoutClient();\r\n    this.router.navigateByUrl('/kshare');\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/shared/nav-bar.ts\n **/","import {\r\n  Component,\r\n  Inject\r\n} from '@angular/core';\r\nimport {Input} from \"@angular/core\";\r\nimport {ROUTER_DIRECTIVES} from \"@angular/router\";\r\n@Component({\r\n  selector: 'sidebar',\r\n  template: require('./client/dev/app/components/back-end/shared/templates/side-bar.html'),\r\n  styles: [require('./client/dev/asserts/css/admin.css')],\r\n  directives: [ROUTER_DIRECTIVES]\r\n})\r\n\r\nexport class SidebarComponent {\r\n  @Input() pageTitle: string;\r\n  \r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/back-end/shared/side-bar.ts\n **/","import { Component, OnInit, Input } from '@angular/core';\r\ndeclare var $: any;\r\ndeclare var paper: any;\r\ndeclare var io: any;\r\n\r\nvar brushColor: string = $('#color-picker').val();\r\n@Component ({\r\n    selector: 'chalkboard',\r\n    template: `\r\n        <button id=\"draw-option\"><i class=\"fa fa-bars fa-2x\" aria-hidden=\"true\"></i></button>\r\n        <canvas id=\"chalkboard\" resize=true keepalive=true></canvas>\r\n        <div id=\"draw-tools\">\r\n            <select id=\"color-picker\" class=\"tool-btn\">\r\n                <option *ngFor=\"let color of colors\" value=\"{{color.value}}\">{{color.label}}</option>\r\n            </select>\r\n            <hr>\r\n            <select id=\"brush-size\" class=\"tool-btn\">\r\n                <option *ngFor=\"let size of brushSizes\" value=\"{{size.value}}\">{{size.label}}</option>\r\n            </select>\r\n            <hr>\r\n            <p id=\"eraser\">\r\n                <i class=\"fa fa-eraser fa-2x\" aria-hidden=\"true\"></i>\r\n            </p>\r\n        </div>\r\n    `,\r\n    styles:[require('./client/dev/app/components/front-end/kspace/styles/chalkboard.css')]\r\n})\r\n\r\nexport class ChalkBoardComponent {\r\n    colors: any[];\r\n    brushSizes: any[];\r\n\r\n    constructor() {\r\n        this.colors= [\r\n            { label: '#ffffff', value: '#ffffff' },\r\n            { label: '#de3535', value: '#DE3535' },\r\n            { label: '#03a9f4', value: '#03a9f4' }\r\n        ];\r\n        this.brushSizes = [\r\n            { label: '1', value: '1' },\r\n            { label: '2', value: '3' },\r\n            { label: '3', value: '5' },\r\n            { label: '4', value: '10' },\r\n            { label: '5', value: '20' },\r\n            { label: '6', value: '30' },\r\n            { label: '7', value: '50' }\r\n        ]\r\n    }\r\n    @Input() id: string;\r\n    ngOnInit():void {\r\n            var sessionId;\r\n            var drawing = false;\r\n            var mode = 'draw';\r\n            var path;\r\n            var streamPath;\r\n            var strokeColor: string = 'white';\r\n            var strokeWidth = 1;\r\n            var colorStore :string ;\r\n            var room = this.id;\r\n            \r\n            var socket = io('http://localhost:3333');\r\n            socket.emit('subscribe', room);\r\n            var chalkboard = document.getElementById('chalkboard');\r\n            // Initiate the paper at canvas id=\"chalkboard\"\r\n            paper.setup(chalkboard);\r\n\r\n            //initiate setting\r\n            var drawToolShow: boolean = false;\r\n            $('#draw-tools').hide();          \r\n            //show draw-tools\r\n            $('#draw-option').click(function(){\r\n                if(!drawToolShow){\r\n                    $('#draw-tools').show();\r\n                    drawToolShow = true;\r\n                } else {\r\n                    $('#draw-tools').hide();\r\n                    drawToolShow = false;\r\n                }\r\n            });\r\n\r\n            $('#color-picker').change(function(){\r\n                if($('#color-picker').val()!=='white'){\r\n                    $('#color-picker').css('color','white');\r\n                }\r\n                if($('#color-picker').val()){\r\n                    $('#color-picker').css('background-color',$('#color-picker').val());\r\n                    strokeColor = $('#color-picker').val();\r\n                }\r\n            });\r\n            $('#brush-size').change(function () {\r\n                if($('#brush-size').val()){\r\n                    strokeWidth = $('#brush-size').val();\r\n                }\r\n            })\r\n\r\n            $('#eraser').click(function(){\r\n                strokeColor = '#000000';\r\n            })\r\n\r\n            /**\r\n             * Catch event when mouse down, create new path, emit start point\r\n             */\r\n            $('#chalkboard').mousedown(function(event){\r\n                    drawing = true;\r\n                    path = new paper.Path(); \r\n                    path.strokeColor = strokeColor;\r\n                    path.strokeWidth = strokeWidth;\r\n                    var x = event.pageX - 0.1879935275*$(window).width();\r\n                    var y = event.pageY - 0.036667*$(window).height(); \r\n                    path.add(new paper.Point(x,y));\r\n                    emitStartPoint(x,y,strokeColor,strokeWidth);\r\n            });\r\n\r\n            /**\r\n             * Catch event when mouse move and drawing token is true\r\n             * Then call function draw (x,y) Emit the points of the path to server\r\n             */\r\n            $('#chalkboard').mousemove(function(event){\r\n                if(drawing){\r\n                    var x = event.pageX - 0.1879935275*$(window).width();\r\n                    var y = event.pageY - 0.036667*$(window).height(); \r\n                    draw(x, y);                \r\n                    emitPathPoint( x, y);\r\n                }\r\n            });\r\n            /**\r\n             * When mouse up, set drawing is false, finish the path\r\n             */\r\n            $('#chalkboard').mouseup(function (event) {\r\n                drawing = false;\r\n            })\r\n\r\n            /**\r\n             * function draw(x, y)\r\n             * Add point(x,y) to the path\r\n             */\r\n            \r\n            function draw( x, y) {\r\n                path.add(new paper.Point(x,y));\r\n                path.smooth();\r\n                paper.view.draw();\r\n            }\r\n\r\n            /**\r\n             * function streamStartPath(x,y)\r\n             * When receive the start point from server, create the stream path\r\n             */\r\n            function streamStartPath (x,y,color,width){\r\n                streamPath = new paper.Path();\r\n                streamPath.strokeColor = color;\r\n                streamPath.strokeWidth = width;\r\n                streamPath.add(new paper.Point(x,y));\r\n                streamPath.smooth();\r\n            }\r\n\r\n            /**\r\n             * function streamDraw(x,y) \r\n             * Add point(x,y) to the stream path\r\n             */\r\n            function streamDraw (x,y){\r\n                streamPath.add(new paper.Point(x,y));\r\n                paper.view.draw();\r\n            }\r\n\r\n            /**\r\n             * function emitStartPoint(x,y) \r\n             * Send the start point (x,y) to the server\r\n             */\r\n            function emitStartPoint(x,y,color,width) {\r\n                var data = {\r\n                    x: x,\r\n                    y: y,\r\n                    color,\r\n                    width,\r\n                    room\r\n                };\r\n                socket.emit( 'startPoint', data)\r\n                \r\n            }\r\n             /**\r\n             * function emitPathPoint(x,y) \r\n             * Send the path's point (x,y) to the server\r\n             */\r\n            function emitPathPoint( x, y) {\r\n                var data = {\r\n                    x: x,\r\n                    y: y,\r\n                    room\r\n                };\r\n                socket.emit( 'pathpoint', data)\r\n            }\r\n            /**\r\n             * When socket receive startPoint, call function streamStartPath(x,y)\r\n             */\r\n            socket.on('startPoint', function (data) {\r\n                streamStartPath(data.x, data.y,data.color,data.width);\r\n            })\r\n            /**\r\n             * When socket receive pathpoint, call function streamDraw(x,y)\r\n             */\r\n            socket.on('pathpoint', function( data ) {\r\n                streamDraw( data.x, data.y);\r\n            })\r\n        }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/kspace/chalkboard.ts\n **/","/**\r\n * Created by GiangDH on 7/12/16.\r\n */\r\n\r\nexport class WebRCTService {\r\n  rtcSetting(webrtc: SimpleWebRTC, room:string, lecturer: string) {\r\n    // If there is a peer join room, add Remote Video\r\n    webrtc.on('videoAdded', function (video, peer) {\r\n      // if(lecturer === peer.nick){\r\n        console.log('video added', peer);\r\n        var remotes = document.getElementById('remoteVideos');\r\n        if (remotes) {\r\n          var container = document.createElement('div');\r\n          container.className = 'videoContainer';\r\n          container.id = 'container_' + webrtc.getDomId(peer);\r\n          container.appendChild(video);\r\n          // suppress contextmenu\r\n          video.oncontextmenu = function () { return false; };\r\n          remotes.appendChild(container);\r\n          var kspacePanel = $('#kspace-panel');\r\n          var v = webrtc.getDomId(peer);\r\n          var vid = document.getElementById(v);\r\n          vid.setAttribute(\"control\",\"\");\r\n          $('#'+v).click(function(){\r\n            var chalkboard = document.getElementById('chalkboard');\r\n            var ctx = chalkboard.getContext('2d');\r\n            ctx.drawImage(vid,5,5,chalkboard.clientWidth, chalkboard.clientHeight);\r\n          });\r\n        }\r\n      // }\r\n    });\r\n    // a peer video was removed\r\n    webrtc.on('videoRemoved', function (video, peer) {\r\n      console.log('video removed ', peer);\r\n      $('#kspace-panel').find('video').remove();\r\n      var remotes = document.getElementById('remoteVideos');\r\n      var el = document.getElementById(peer ? 'container_' + webrtc.getDomId(peer) : 'localScreenContainer');\r\n      if (remotes && el) {\r\n        remotes.removeChild(el);\r\n      }\r\n\r\n    });\r\n    webrtc.on('readyToCall', function () {\r\n      if(room){\r\n        console.log(\"Join \"+room+ \" success!\");\r\n        webrtc.joinRoom(room);\r\n      }\r\n    });\r\n  }\r\n  shareScreen(webrtc: SimpleWebRTC, shareScreenToken: boolean){\r\n    if(shareScreenToken){\r\n      webrtc.stopScreenShare();\r\n      $('#kspace-panel').find('video').remove();\r\n      return false;\r\n    }else {\r\n      webrtc.shareScreen();\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/kspace/rtc-services.ts\n **/","import { Component,Inject,Input } from '@angular/core';\r\n\r\nimport { FORM_DIRECTIVES, FormBuilder, ControlGroup, Control, AbstractControl  } from '@angular/common';\r\nimport { OfferService } from '../../../services/request-offer';\r\nimport { AuthService} from '../../../services/auth';\r\n\r\n@Component({\r\n  selector: 'offer-create',\r\n  template: require('./client/dev/app/components/front-end/offer/templates/offer-create.html'),\r\n  directives: [FORM_DIRECTIVES]\r\n})\r\n\r\nexport class CreateOfferComponent {\r\n   user:string;\r\n   @Input('rid') rid: string;\r\n\r\n   offerForm: ControlGroup;\r\n\r\n   constructor(@Inject(FormBuilder) fb: FormBuilder, private _offerService: OfferService,\r\n                                private _authService: AuthService) {\r\n    this.user = localStorage.getItem('username');\r\n    \r\n    this.offerForm = fb.group({\r\n      \"price\": [\"\"],\r\n      \"numberOfLecture\": [\"\"],\r\n      \"requestId\": [\"\"],\r\n      \"message\": [\"\"],\r\n      \"user\": [\"\"]\r\n    });\r\n  }\r\n\r\n  addOffer(offer) {\r\n    this._offerService.addOffer(offer).subscribe((offer)=> {\r\n      console.log('success');\r\n    },\r\n    (error) => {\r\n      console.log(error.text());\r\n    }\r\n    );\r\n     window.location.reload();\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/offer/offer-create.ts\n **/","/**\r\n * Created by GiangDH on 5/18/16.\r\n */\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector : 'footer',\r\n  template: require('./client/dev/app/components/front-end/shared/templates/footer.html'),\r\n  styles:  [require('./client/dev/app/components/front-end/shared/styles/header.css')]\r\n})\r\n\r\nexport class FooterComponent {\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/shared/footer.ts\n **/","import {\r\n  Component,\r\n  Inject\r\n} from '@angular/core';\r\n@Component({\r\n  selector : 'friend-list',\r\n  template: require('./client/dev/app/components/front-end/asserts/templates/friend-list.html'),\r\n  styles: [require('./client/dev/app/components/front-end/asserts/styles/friend-list.html')],\r\n  directives: []\r\n})\r\n\r\nexport class FriendListComponent {\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/shared/friend-list.ts\n **/","/**\r\n * Created by GiangDH on 5/18/16.\r\n */\r\nimport { Component } from '@angular/core';\r\nimport { ROUTER_DIRECTIVES, Router} from '@angular/router';\r\nimport { AuthService } from '../../../services/auth';\r\n\r\n@Component({\r\n  selector: 'header',\r\n  template: require('./client/dev/app/components/front-end/shared/templates/header.html'),\r\n  styles: [require('./client/dev/app/components/front-end/shared/styles/header.css')],\r\n  directives: [ROUTER_DIRECTIVES]\r\n})\r\n\r\nexport class HeaderComponent {\r\n  loginToken:boolean = false;\r\n  userToken:string;\r\n  roleToken:string;\r\n\r\n  constructor(private _auth: AuthService, public router: Router){\r\n    this.userToken = localStorage.getItem('username');\r\n    this.roleToken = localStorage.getItem('userrole');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n      if(this.userToken){\r\n        this.loginToken = true;\r\n      }\r\n  }\r\n  logout(): void {\r\n    this._auth.logout();\r\n    this._auth.logoutClient();\r\n    window.location.reload();\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/shared/header.ts\n **/","/**\r\n * Created by GiangDH on 5/18/16.\r\n */\r\nimport {\r\n  Component,\r\n  Inject\r\n} from '@angular/core';\r\nimport {\r\n  Validators,\r\n  FormBuilder,\r\n  ControlGroup,\r\n  Control,\r\n  FORM_DIRECTIVES,\r\n  CORE_DIRECTIVES\r\n} from '@angular/common';\r\nimport {\r\n  Router,\r\n  ROUTER_DIRECTIVES\r\n} from '@angular/router';\r\nimport { User } from '../../../interface/user.ts';\r\nimport { AuthService } from '../../../services/auth';\r\n@Component({\r\n  selector : 'login',\r\n  template: require('./client/dev/app/components/front-end/shared/templates/login.html'),\r\n  styles: [require('./client/dev/app/components/front-end/shared/styles/login.css')],\r\n  directives:[\r\n    ROUTER_DIRECTIVES,\r\n    CORE_DIRECTIVES,\r\n    FORM_DIRECTIVES\r\n  ]\r\n})\r\n\r\nexport class LoginComponent {\r\n\r\n  user: User[] = [];\r\n  loginForm: ControlGroup;\r\n  userValid:string;\r\n  passValid:string;\r\n  constructor(@Inject(FormBuilder) fb:FormBuilder, @Inject(AuthService) private _authService: AuthService, public router: Router) {\r\n    this.loginForm = fb.group({\r\n      username: [\"\",Validators.required],\r\n      password: [\"\",Validators.required]\r\n    })\r\n  }\r\n\r\n  login(user: any): void {\r\n    this._authService\r\n      .login(user)\r\n      .subscribe(\r\n        res => {\r\n          if(res.invalidUsername){\r\n            this.userValid = '*'+res.invalidUsername;\r\n            this.passValid = null;\r\n          } else if(res.invalidPassword){\r\n            this.passValid = '*'+res.invalidPassword;\r\n            this.userValid = null;\r\n          } else {\r\n            localStorage.setItem('username', res.username);\r\n\r\n            if(res.role == 'admin'){\r\n              localStorage.setItem('userrole', res.role);\r\n            }else{\r\n              localStorage.setItem('userrole', 'normal');\r\n            }\r\n            window.location.reload();\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/shared/login.ts\n **/","/**\r\n * Created by GiangDH on 5/19/16.\r\n */\r\nimport {\r\n  Component,\r\n  Inject\r\n} from '@angular/core';\r\nimport {\r\n  Validators,\r\n  FormBuilder,\r\n  ControlGroup,\r\n  Control,\r\n  FORM_DIRECTIVES,\r\n} from '@angular/common';\r\nimport { Router, Routes } from '@angular/router';\r\nimport { User } from '../../../interface/user.ts';\r\nimport { AuthService } from '../../../services/auth';\r\n@Component({\r\n  selector : 'register',\r\n  template: require('./client/dev/app/components/front-end/shared/templates/register.html'),\r\n  styles: [require('./client/dev/app/components/front-end/shared/styles/login.css')],\r\n  directives: [FORM_DIRECTIVES]\r\n})\r\n\r\nexport class RegisterComponent {\r\n  user: User[] = [];\r\n  regForm: ControlGroup;\r\n  userValid:string;\r\n  passValid:string;\r\n  emailValid:string;\r\n  constructor(@Inject(FormBuilder) fb:FormBuilder, @Inject(AuthService) private _authService: AuthService, public router: Router) {\r\n    this.regForm = fb.group({\r\n      username: [\"\",Validators.required],\r\n      password: [\"\",Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$')],\r\n      email: [\"\",Validators.pattern('^(([a-zA-Z]|[0-9])|([-]|[_]|[.]))+[@](([a-zA-Z0-9])|([-])){2,63}[.](([a-zA-Z0-9]){2,63})+$')]\r\n    })\r\n  }\r\n  register(user: any): void {\r\n    this._authService\r\n      .register(user)\r\n      .subscribe(\r\n        response => {\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/shared/register.ts\n **/","import {\r\n  Component,\r\n  Inject,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { ROUTER_DIRECTIVES, Router} from '@angular/router';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\n@Component({\r\n  selector : 'sidebar',\r\n  template: require('./client/dev/app/components/front-end/shared/templates/side-bar.html'),\r\n  styles: [require('./client/dev/app/components/front-end/shared/styles/side-bar.css')],\r\n  directives: [ROUTER_DIRECTIVES]\r\n})\r\n\r\nexport class SideBarComponent {\r\n  constructor(private _knowledgeService: KnowledgeService){\r\n\r\n  }\r\n  knowledges: Knowledge[];\r\n\r\n  ngOnInit(): void {\r\n    this._knowledgeService.getAllKnowledges().subscribe((knowledges) => {\r\n      var parent = [];\r\n      var subCate = [];\r\n      for(var i = 0;i < knowledges.length;i++){\r\n        if(!knowledges[i].hasOwnProperty('parent')){\r\n          parent.push(knowledges[i]);\r\n        }\r\n      }\r\n      for(var i = 0;i<parent.length;i++){\r\n        for(var j = 0;j< knowledges.length;j++){\r\n          if((knowledges[j].hasOwnProperty('parent'))&&(knowledges[j].parent===parent[i]._id)){\r\n            subCate.push(knowledges[j]);\r\n          }\r\n        }\r\n        parent[i][\"subCategory\"] = subCate;\r\n        subCate = [];\r\n      }\r\n      this.knowledges = parent;\r\n    });\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/shared/side-bar.ts\n **/","//cores\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { Router, ROUTER_DIRECTIVES, ActivatedRoute} from'@angular/router';\r\n\r\n//components\r\nimport { PushNotificationComponent } from '../shared/notification';\r\n\r\n//services\r\nimport { UserService } from '../../../services/users';\r\nimport { AuthService } from '../../../services/auth';\r\nimport { KnowledgeService } from '../../../services/knowledge';\r\n\r\n//interfaces\r\nimport { User } from '../../../interface/user';\r\nimport { FriendShip } from '../../../interface/friendship';\r\nimport { Request } from '../../../interface/request';\r\nimport { Knowledge } from '../../../interface/knowledge';\r\n\r\n@Component({\r\n  selector: 'request-record',\r\n  template: require('./client/dev/app/components/front-end/user-profile/templates/request-record.html'),\r\n  styles: [require('./client/dev/app/components/front-end/user-profile/styles/user-profile.css')],\r\n  directives: [\r\n    ROUTER_DIRECTIVES,\r\n    PushNotificationComponent\r\n  ]\r\n})\r\n\r\nexport class RequestRecordComponent {\r\n@Input('title') title: string;\r\n@Input('description') description: string;\r\n@Input('createdAt') createdAt: string;\r\n@Input('knowledgeId') knowledgeId: string;\r\n@Input('status') status: string;\r\n@Input('requestId') requestId:string;\r\n\r\n  // requests: Request[];\r\n\r\n  knowledgeName: string;\r\n  id: string;\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute, private _userService: UserService, private _knowledgeService: KnowledgeService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.createdAt = this.formatDate(createdAt);\r\n    this.id = this.knowledgeId;\r\n    console.log(this.id);\r\n    this.getKnowledgeNameOfRequest();\r\n  }\r\n\r\n   public formatDate = function (date) {\r\n     if (date) {\r\n       var newDate, day, month, year;\r\n       year = date.substr(0, 4);\r\n       month = date.substr(5, 2);\r\n       day = date.substr(8, 2);\r\n       return newDate = day + '/' + month + '/' + year;\r\n     }\r\n   }\r\n\r\n   public getKnowledgeNameOfRequest() {\r\n     //get back.knowledge name by knowledgeId\r\n     this._knowledgeService.findKnowledgeById(this.knowledgeId).subscribe(\r\n       (knowledge) => {\r\n         this.knowledgeName = knowledge.name;\r\n       },\r\n       (error) => {\r\n         console.log(error);\r\n       });\r\n   }\r\n\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/components/front-end/user-profile/request-record.ts\n **/","/**\r\n * Created by GiangDH on 7/9/16.\r\n */\r\nimport { RouterConfig }  from '@angular/router';\r\n\r\nimport {AdminComponent}  from '../components/admin.component';\r\n\r\n\r\nimport { UpdateKnowledgeComponent } from '../components/back-end/knowledge/knowledge-update';\r\nimport { KnowledgeListComponent } from '../components/back-end/knowledge/knowledges-list';\r\nimport { RequestListComponent } from \"../components/back-end/request/requests-list\";\r\nimport { UpdateRequestComponent } from \"../components/back-end/request/request-update\";\r\nimport { UpdateBadwordComponent } from \"../components/back-end/badword/badword-update\";\r\nimport { BadwordListComponent } from \"../components/back-end/badword/badwords-list\";\r\nimport { UserListComponent } from \"../components/back-end/users/user-list\";\r\n\r\n\r\nexport const AdminRoutes: RouterConfig = [\r\n  {\r\n    path: 'admin',\r\n    component: AdminComponent,\r\n    children: [\r\n      {\r\n        path: 'users',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: UserListComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'knowledges',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: KnowledgeListComponent\r\n          },\r\n          {\r\n            path: ':id',\r\n            component: UpdateKnowledgeComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'requests',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: RequestListComponent\r\n          },\r\n          {\r\n            path: ':id',\r\n            component: UpdateRequestComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'badwords',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: BadwordListComponent\r\n          } ,\r\n          {\r\n            path: ':id',\r\n            component: UpdateBadwordComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo:'knowledges'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/routes/admin.routes.ts\n **/","/**\r\n * Created by GiangDH on 7/9/16.\r\n */\r\nimport { RouterConfig }          from '@angular/router';\r\n\r\n//Root Component\r\nimport { KshareComponent } from '../components/kshare.component';\r\n//Function Components\r\nimport { HomeComponent} from \"../components/front-end/home/home\";\r\nimport { RequestListClientComponent } from \"../components/front-end/request/request-list\";\r\nimport { RequestDetailClientComponent } from \"../components/front-end/request/request-detail\";\r\nimport { RequestUpdateClientComponent } from \"../components/front-end/request/request-update\";\r\nimport { RequestCategoryComponent } from \"../components/front-end/request/request-search\";\r\nimport { KSpaceComponent } from \"../components/front-end/kspace/kspace\";\r\nimport { KSpaceListComponent } from \"../components/front-end/kspace/kspace-list\";\r\nimport { KSpaceInfoComponent } from \"../components/front-end/kspace/kspace-info\";\r\nimport { FriendListComponent } from \"../components/front-end/user-profile/friend-list\";\r\nimport { UserProfileComponent } from \"../components/front-end/user-profile/user-profile\";\r\n\r\nexport const KShareRoutes: RouterConfig = [\r\n  {\r\n    path: '',\r\n    component: KshareComponent,\r\n    children: [\r\n      {\r\n        path: 'user',\r\n        children: [\r\n          {\r\n            path: ':name',\r\n            children: [\r\n              {\r\n                path: 'friends',\r\n                component: FriendListComponent\r\n              },\r\n              {\r\n                path: '',\r\n                component: UserProfileComponent\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'kspace',\r\n        children: [\r\n          {\r\n            path: 'info',\r\n            children: [{\r\n              path:':id',\r\n              component: KSpaceInfoComponent\r\n            }]\r\n          },\r\n          {\r\n            path: '',\r\n            component: KSpaceListComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'requests',\r\n        children: [\r\n          {\r\n            path: ':id',\r\n            children:[\r\n              {\r\n                path: 'info',\r\n                component:RequestDetailClientComponent\r\n              },\r\n              {\r\n                path: 'update',\r\n                component: RequestUpdateClientComponent\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            path: ':type/:id',\r\n            pathMatch: 'full',\r\n            component: RequestCategoryComponent\r\n          },\r\n          {\r\n            path: '',\r\n            component: RequestListClientComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: '',\r\n        component: HomeComponent\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    path: 'room',\r\n    children: [{\r\n      path:':id',\r\n      component: KSpaceComponent\r\n    }]\r\n  },\r\n];\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/routes/kshare.routes.ts\n **/","declare var io:any;\r\nvar socket;\r\nexport class SocketIOService {\r\n    ioInit() {\r\n        socket = io('http://localhost:3333');\r\n        return socket;\r\n    }\r\n\r\n    ioSubscribeRoom (room: string ){\r\n        socket.emit('subscribe', room);\r\n    }\r\n\r\n    emitStartPoint(x,y,color,width) {\r\n                var data = {\r\n                    x: x,\r\n                    y: y,\r\n                    color,\r\n                    width\r\n                };\r\n                socket.emit( 'startPoint', data)\r\n    }\r\n    emitPathPoint( x, y) {\r\n                var data = {\r\n                    x: x,\r\n                    y: y\r\n                };\r\n                socket.emit( 'pathpoint', data)\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** node_modules/angular2-template-loader!./client/dev/app/services/socket.io.services.ts\n **/","\"use strict\";\nvar Subscriber_1 = require('./Subscriber');\nvar Operator = (function () {\n    function Operator() {\n    }\n    Operator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new Subscriber_1.Subscriber(subscriber));\n    };\n    return Operator;\n}());\nexports.Operator = Operator;\n//# sourceMappingURL=Operator.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/Operator.js\n ** module id = 620\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bindCallback_1 = require('../../observable/bindCallback');\nObservable_1.Observable.bindCallback = bindCallback_1.bindCallback;\n//# sourceMappingURL=bindCallback.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/bindCallback.js\n ** module id = 622\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bindNodeCallback_1 = require('../../observable/bindNodeCallback');\nObservable_1.Observable.bindNodeCallback = bindNodeCallback_1.bindNodeCallback;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/bindNodeCallback.js\n ** module id = 623\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineLatest_1 = require('../../operator/combineLatest');\nObservable_1.Observable.combineLatest = combineLatest_1.combineLatestStatic;\n//# sourceMappingURL=combineLatest.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/combineLatest.js\n ** module id = 624\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concat_1 = require('../../observable/concat');\nObservable_1.Observable.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/concat.js\n ** module id = 625\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar defer_1 = require('../../observable/defer');\nObservable_1.Observable.defer = defer_1.defer;\n//# sourceMappingURL=defer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/defer.js\n ** module id = 626\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar empty_1 = require('../../observable/empty');\nObservable_1.Observable.empty = empty_1.empty;\n//# sourceMappingURL=empty.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/empty.js\n ** module id = 627\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEvent_1 = require('../../observable/fromEvent');\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/fromEvent.js\n ** module id = 628\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEventPattern_1 = require('../../observable/fromEventPattern');\nObservable_1.Observable.fromEventPattern = fromEventPattern_1.fromEventPattern;\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/fromEventPattern.js\n ** module id = 629\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar interval_1 = require('../../observable/interval');\nObservable_1.Observable.interval = interval_1.interval;\n//# sourceMappingURL=interval.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/interval.js\n ** module id = 630\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../observable/merge');\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/merge.js\n ** module id = 631\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar never_1 = require('../../observable/never');\nObservable_1.Observable.never = never_1.never;\n//# sourceMappingURL=never.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/never.js\n ** module id = 632\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/of.js\n ** module id = 633\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar race_1 = require('../../operator/race');\nObservable_1.Observable.race = race_1.raceStatic;\n//# sourceMappingURL=race.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/race.js\n ** module id = 634\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar range_1 = require('../../observable/range');\nObservable_1.Observable.range = range_1.range;\n//# sourceMappingURL=range.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/range.js\n ** module id = 635\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throw_1 = require('../../observable/throw');\nObservable_1.Observable.throw = throw_1._throw;\n//# sourceMappingURL=throw.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/throw.js\n ** module id = 636\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timer_1 = require('../../observable/timer');\nObservable_1.Observable.timer = timer_1.timer;\n//# sourceMappingURL=timer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/timer.js\n ** module id = 637\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar zip_1 = require('../../observable/zip');\nObservable_1.Observable.zip = zip_1.zip;\n//# sourceMappingURL=zip.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/observable/zip.js\n ** module id = 638\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar audit_1 = require('../../operator/audit');\nObservable_1.Observable.prototype.audit = audit_1.audit;\n//# sourceMappingURL=audit.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/audit.js\n ** module id = 639\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar auditTime_1 = require('../../operator/auditTime');\nObservable_1.Observable.prototype.auditTime = auditTime_1.auditTime;\n//# sourceMappingURL=auditTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/auditTime.js\n ** module id = 640\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar buffer_1 = require('../../operator/buffer');\nObservable_1.Observable.prototype.buffer = buffer_1.buffer;\n//# sourceMappingURL=buffer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/buffer.js\n ** module id = 641\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferCount_1 = require('../../operator/bufferCount');\nObservable_1.Observable.prototype.bufferCount = bufferCount_1.bufferCount;\n//# sourceMappingURL=bufferCount.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/bufferCount.js\n ** module id = 642\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferTime_1 = require('../../operator/bufferTime');\nObservable_1.Observable.prototype.bufferTime = bufferTime_1.bufferTime;\n//# sourceMappingURL=bufferTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/bufferTime.js\n ** module id = 643\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferToggle_1 = require('../../operator/bufferToggle');\nObservable_1.Observable.prototype.bufferToggle = bufferToggle_1.bufferToggle;\n//# sourceMappingURL=bufferToggle.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/bufferToggle.js\n ** module id = 644\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar bufferWhen_1 = require('../../operator/bufferWhen');\nObservable_1.Observable.prototype.bufferWhen = bufferWhen_1.bufferWhen;\n//# sourceMappingURL=bufferWhen.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/bufferWhen.js\n ** module id = 645\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar cache_1 = require('../../operator/cache');\nObservable_1.Observable.prototype.cache = cache_1.cache;\n//# sourceMappingURL=cache.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/cache.js\n ** module id = 646\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar catch_1 = require('../../operator/catch');\nObservable_1.Observable.prototype.catch = catch_1._catch;\n//# sourceMappingURL=catch.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/catch.js\n ** module id = 647\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineAll_1 = require('../../operator/combineAll');\nObservable_1.Observable.prototype.combineAll = combineAll_1.combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/combineAll.js\n ** module id = 648\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar combineLatest_1 = require('../../operator/combineLatest');\nObservable_1.Observable.prototype.combineLatest = combineLatest_1.combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/combineLatest.js\n ** module id = 649\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concat_1 = require('../../operator/concat');\nObservable_1.Observable.prototype.concat = concat_1.concat;\n//# sourceMappingURL=concat.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/concat.js\n ** module id = 650\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatAll_1 = require('../../operator/concatAll');\nObservable_1.Observable.prototype.concatAll = concatAll_1.concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/concatAll.js\n ** module id = 651\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatMap_1 = require('../../operator/concatMap');\nObservable_1.Observable.prototype.concatMap = concatMap_1.concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/concatMap.js\n ** module id = 652\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar concatMapTo_1 = require('../../operator/concatMapTo');\nObservable_1.Observable.prototype.concatMapTo = concatMapTo_1.concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/concatMapTo.js\n ** module id = 653\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar count_1 = require('../../operator/count');\nObservable_1.Observable.prototype.count = count_1.count;\n//# sourceMappingURL=count.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/count.js\n ** module id = 654\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar debounce_1 = require('../../operator/debounce');\nObservable_1.Observable.prototype.debounce = debounce_1.debounce;\n//# sourceMappingURL=debounce.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/debounce.js\n ** module id = 655\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar defaultIfEmpty_1 = require('../../operator/defaultIfEmpty');\nObservable_1.Observable.prototype.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/defaultIfEmpty.js\n ** module id = 656\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar delay_1 = require('../../operator/delay');\nObservable_1.Observable.prototype.delay = delay_1.delay;\n//# sourceMappingURL=delay.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/delay.js\n ** module id = 657\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar delayWhen_1 = require('../../operator/delayWhen');\nObservable_1.Observable.prototype.delayWhen = delayWhen_1.delayWhen;\n//# sourceMappingURL=delayWhen.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/delayWhen.js\n ** module id = 658\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar dematerialize_1 = require('../../operator/dematerialize');\nObservable_1.Observable.prototype.dematerialize = dematerialize_1.dematerialize;\n//# sourceMappingURL=dematerialize.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/dematerialize.js\n ** module id = 659\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar distinctUntilChanged_1 = require('../../operator/distinctUntilChanged');\nObservable_1.Observable.prototype.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/distinctUntilChanged.js\n ** module id = 660\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar do_1 = require('../../operator/do');\nObservable_1.Observable.prototype.do = do_1._do;\n//# sourceMappingURL=do.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/do.js\n ** module id = 661\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar expand_1 = require('../../operator/expand');\nObservable_1.Observable.prototype.expand = expand_1.expand;\n//# sourceMappingURL=expand.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/expand.js\n ** module id = 662\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar filter_1 = require('../../operator/filter');\nObservable_1.Observable.prototype.filter = filter_1.filter;\n//# sourceMappingURL=filter.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/filter.js\n ** module id = 663\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar finally_1 = require('../../operator/finally');\nObservable_1.Observable.prototype.finally = finally_1._finally;\n//# sourceMappingURL=finally.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/finally.js\n ** module id = 664\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar first_1 = require('../../operator/first');\nObservable_1.Observable.prototype.first = first_1.first;\n//# sourceMappingURL=first.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/first.js\n ** module id = 665\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar groupBy_1 = require('../../operator/groupBy');\nObservable_1.Observable.prototype.groupBy = groupBy_1.groupBy;\n//# sourceMappingURL=groupBy.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/groupBy.js\n ** module id = 666\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar ignoreElements_1 = require('../../operator/ignoreElements');\nObservable_1.Observable.prototype.ignoreElements = ignoreElements_1.ignoreElements;\n//# sourceMappingURL=ignoreElements.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/ignoreElements.js\n ** module id = 667\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar last_1 = require('../../operator/last');\nObservable_1.Observable.prototype.last = last_1.last;\n//# sourceMappingURL=last.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/last.js\n ** module id = 668\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar let_1 = require('../../operator/let');\nObservable_1.Observable.prototype.let = let_1.letProto;\nObservable_1.Observable.prototype.letBind = let_1.letProto;\n//# sourceMappingURL=let.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/let.js\n ** module id = 669\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mapTo_1 = require('../../operator/mapTo');\nObservable_1.Observable.prototype.mapTo = mapTo_1.mapTo;\n//# sourceMappingURL=mapTo.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/mapTo.js\n ** module id = 670\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar materialize_1 = require('../../operator/materialize');\nObservable_1.Observable.prototype.materialize = materialize_1.materialize;\n//# sourceMappingURL=materialize.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/materialize.js\n ** module id = 671\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../operator/merge');\nObservable_1.Observable.prototype.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/merge.js\n ** module id = 672\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMapTo_1 = require('../../operator/mergeMapTo');\nObservable_1.Observable.prototype.flatMapTo = mergeMapTo_1.mergeMapTo;\nObservable_1.Observable.prototype.mergeMapTo = mergeMapTo_1.mergeMapTo;\n//# sourceMappingURL=mergeMapTo.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/mergeMapTo.js\n ** module id = 673\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar multicast_1 = require('../../operator/multicast');\nObservable_1.Observable.prototype.multicast = multicast_1.multicast;\n//# sourceMappingURL=multicast.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/multicast.js\n ** module id = 674\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar partition_1 = require('../../operator/partition');\nObservable_1.Observable.prototype.partition = partition_1.partition;\n//# sourceMappingURL=partition.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/partition.js\n ** module id = 675\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar pluck_1 = require('../../operator/pluck');\nObservable_1.Observable.prototype.pluck = pluck_1.pluck;\n//# sourceMappingURL=pluck.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/pluck.js\n ** module id = 676\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publishBehavior_1 = require('../../operator/publishBehavior');\nObservable_1.Observable.prototype.publishBehavior = publishBehavior_1.publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/publishBehavior.js\n ** module id = 677\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publishLast_1 = require('../../operator/publishLast');\nObservable_1.Observable.prototype.publishLast = publishLast_1.publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/publishLast.js\n ** module id = 678\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar publishReplay_1 = require('../../operator/publishReplay');\nObservable_1.Observable.prototype.publishReplay = publishReplay_1.publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/publishReplay.js\n ** module id = 679\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar race_1 = require('../../operator/race');\nObservable_1.Observable.prototype.race = race_1.race;\n//# sourceMappingURL=race.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/race.js\n ** module id = 680\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar repeat_1 = require('../../operator/repeat');\nObservable_1.Observable.prototype.repeat = repeat_1.repeat;\n//# sourceMappingURL=repeat.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/repeat.js\n ** module id = 681\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar retry_1 = require('../../operator/retry');\nObservable_1.Observable.prototype.retry = retry_1.retry;\n//# sourceMappingURL=retry.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/retry.js\n ** module id = 682\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar retryWhen_1 = require('../../operator/retryWhen');\nObservable_1.Observable.prototype.retryWhen = retryWhen_1.retryWhen;\n//# sourceMappingURL=retryWhen.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/retryWhen.js\n ** module id = 683\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar sample_1 = require('../../operator/sample');\nObservable_1.Observable.prototype.sample = sample_1.sample;\n//# sourceMappingURL=sample.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/sample.js\n ** module id = 684\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar sampleTime_1 = require('../../operator/sampleTime');\nObservable_1.Observable.prototype.sampleTime = sampleTime_1.sampleTime;\n//# sourceMappingURL=sampleTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/sampleTime.js\n ** module id = 685\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar scan_1 = require('../../operator/scan');\nObservable_1.Observable.prototype.scan = scan_1.scan;\n//# sourceMappingURL=scan.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/scan.js\n ** module id = 686\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar share_1 = require('../../operator/share');\nObservable_1.Observable.prototype.share = share_1.share;\n//# sourceMappingURL=share.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/share.js\n ** module id = 687\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar single_1 = require('../../operator/single');\nObservable_1.Observable.prototype.single = single_1.single;\n//# sourceMappingURL=single.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/single.js\n ** module id = 688\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skip_1 = require('../../operator/skip');\nObservable_1.Observable.prototype.skip = skip_1.skip;\n//# sourceMappingURL=skip.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/skip.js\n ** module id = 689\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skipUntil_1 = require('../../operator/skipUntil');\nObservable_1.Observable.prototype.skipUntil = skipUntil_1.skipUntil;\n//# sourceMappingURL=skipUntil.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/skipUntil.js\n ** module id = 690\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar skipWhile_1 = require('../../operator/skipWhile');\nObservable_1.Observable.prototype.skipWhile = skipWhile_1.skipWhile;\n//# sourceMappingURL=skipWhile.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/skipWhile.js\n ** module id = 691\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar startWith_1 = require('../../operator/startWith');\nObservable_1.Observable.prototype.startWith = startWith_1.startWith;\n//# sourceMappingURL=startWith.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/startWith.js\n ** module id = 692\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar subscribeOn_1 = require('../../operator/subscribeOn');\nObservable_1.Observable.prototype.subscribeOn = subscribeOn_1.subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/subscribeOn.js\n ** module id = 693\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switch_1 = require('../../operator/switch');\nObservable_1.Observable.prototype.switch = switch_1._switch;\n//# sourceMappingURL=switch.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/switch.js\n ** module id = 694\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMap_1 = require('../../operator/switchMap');\nObservable_1.Observable.prototype.switchMap = switchMap_1.switchMap;\n//# sourceMappingURL=switchMap.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/switchMap.js\n ** module id = 695\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar switchMapTo_1 = require('../../operator/switchMapTo');\nObservable_1.Observable.prototype.switchMapTo = switchMapTo_1.switchMapTo;\n//# sourceMappingURL=switchMapTo.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/switchMapTo.js\n ** module id = 696\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeLast_1 = require('../../operator/takeLast');\nObservable_1.Observable.prototype.takeLast = takeLast_1.takeLast;\n//# sourceMappingURL=takeLast.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/takeLast.js\n ** module id = 697\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeUntil_1 = require('../../operator/takeUntil');\nObservable_1.Observable.prototype.takeUntil = takeUntil_1.takeUntil;\n//# sourceMappingURL=takeUntil.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/takeUntil.js\n ** module id = 698\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar takeWhile_1 = require('../../operator/takeWhile');\nObservable_1.Observable.prototype.takeWhile = takeWhile_1.takeWhile;\n//# sourceMappingURL=takeWhile.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/takeWhile.js\n ** module id = 699\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throttle_1 = require('../../operator/throttle');\nObservable_1.Observable.prototype.throttle = throttle_1.throttle;\n//# sourceMappingURL=throttle.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/throttle.js\n ** module id = 700\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar throttleTime_1 = require('../../operator/throttleTime');\nObservable_1.Observable.prototype.throttleTime = throttleTime_1.throttleTime;\n//# sourceMappingURL=throttleTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/throttleTime.js\n ** module id = 701\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timeout_1 = require('../../operator/timeout');\nObservable_1.Observable.prototype.timeout = timeout_1.timeout;\n//# sourceMappingURL=timeout.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/timeout.js\n ** module id = 702\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar timeoutWith_1 = require('../../operator/timeoutWith');\nObservable_1.Observable.prototype.timeoutWith = timeoutWith_1.timeoutWith;\n//# sourceMappingURL=timeoutWith.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/timeoutWith.js\n ** module id = 703\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar toArray_1 = require('../../operator/toArray');\nObservable_1.Observable.prototype.toArray = toArray_1.toArray;\n//# sourceMappingURL=toArray.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/toArray.js\n ** module id = 704\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar window_1 = require('../../operator/window');\nObservable_1.Observable.prototype.window = window_1.window;\n//# sourceMappingURL=window.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/window.js\n ** module id = 705\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowCount_1 = require('../../operator/windowCount');\nObservable_1.Observable.prototype.windowCount = windowCount_1.windowCount;\n//# sourceMappingURL=windowCount.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/windowCount.js\n ** module id = 706\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowTime_1 = require('../../operator/windowTime');\nObservable_1.Observable.prototype.windowTime = windowTime_1.windowTime;\n//# sourceMappingURL=windowTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/windowTime.js\n ** module id = 707\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowToggle_1 = require('../../operator/windowToggle');\nObservable_1.Observable.prototype.windowToggle = windowToggle_1.windowToggle;\n//# sourceMappingURL=windowToggle.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/windowToggle.js\n ** module id = 708\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar windowWhen_1 = require('../../operator/windowWhen');\nObservable_1.Observable.prototype.windowWhen = windowWhen_1.windowWhen;\n//# sourceMappingURL=windowWhen.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/windowWhen.js\n ** module id = 709\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar withLatestFrom_1 = require('../../operator/withLatestFrom');\nObservable_1.Observable.prototype.withLatestFrom = withLatestFrom_1.withLatestFrom;\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/withLatestFrom.js\n ** module id = 710\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar zip_1 = require('../../operator/zip');\nObservable_1.Observable.prototype.zip = zip_1.zipProto;\n//# sourceMappingURL=zip.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/zip.js\n ** module id = 711\n ** module chunks = 2\n **/","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar zipAll_1 = require('../../operator/zipAll');\nObservable_1.Observable.prototype.zipAll = zipAll_1.zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/add/operator/zipAll.js\n ** module id = 712\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar AsyncSubject_1 = require('../AsyncSubject');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundCallbackObservable = (function (_super) {\n    __extends(BoundCallbackObservable, _super);\n    function BoundCallbackObservable(callbackFunc, selector, args, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a callback function to an observable sequence.\n     * @param {function} callbackFunc Function with a callback as the last\n     * parameter.\n     * @param {function} selector A selector which takes the arguments from the\n     * callback to produce a single item to yield on next.\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule\n     * the callbacks.\n     * @return {function(...params: *): Observable<T>} a function which returns the\n     * Observable that corresponds to the callback.\n     * @static true\n     * @name bindCallback\n     * @owner Observable\n     */\n    BoundCallbackObservable.create = function (callbackFunc, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundCallbackObservable(callbackFunc, selector, args, scheduler);\n        };\n    };\n    BoundCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber });\n        }\n    };\n    return BoundCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundCallbackObservable = BoundCallbackObservable;\nfunction dispatch(state) {\n    var self = this;\n    var source = state.source, subscriber = state.subscriber;\n    var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\n    var subject = source.subject;\n    if (!subject) {\n        subject = source.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function handlerFn() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i - 0] = arguments[_i];\n            }\n            var source = handlerFn.source;\n            var selector = source.selector, subject = source.subject;\n            if (selector) {\n                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                if (result_2 === errorObject_1.errorObject) {\n                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                }\n                else {\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                }\n            }\n            else {\n                var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        // use named function to pass values in without closure\n        handler.source = source;\n        var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n        if (result === errorObject_1.errorObject) {\n            subject.error(errorObject_1.errorObject.e);\n        }\n    }\n    self.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundCallbackObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/BoundCallbackObservable.js\n ** module id = 714\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar AsyncSubject_1 = require('../AsyncSubject');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar BoundNodeCallbackObservable = (function (_super) {\n    __extends(BoundNodeCallbackObservable, _super);\n    function BoundNodeCallbackObservable(callbackFunc, selector, args, scheduler) {\n        _super.call(this);\n        this.callbackFunc = callbackFunc;\n        this.selector = selector;\n        this.args = args;\n        this.scheduler = scheduler;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Converts a node callback to an Observable.\n     * @param callbackFunc\n     * @param selector\n     * @param scheduler\n     * @return {function(...params: *): Observable<T>}\n     * @static true\n     * @name bindNodeCallback\n     * @owner Observable\n     */\n    BoundNodeCallbackObservable.create = function (callbackFunc, selector, scheduler) {\n        if (selector === void 0) { selector = undefined; }\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            return new BoundNodeCallbackObservable(callbackFunc, selector, args, scheduler);\n        };\n    };\n    BoundNodeCallbackObservable.prototype._subscribe = function (subscriber) {\n        var callbackFunc = this.callbackFunc;\n        var args = this.args;\n        var scheduler = this.scheduler;\n        var subject = this.subject;\n        if (!scheduler) {\n            if (!subject) {\n                subject = this.subject = new AsyncSubject_1.AsyncSubject();\n                var handler = function handlerFn() {\n                    var innerArgs = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        innerArgs[_i - 0] = arguments[_i];\n                    }\n                    var source = handlerFn.source;\n                    var selector = source.selector, subject = source.subject;\n                    var err = innerArgs.shift();\n                    if (err) {\n                        subject.error(err);\n                    }\n                    else if (selector) {\n                        var result_1 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                        if (result_1 === errorObject_1.errorObject) {\n                            subject.error(errorObject_1.errorObject.e);\n                        }\n                        else {\n                            subject.next(result_1);\n                            subject.complete();\n                        }\n                    }\n                    else {\n                        subject.next(innerArgs.length === 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    }\n                };\n                // use named function instance to avoid closure.\n                handler.source = this;\n                var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n                if (result === errorObject_1.errorObject) {\n                    subject.error(errorObject_1.errorObject.e);\n                }\n            }\n            return subject.subscribe(subscriber);\n        }\n        else {\n            return scheduler.schedule(dispatch, 0, { source: this, subscriber: subscriber });\n        }\n    };\n    return BoundNodeCallbackObservable;\n}(Observable_1.Observable));\nexports.BoundNodeCallbackObservable = BoundNodeCallbackObservable;\nfunction dispatch(state) {\n    var self = this;\n    var source = state.source, subscriber = state.subscriber;\n    var callbackFunc = source.callbackFunc, args = source.args, scheduler = source.scheduler;\n    var subject = source.subject;\n    if (!subject) {\n        subject = source.subject = new AsyncSubject_1.AsyncSubject();\n        var handler = function handlerFn() {\n            var innerArgs = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                innerArgs[_i - 0] = arguments[_i];\n            }\n            var source = handlerFn.source;\n            var selector = source.selector, subject = source.subject;\n            var err = innerArgs.shift();\n            if (err) {\n                subject.error(err);\n            }\n            else if (selector) {\n                var result_2 = tryCatch_1.tryCatch(selector).apply(this, innerArgs);\n                if (result_2 === errorObject_1.errorObject) {\n                    self.add(scheduler.schedule(dispatchError, 0, { err: errorObject_1.errorObject.e, subject: subject }));\n                }\n                else {\n                    self.add(scheduler.schedule(dispatchNext, 0, { value: result_2, subject: subject }));\n                }\n            }\n            else {\n                var value = innerArgs.length === 1 ? innerArgs[0] : innerArgs;\n                self.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));\n            }\n        };\n        // use named function to pass values in without closure\n        handler.source = source;\n        var result = tryCatch_1.tryCatch(callbackFunc).apply(this, args.concat(handler));\n        if (result === errorObject_1.errorObject) {\n            subject.error(errorObject_1.errorObject.e);\n        }\n    }\n    self.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    var value = arg.value, subject = arg.subject;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    var err = arg.err, subject = arg.subject;\n    subject.error(err);\n}\n//# sourceMappingURL=BoundNodeCallbackObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/BoundNodeCallbackObservable.js\n ** module id = 715\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar DeferObservable = (function (_super) {\n    __extends(DeferObservable, _super);\n    function DeferObservable(observableFactory) {\n        _super.call(this);\n        this.observableFactory = observableFactory;\n    }\n    /**\n     * Creates an Observable that, on subscribe, calls an Observable factory to\n     * make an Observable for each new Observer.\n     *\n     * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n     * is subscribed.\n     * </span>\n     *\n     * <img src=\"./img/defer.png\" width=\"100%\">\n     *\n     * `defer` allows you to create the Observable only when the Observer\n     * subscribes, and create a fresh Observable for each Observer. It waits until\n     * an Observer subscribes to it, and then it generates an Observable,\n     * typically with an Observable factory function. It does this afresh for each\n     * subscriber, so although each subscriber may think it is subscribing to the\n     * same Observable, in fact each subscriber gets its own individual\n     * Observable.\n     *\n     * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n     * var clicksOrInterval = Rx.Observable.defer(function () {\n     *   if (Math.random() > 0.5) {\n     *     return Rx.Observable.fromEvent(document, 'click');\n     *   } else {\n     *     return Rx.Observable.interval(1000);\n     *   }\n     * });\n     * clicksOrInterval.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     *\n     * @param {function(): Observable|Promise} observableFactory The Observable\n     * factory function to invoke for each Observer that subscribes to the output\n     * Observable. May also return a Promise, which will be converted on the fly\n     * to an Observable.\n     * @return {Observable} An Observable whose Observers' subscriptions trigger\n     * an invocation of the given Observable factory function.\n     * @static true\n     * @name defer\n     * @owner Observable\n     */\n    DeferObservable.create = function (observableFactory) {\n        return new DeferObservable(observableFactory);\n    };\n    DeferObservable.prototype._subscribe = function (subscriber) {\n        return new DeferSubscriber(subscriber, this.observableFactory);\n    };\n    return DeferObservable;\n}(Observable_1.Observable));\nexports.DeferObservable = DeferObservable;\nvar DeferSubscriber = (function (_super) {\n    __extends(DeferSubscriber, _super);\n    function DeferSubscriber(destination, factory) {\n        _super.call(this, destination);\n        this.factory = factory;\n        this.tryDefer();\n    }\n    DeferSubscriber.prototype.tryDefer = function () {\n        try {\n            this._callFactory();\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    DeferSubscriber.prototype._callFactory = function () {\n        var result = this.factory();\n        if (result) {\n            this.add(subscribeToResult_1.subscribeToResult(this, result));\n        }\n    };\n    return DeferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=DeferObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/DeferObservable.js\n ** module id = 716\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ErrorObservable = (function (_super) {\n    __extends(ErrorObservable, _super);\n    function ErrorObservable(error, scheduler) {\n        _super.call(this);\n        this.error = error;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits an error notification.\n     *\n     * <span class=\"informal\">Just emits 'error', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/throw.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the error notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then emit an error.</caption>\n     * var result = Rx.Observable.throw(new Error('oops!')).startWith(7);\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @example <caption>Map and flattens numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x === 13 ?\n     *     Rx.Observable.throw('Thirteens are bad') :\n     *     Rx.Observable.of('a', 'b', 'c')\n     * );\n     * result.subscribe(x => console.log(x), e => console.error(e));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link of}\n     *\n     * @param {any} error The particular Error to pass to the error notification.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emission of the error notification.\n     * @return {Observable} An error Observable: emits only the error notification\n     * using the given error argument.\n     * @static true\n     * @name throw\n     * @owner Observable\n     */\n    ErrorObservable.create = function (error, scheduler) {\n        return new ErrorObservable(error, scheduler);\n    };\n    ErrorObservable.dispatch = function (arg) {\n        var error = arg.error, subscriber = arg.subscriber;\n        subscriber.error(error);\n    };\n    ErrorObservable.prototype._subscribe = function (subscriber) {\n        var error = this.error;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ErrorObservable.dispatch, 0, {\n                error: error, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.error(error);\n        }\n    };\n    return ErrorObservable;\n}(Observable_1.Observable));\nexports.ErrorObservable = ErrorObservable;\n//# sourceMappingURL=ErrorObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/ErrorObservable.js\n ** module id = 717\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar Subscription_1 = require('../Subscription');\nfunction isNodeStyleEventEmmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && sourceObj.toString() === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && sourceObj.toString() === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventObservable = (function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n    }\n    /**\n     * @param sourceObj\n     * @param eventName\n     * @param selector\n     * @return {FromEventObservable}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (sourceObj, eventName, selector) {\n        return new FromEventObservable(sourceObj, eventName, selector);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            sourceObj.addEventListener(eventName, handler);\n            unsubscribe = function () { return sourceObj.removeEventListener(eventName, handler); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return sourceObj.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmmitter(sourceObj)) {\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return sourceObj.removeListener(eventName, handler); };\n        }\n        subscriber.add(new Subscription_1.Subscription(unsubscribe));\n    };\n    FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch_1.tryCatch(selector).apply(void 0, args);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(errorObject_1.errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber);\n    };\n    return FromEventObservable;\n}(Observable_1.Observable));\nexports.FromEventObservable = FromEventObservable;\n//# sourceMappingURL=FromEventObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/FromEventObservable.js\n ** module id = 719\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar FromEventPatternObservable = (function (_super) {\n    __extends(FromEventPatternObservable, _super);\n    function FromEventPatternObservable(addHandler, removeHandler, selector) {\n        _super.call(this);\n        this.addHandler = addHandler;\n        this.removeHandler = removeHandler;\n        this.selector = selector;\n    }\n    /**\n     * @param addHandler\n     * @param removeHandler\n     * @param selector\n     * @return {FromEventPatternObservable}\n     * @static true\n     * @name fromEventPattern\n     * @owner Observable\n     */\n    FromEventPatternObservable.create = function (addHandler, removeHandler, selector) {\n        return new FromEventPatternObservable(addHandler, removeHandler, selector);\n    };\n    FromEventPatternObservable.prototype._subscribe = function (subscriber) {\n        var addHandler = this.addHandler;\n        var removeHandler = this.removeHandler;\n        var selector = this.selector;\n        var handler = selector ? function (e) {\n            var result = tryCatch_1.tryCatch(selector).apply(null, arguments);\n            if (result === errorObject_1.errorObject) {\n                subscriber.error(result.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { subscriber.next(e); };\n        var result = tryCatch_1.tryCatch(addHandler)(handler);\n        if (result === errorObject_1.errorObject) {\n            subscriber.error(result.e);\n        }\n        subscriber.add(new Subscription_1.Subscription(function () {\n            //TODO: determine whether or not to forward to error handler\n            removeHandler(handler);\n        }));\n    };\n    return FromEventPatternObservable;\n}(Observable_1.Observable));\nexports.FromEventPatternObservable = FromEventPatternObservable;\n//# sourceMappingURL=FromEventPatternObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/FromEventPatternObservable.js\n ** module id = 720\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar IntervalObservable = (function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async_1.async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified Scheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` Scheduler to provide a notion of time, but you may pass any\n     * Scheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) { period = 0; }\n        if (scheduler === void 0) { scheduler = async_1.async; }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.isUnsubscribed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable_1.Observable));\nexports.IntervalObservable = IntervalObservable;\n//# sourceMappingURL=IntervalObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/IntervalObservable.js\n ** module id = 722\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar noop_1 = require('../util/noop');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar NeverObservable = (function (_super) {\n    __extends(NeverObservable, _super);\n    function NeverObservable() {\n        _super.call(this);\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer.\n     *\n     * <span class=\"informal\">An Observable that never emits anything.</span>\n     *\n     * <img src=\"./img/never.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that emits\n     * neither values nor errors nor the completion notification. It can be used\n     * for testing purposes or for composing with other Observables. Please not\n     * that by never emitting a complete notification, this Observable keeps the\n     * subscription from being disposed automatically. Subscriptions need to be\n     * manually disposed.\n     *\n     * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n     * function info() {\n     *   console.log('Will not be called');\n     * }\n     * var result = Rx.Observable.never().startWith(7);\n     * result.subscribe(x => console.log(x), info, info);\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @return {Observable} A \"never\" Observable: never emits anything.\n     * @static true\n     * @name never\n     * @owner Observable\n     */\n    NeverObservable.create = function () {\n        return new NeverObservable();\n    };\n    NeverObservable.prototype._subscribe = function (subscriber) {\n        noop_1.noop();\n    };\n    return NeverObservable;\n}(Observable_1.Observable));\nexports.NeverObservable = NeverObservable;\n//# sourceMappingURL=NeverObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/NeverObservable.js\n ** module id = 724\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar RangeObservable = (function (_super) {\n    __extends(RangeObservable, _super);\n    function RangeObservable(start, count, scheduler) {\n        _super.call(this);\n        this.start = start;\n        this._count = count;\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits a sequence of numbers within a specified\n     * range.\n     *\n     * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n     *\n     * <img src=\"./img/range.png\" width=\"100%\">\n     *\n     * `range` operator emits a range of sequential integers, in order, where you\n     * select the `start` of the range and its `length`. By default, uses no\n     * Scheduler and just delivers the notifications synchronously, but may use\n     * an optional Scheduler to regulate those deliveries.\n     *\n     * @example <caption>Emits the numbers 1 to 10</caption>\n     * var numbers = Rx.Observable.range(1, 10);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link interval}\n     *\n     * @param {number} [start=0] The value of the first integer in the sequence.\n     * @param {number} [count=0] The number of sequential integers to generate.\n     * @param {Scheduler} [scheduler] A {@link Scheduler} to use for scheduling\n     * the emissions of the notifications.\n     * @return {Observable} An Observable of numbers that emits a finite range of\n     * sequential integers.\n     * @static true\n     * @name range\n     * @owner Observable\n     */\n    RangeObservable.create = function (start, count, scheduler) {\n        if (start === void 0) { start = 0; }\n        if (count === void 0) { count = 0; }\n        return new RangeObservable(start, count, scheduler);\n    };\n    RangeObservable.dispatch = function (state) {\n        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(start);\n        if (subscriber.isUnsubscribed) {\n            return;\n        }\n        state.index = index + 1;\n        state.start = start + 1;\n        this.schedule(state);\n    };\n    RangeObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var start = this.start;\n        var count = this._count;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(RangeObservable.dispatch, 0, {\n                index: index, count: count, start: start, subscriber: subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.isUnsubscribed) {\n                    break;\n                }\n            } while (true);\n        }\n    };\n    return RangeObservable;\n}(Observable_1.Observable));\nexports.RangeObservable = RangeObservable;\n//# sourceMappingURL=RangeObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/RangeObservable.js\n ** module id = 725\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar asap_1 = require('../scheduler/asap');\nvar isNumeric_1 = require('../util/isNumeric');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar SubscribeOnObservable = (function (_super) {\n    __extends(SubscribeOnObservable, _super);\n    function SubscribeOnObservable(source, delayTime, scheduler) {\n        if (delayTime === void 0) { delayTime = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        _super.call(this);\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap_1.asap;\n        }\n    }\n    SubscribeOnObservable.create = function (source, delay, scheduler) {\n        if (delay === void 0) { delay = 0; }\n        if (scheduler === void 0) { scheduler = asap_1.asap; }\n        return new SubscribeOnObservable(source, delay, scheduler);\n    };\n    SubscribeOnObservable.dispatch = function (arg) {\n        var source = arg.source, subscriber = arg.subscriber;\n        return source.subscribe(subscriber);\n    };\n    SubscribeOnObservable.prototype._subscribe = function (subscriber) {\n        var delay = this.delayTime;\n        var source = this.source;\n        var scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source: source, subscriber: subscriber\n        });\n    };\n    return SubscribeOnObservable;\n}(Observable_1.Observable));\nexports.SubscribeOnObservable = SubscribeOnObservable;\n//# sourceMappingURL=SubscribeOnObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/SubscribeOnObservable.js\n ** module id = 726\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar isNumeric_1 = require('../util/isNumeric');\nvar Observable_1 = require('../Observable');\nvar async_1 = require('../scheduler/async');\nvar isScheduler_1 = require('../util/isScheduler');\nvar isDate_1 = require('../util/isDate');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar TimerObservable = (function (_super) {\n    __extends(TimerObservable, _super);\n    function TimerObservable(dueTime, period, scheduler) {\n        if (dueTime === void 0) { dueTime = 0; }\n        _super.call(this);\n        this.period = -1;\n        this.dueTime = 0;\n        if (isNumeric_1.isNumeric(period)) {\n            this.period = Number(period) < 1 && 1 || Number(period);\n        }\n        else if (isScheduler_1.isScheduler(period)) {\n            scheduler = period;\n        }\n        if (!isScheduler_1.isScheduler(scheduler)) {\n            scheduler = async_1.async;\n        }\n        this.scheduler = scheduler;\n        this.dueTime = isDate_1.isDate(dueTime) ?\n            (+dueTime - this.scheduler.now()) :\n            dueTime;\n    }\n    /**\n     * Creates an Observable that starts emitting after an `initialDelay` and\n     * emits ever increasing numbers after each `period` of time thereafter.\n     *\n     * <span class=\"informal\">Its like {@link interval}, but you can specify when\n     * should the emissions start.</span>\n     *\n     * <img src=\"./img/timer.png\" width=\"100%\">\n     *\n     * `timer` returns an Observable that emits an infinite sequence of ascending\n     * integers, with a constant interval of time, `period` of your choosing\n     * between those emissions. The first emission happens after the specified\n     * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n     * operator uses the `async` Scheduler to provide a notion of time, but you\n     * may pass any Scheduler to it. If `period` is not specified, the output\n     * Observable emits only one value, `0`. Otherwise, it emits an infinite\n     * sequence.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n     * var numbers = Rx.Observable.timer(3000, 1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @example <caption>Emits one number after five seconds</caption>\n     * var numbers = Rx.Observable.timer(5000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link interval}\n     * @see {@link delay}\n     *\n     * @param {number|Date} initialDelay The initial delay time to wait before\n     * emitting the first value of `0`.\n     * @param {number} [period] The period of time between emissions of the\n     * subsequent numbers.\n     * @param {Scheduler} [scheduler=async] The Scheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a `0` after the\n     * `initialDelay` and ever increasing numbers after each `period` of time\n     * thereafter.\n     * @static true\n     * @name timer\n     * @owner Observable\n     */\n    TimerObservable.create = function (initialDelay, period, scheduler) {\n        if (initialDelay === void 0) { initialDelay = 0; }\n        return new TimerObservable(initialDelay, period, scheduler);\n    };\n    TimerObservable.dispatch = function (state) {\n        var index = state.index, period = state.period, subscriber = state.subscriber;\n        var action = this;\n        subscriber.next(index);\n        if (subscriber.isUnsubscribed) {\n            return;\n        }\n        else if (period === -1) {\n            return subscriber.complete();\n        }\n        state.index = index + 1;\n        action.schedule(state, period);\n    };\n    TimerObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var _a = this, period = _a.period, dueTime = _a.dueTime, scheduler = _a.scheduler;\n        return scheduler.schedule(TimerObservable.dispatch, dueTime, {\n            index: index, period: period, subscriber: subscriber\n        });\n    };\n    return TimerObservable;\n}(Observable_1.Observable));\nexports.TimerObservable = TimerObservable;\n//# sourceMappingURL=TimerObservable.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/TimerObservable.js\n ** module id = 727\n ** module chunks = 2\n **/","\"use strict\";\nvar BoundCallbackObservable_1 = require('./BoundCallbackObservable');\nexports.bindCallback = BoundCallbackObservable_1.BoundCallbackObservable.create;\n//# sourceMappingURL=bindCallback.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/bindCallback.js\n ** module id = 728\n ** module chunks = 2\n **/","\"use strict\";\nvar BoundNodeCallbackObservable_1 = require('./BoundNodeCallbackObservable');\nexports.bindNodeCallback = BoundNodeCallbackObservable_1.BoundNodeCallbackObservable.create;\n//# sourceMappingURL=bindNodeCallback.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/bindNodeCallback.js\n ** module id = 729\n ** module chunks = 2\n **/","\"use strict\";\nvar concat_1 = require('../operator/concat');\nexports.concat = concat_1.concatStatic;\n//# sourceMappingURL=concat.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/concat.js\n ** module id = 730\n ** module chunks = 2\n **/","\"use strict\";\nvar DeferObservable_1 = require('./DeferObservable');\nexports.defer = DeferObservable_1.DeferObservable.create;\n//# sourceMappingURL=defer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/defer.js\n ** module id = 731\n ** module chunks = 2\n **/","\"use strict\";\nvar EmptyObservable_1 = require('./EmptyObservable');\nexports.empty = EmptyObservable_1.EmptyObservable.create;\n//# sourceMappingURL=empty.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/empty.js\n ** module id = 732\n ** module chunks = 2\n **/","\"use strict\";\nvar FromEventObservable_1 = require('./FromEventObservable');\nexports.fromEvent = FromEventObservable_1.FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/fromEvent.js\n ** module id = 734\n ** module chunks = 2\n **/","\"use strict\";\nvar FromEventPatternObservable_1 = require('./FromEventPatternObservable');\nexports.fromEventPattern = FromEventPatternObservable_1.FromEventPatternObservable.create;\n//# sourceMappingURL=fromEventPattern.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/fromEventPattern.js\n ** module id = 735\n ** module chunks = 2\n **/","\"use strict\";\nvar IntervalObservable_1 = require('./IntervalObservable');\nexports.interval = IntervalObservable_1.IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/interval.js\n ** module id = 736\n ** module chunks = 2\n **/","\"use strict\";\nvar merge_1 = require('../operator/merge');\nexports.merge = merge_1.mergeStatic;\n//# sourceMappingURL=merge.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/merge.js\n ** module id = 737\n ** module chunks = 2\n **/","\"use strict\";\nvar NeverObservable_1 = require('./NeverObservable');\nexports.never = NeverObservable_1.NeverObservable.create;\n//# sourceMappingURL=never.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/never.js\n ** module id = 738\n ** module chunks = 2\n **/","\"use strict\";\nvar RangeObservable_1 = require('./RangeObservable');\nexports.range = RangeObservable_1.RangeObservable.create;\n//# sourceMappingURL=range.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/range.js\n ** module id = 739\n ** module chunks = 2\n **/","\"use strict\";\nvar ErrorObservable_1 = require('./ErrorObservable');\nexports._throw = ErrorObservable_1.ErrorObservable.create;\n//# sourceMappingURL=throw.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/throw.js\n ** module id = 740\n ** module chunks = 2\n **/","\"use strict\";\nvar TimerObservable_1 = require('./TimerObservable');\nexports.timer = TimerObservable_1.TimerObservable.create;\n//# sourceMappingURL=timer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/timer.js\n ** module id = 741\n ** module chunks = 2\n **/","\"use strict\";\nvar zip_1 = require('../operator/zip');\nexports.zip = zip_1.zipStatic;\n//# sourceMappingURL=zip.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/observable/zip.js\n ** module id = 742\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * @param durationSelector\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method audit\n * @owner Observable\n */\nfunction audit(durationSelector) {\n    return this.lift(new AuditOperator(durationSelector));\n}\nexports.audit = audit;\nvar AuditOperator = (function () {\n    function AuditOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    AuditOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    };\n    return AuditOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditSubscriber = (function (_super) {\n    __extends(AuditSubscriber, _super);\n    function AuditSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    AuditSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            var duration = tryCatch_1.tryCatch(this.durationSelector)(value);\n            if (duration === errorObject_1.errorObject) {\n                this.destination.error(errorObject_1.errorObject.e);\n            }\n            else {\n                this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n            }\n        }\n    };\n    AuditSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    };\n    AuditSubscriber.prototype.notifyComplete = function () {\n        this.clearThrottle();\n    };\n    return AuditSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=audit.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/audit.js\n ** module id = 743\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar Subscriber_1 = require('../Subscriber');\n/**\n * @param delay\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method auditTime\n * @owner Observable\n */\nfunction auditTime(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new AuditTimeOperator(delay, scheduler));\n}\nexports.auditTime = auditTime;\nvar AuditTimeOperator = (function () {\n    function AuditTimeOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    AuditTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new AuditTimeSubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return AuditTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AuditTimeSubscriber = (function (_super) {\n    __extends(AuditTimeSubscriber, _super);\n    function AuditTimeSubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n    }\n    AuditTimeSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.delay, this));\n        }\n    };\n    AuditTimeSubscriber.prototype.clearThrottle = function () {\n        var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    };\n    return AuditTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(subscriber) {\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=auditTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/auditTime.js\n ** module id = 744\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nfunction buffer(closingNotifier) {\n    return this.lift(new BufferOperator(closingNotifier));\n}\nexports.buffer = buffer;\nvar BufferOperator = (function () {\n    function BufferOperator(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    BufferOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    };\n    return BufferOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferSubscriber = (function (_super) {\n    __extends(BufferSubscriber, _super);\n    function BufferSubscriber(destination, closingNotifier) {\n        _super.call(this, destination);\n        this.buffer = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n    }\n    BufferSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    };\n    return BufferSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=buffer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/buffer.js\n ** module id = 745\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) { startBufferEvery = null; }\n    return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n}\nexports.bufferCount = bufferCount;\nvar BufferCountOperator = (function () {\n    function BufferCountOperator(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n    }\n    BufferCountOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery));\n    };\n    return BufferCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferCountSubscriber = (function (_super) {\n    __extends(BufferCountSubscriber, _super);\n    function BufferCountSubscriber(destination, bufferSize, startBufferEvery) {\n        _super.call(this, destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [[]];\n        this.count = 0;\n    }\n    BufferCountSubscriber.prototype._next = function (value) {\n        var count = (this.count += 1);\n        var destination = this.destination;\n        var bufferSize = this.bufferSize;\n        var startBufferEvery = (this.startBufferEvery == null) ? bufferSize : this.startBufferEvery;\n        var buffers = this.buffers;\n        var len = buffers.length;\n        var remove = -1;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (var i = 0; i < len; i++) {\n            var buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                remove = i;\n                destination.next(buffer);\n            }\n        }\n        if (remove !== -1) {\n            buffers.splice(remove, 1);\n        }\n    };\n    BufferCountSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var buffers = this.buffers;\n        while (buffers.length > 0) {\n            var buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    return BufferCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=bufferCount.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/bufferCount.js\n ** module id = 746\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nfunction bufferTime(bufferTimeSpan, bufferCreationInterval, scheduler) {\n    if (bufferCreationInterval === void 0) { bufferCreationInterval = null; }\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, scheduler));\n}\nexports.bufferTime = bufferTime;\nvar BufferTimeOperator = (function () {\n    function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.scheduler = scheduler;\n    }\n    BufferTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.scheduler));\n    };\n    return BufferTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferTimeSubscriber = (function (_super) {\n    __extends(BufferTimeSubscriber, _super);\n    function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, scheduler) {\n        _super.call(this, destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.scheduler = scheduler;\n        this.buffers = [];\n        var buffer = this.openBuffer();\n        if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {\n            var closeState = { subscriber: this, buffer: buffer };\n            var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n        else {\n            var timeSpanOnlyState = { subscriber: this, buffer: buffer, bufferTimeSpan: bufferTimeSpan };\n            this.add(scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    }\n    BufferTimeSubscriber.prototype._next = function (value) {\n        var buffers = this.buffers;\n        var len = buffers.length;\n        for (var i = 0; i < len; i++) {\n            buffers[i].push(value);\n        }\n    };\n    BufferTimeSubscriber.prototype._error = function (err) {\n        this.buffers.length = 0;\n        _super.prototype._error.call(this, err);\n    };\n    BufferTimeSubscriber.prototype._complete = function () {\n        var _a = this, buffers = _a.buffers, destination = _a.destination;\n        while (buffers.length > 0) {\n            destination.next(buffers.shift());\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferTimeSubscriber.prototype._unsubscribe = function () {\n        this.buffers = null;\n    };\n    BufferTimeSubscriber.prototype.openBuffer = function () {\n        var buffer = [];\n        this.buffers.push(buffer);\n        return buffer;\n    };\n    BufferTimeSubscriber.prototype.closeBuffer = function (buffer) {\n        this.destination.next(buffer);\n        var buffers = this.buffers;\n        buffers.splice(buffers.indexOf(buffer), 1);\n    };\n    return BufferTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchBufferTimeSpanOnly(state) {\n    var subscriber = state.subscriber;\n    var prevBuffer = state.buffer;\n    if (prevBuffer) {\n        subscriber.closeBuffer(prevBuffer);\n    }\n    state.buffer = subscriber.openBuffer();\n    if (!subscriber.isUnsubscribed) {\n        this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;\n    var buffer = subscriber.openBuffer();\n    var action = this;\n    if (!subscriber.isUnsubscribed) {\n        action.add(scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, buffer: buffer }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    var subscriber = arg.subscriber, buffer = arg.buffer;\n    subscriber.closeBuffer(buffer);\n}\n//# sourceMappingURL=bufferTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/bufferTime.js\n ** module id = 747\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nfunction bufferToggle(openings, closingSelector) {\n    return this.lift(new BufferToggleOperator(openings, closingSelector));\n}\nexports.bufferToggle = bufferToggle;\nvar BufferToggleOperator = (function () {\n    function BufferToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    BufferToggleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return BufferToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferToggleSubscriber = (function (_super) {\n    __extends(BufferToggleSubscriber, _super);\n    function BufferToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult_1.subscribeToResult(this, openings));\n    }\n    BufferToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        var len = contexts.length;\n        for (var i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    };\n    BufferToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._error.call(this, err);\n    };\n    BufferToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        while (contexts.length > 0) {\n            var context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        _super.prototype._complete.call(this);\n    };\n    BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    };\n    BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.closeBuffer(innerSub.context);\n    };\n    BufferToggleSubscriber.prototype.openBuffer = function (value) {\n        try {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    };\n    BufferToggleSubscriber.prototype.closeBuffer = function (context) {\n        var contexts = this.contexts;\n        if (contexts && context) {\n            var buffer = context.buffer, subscription = context.subscription;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    };\n    BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {\n        var contexts = this.contexts;\n        var buffer = [];\n        var subscription = new Subscription_1.Subscription();\n        var context = { buffer: buffer, subscription: subscription };\n        contexts.push(context);\n        var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.isUnsubscribed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    };\n    return BufferToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferToggle.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/bufferToggle.js\n ** module id = 748\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nfunction bufferWhen(closingSelector) {\n    return this.lift(new BufferWhenOperator(closingSelector));\n}\nexports.bufferWhen = bufferWhen;\nvar BufferWhenOperator = (function () {\n    function BufferWhenOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    BufferWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    };\n    return BufferWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar BufferWhenSubscriber = (function (_super) {\n    __extends(BufferWhenSubscriber, _super);\n    function BufferWhenSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    BufferWhenSubscriber.prototype._next = function (value) {\n        this.buffer.push(value);\n    };\n    BufferWhenSubscriber.prototype._complete = function () {\n        var buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        _super.prototype._complete.call(this);\n    };\n    BufferWhenSubscriber.prototype._unsubscribe = function () {\n        this.buffer = null;\n        this.subscribing = false;\n    };\n    BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    };\n    BufferWhenSubscriber.prototype.notifyComplete = function () {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    };\n    BufferWhenSubscriber.prototype.openBuffer = function () {\n        var closingSubscription = this.closingSubscription;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        var buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            this.error(errorObject_1.errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription_1.Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    };\n    return BufferWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=bufferWhen.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/bufferWhen.js\n ** module id = 749\n ** module chunks = 2\n **/","\"use strict\";\nvar publishReplay_1 = require('./publishReplay');\n/**\n * @param bufferSize\n * @param windowTime\n * @param scheduler\n * @return {Observable<any>}\n * @method cache\n * @owner Observable\n */\nfunction cache(bufferSize, windowTime, scheduler) {\n    if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }\n    if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }\n    return publishReplay_1.publishReplay.call(this, bufferSize, windowTime, scheduler).refCount();\n}\nexports.cache = cache;\n//# sourceMappingURL=cache.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/cache.js\n ** module id = 750\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} an observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @method catch\n * @owner Observable\n */\nfunction _catch(selector) {\n    var operator = new CatchOperator(selector);\n    var caught = this.lift(operator);\n    return (operator.caught = caught);\n}\nexports._catch = _catch;\nvar CatchOperator = (function () {\n    function CatchOperator(selector) {\n        this.selector = selector;\n    }\n    CatchOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    };\n    return CatchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CatchSubscriber = (function (_super) {\n    __extends(CatchSubscriber, _super);\n    function CatchSubscriber(destination, selector, caught) {\n        _super.call(this, destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`.\n    CatchSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var result = void 0;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err) {\n                this.destination.error(err);\n                return;\n            }\n            this._innerSub(result);\n        }\n    };\n    CatchSubscriber.prototype._innerSub = function (result) {\n        this.unsubscribe();\n        this.destination.remove(this);\n        result.subscribe(this.destination);\n    };\n    return CatchSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=catch.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/catch.js\n ** module id = 751\n ** module chunks = 2\n **/","\"use strict\";\nvar combineLatest_1 = require('./combineLatest');\n/**\n * Converts a higher-order Observable into a first-order Observable by waiting\n * for the outer Observable to complete, then applying {@link combineLatest}.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by applying\n * {@link combineLatest} when the Observable-of-Observables completes.</span>\n *\n * <img src=\"./img/combineAll.png\" width=\"100%\">\n *\n * Takes an Observable of Observables, and collects all Observables from it.\n * Once the outer Observable completes, it subscribes to all collected\n * Observables and combines their values using the {@link combineLatest}\n * strategy, such that:\n * - Every time an inner Observable emits, the output Observable emits.\n * - When the returned observable emits, it emits all of the latest values by:\n *   - If a `project` function is provided, it is called with each recent value\n *     from each inner Observable in whatever order they arrived, and the result\n *     of the `project` function is what is emitted by the output Observable.\n *   - If there is no `project` function, an array of all of the most recent\n *     values is emitted by the output Observable.\n *\n * @example <caption>Map two click events to a finite interval Observable, then apply combineAll</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev =>\n *   Rx.Observable.interval(Math.random()*2000).take(3)\n * ).take(2);\n * var result = higherOrder.combineAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function} [project] An optional function to map the most recent\n * values from each inner Observable into a new result. Takes each of the most\n * recent values from each collected inner Observable as arguments, in order.\n * @return {Observable} An Observable of projected results or arrays of recent\n * values.\n * @method combineAll\n * @owner Observable\n */\nfunction combineAll(project) {\n    return this.lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineAll = combineAll;\n//# sourceMappingURL=combineAll.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/combineAll.js\n ** module id = 752\n ** module chunks = 2\n **/","\"use strict\";\nvar mergeAll_1 = require('./mergeAll');\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nfunction concatAll() {\n    return this.lift(new mergeAll_1.MergeAllOperator(1));\n}\nexports.concatAll = concatAll;\n//# sourceMappingURL=concatAll.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/concatAll.js\n ** module id = 753\n ** module chunks = 2\n **/","\"use strict\";\nvar mergeMap_1 = require('./mergeMap');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} an observable of values merged from the projected\n * Observables as they were subscribed to, one at a time. Optionally, these\n * values may have been projected from a passed `projectResult` argument.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nfunction concatMap(project, resultSelector) {\n    return this.lift(new mergeMap_1.MergeMapOperator(project, resultSelector, 1));\n}\nexports.concatMap = concatMap;\n//# sourceMappingURL=concatMap.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/concatMap.js\n ** module id = 754\n ** module chunks = 2\n **/","\"use strict\";\nvar mergeMapTo_1 = require('./mergeMapTo');\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nfunction concatMapTo(innerObservable, resultSelector) {\n    return this.lift(new mergeMapTo_1.MergeMapToOperator(innerObservable, resultSelector, 1));\n}\nexports.concatMapTo = concatMapTo;\n//# sourceMappingURL=concatMapTo.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/concatMapTo.js\n ** module id = 755\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting an value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nfunction count(predicate) {\n    return this.lift(new CountOperator(predicate, this));\n}\nexports.count = count;\nvar CountOperator = (function () {\n    function CountOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    CountOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    };\n    return CountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CountSubscriber = (function (_super) {\n    __extends(CountSubscriber, _super);\n    function CountSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    CountSubscriber.prototype._next = function (value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._tryPredicate = function (value) {\n        var result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    };\n    CountSubscriber.prototype._complete = function () {\n        this.destination.next(this.count);\n        this.destination.complete();\n    };\n    return CountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=count.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/count.js\n ** module id = 756\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns the source Observable delayed by the computed debounce duration,\n * with the duration lengthened if a new source item arrives before the delay\n * duration ends.\n * In practice, for each item emitted on the source, this operator holds the\n * latest item, waits for a silence as long as the `durationSelector` specifies,\n * and only then emits the latest source item on the result Observable.\n * @param {function} durationSelector function for computing the timeout duration for each item.\n * @return {Observable} an Observable the same as source Observable, but drops items.\n * @method debounce\n * @owner Observable\n */\nfunction debounce(durationSelector) {\n    return this.lift(new DebounceOperator(durationSelector));\n}\nexports.debounce = debounce;\nvar DebounceOperator = (function () {\n    function DebounceOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    DebounceOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    };\n    return DebounceOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DebounceSubscriber = (function (_super) {\n    __extends(DebounceSubscriber, _super);\n    function DebounceSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    DebounceSubscriber.prototype._next = function (value) {\n        try {\n            var result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DebounceSubscriber.prototype._complete = function () {\n        this.emitValue();\n        this.destination.complete();\n    };\n    DebounceSubscriber.prototype._tryNext = function (value, duration) {\n        var subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult_1.subscribeToResult(this, duration);\n        if (!subscription.isUnsubscribed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    };\n    DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    DebounceSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            var value = this.value;\n            var subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            this.value = null;\n            this.hasValue = false;\n            _super.prototype._next.call(this, value);\n        }\n    };\n    return DebounceSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=debounce.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/debounce.js\n ** module id = 757\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that emits the elements of the source or a specified default value if empty.\n * @param {any} defaultValue the default value used if source is empty; defaults to null.\n * @return {Observable} an Observable of the items emitted by the where empty values are replaced by the specified default value or null.\n * @method defaultIfEmpty\n * @owner Observable\n */\nfunction defaultIfEmpty(defaultValue) {\n    if (defaultValue === void 0) { defaultValue = null; }\n    return this.lift(new DefaultIfEmptyOperator(defaultValue));\n}\nexports.defaultIfEmpty = defaultIfEmpty;\nvar DefaultIfEmptyOperator = (function () {\n    function DefaultIfEmptyOperator(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    };\n    return DefaultIfEmptyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DefaultIfEmptySubscriber = (function (_super) {\n    __extends(DefaultIfEmptySubscriber, _super);\n    function DefaultIfEmptySubscriber(destination, defaultValue) {\n        _super.call(this, destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    DefaultIfEmptySubscriber.prototype._next = function (value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    };\n    DefaultIfEmptySubscriber.prototype._complete = function () {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    };\n    return DefaultIfEmptySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=defaultIfEmpty.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/defaultIfEmpty.js\n ** module id = 759\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The Scheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nfunction delay(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteDelay = isDate_1.isDate(delay);\n    var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return this.lift(new DelayOperator(delayFor, scheduler));\n}\nexports.delay = delay;\nvar DelayOperator = (function () {\n    function DelayOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    DelayOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return DelayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelaySubscriber = (function (_super) {\n    __extends(DelaySubscriber, _super);\n    function DelaySubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    DelaySubscriber.dispatch = function (state) {\n        var source = state.source;\n        var queue = source.queue;\n        var scheduler = state.scheduler;\n        var destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            var delay_1 = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay_1);\n        }\n        else {\n            source.active = false;\n        }\n    };\n    DelaySubscriber.prototype._schedule = function (scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    };\n    DelaySubscriber.prototype.scheduleNotification = function (notification) {\n        if (this.errored === true) {\n            return;\n        }\n        var scheduler = this.scheduler;\n        var message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    };\n    DelaySubscriber.prototype._next = function (value) {\n        this.scheduleNotification(Notification_1.Notification.createNext(value));\n    };\n    DelaySubscriber.prototype._error = function (err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    };\n    DelaySubscriber.prototype._complete = function () {\n        this.scheduleNotification(Notification_1.Notification.createComplete());\n    };\n    return DelaySubscriber;\n}(Subscriber_1.Subscriber));\nvar DelayMessage = (function () {\n    function DelayMessage(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n    return DelayMessage;\n}());\n//# sourceMappingURL=delay.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/delay.js\n ** module id = 760\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Observable_1 = require('../Observable');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that delays the emission of items from the source Observable\n * by a subscription delay and a delay selector function for each element.\n * @param {Function} selector function to retrieve a sequence indicating the delay for each given element.\n * @param {Observable} sequence indicating the delay for the subscription to the source.\n * @return {Observable} an Observable that delays the emissions of the source Observable by the specified timeout or Date.\n * @method delayWhen\n * @owner Observable\n */\nfunction delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return new SubscriptionDelayObservable(this, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return this.lift(new DelayWhenOperator(delayDurationSelector));\n}\nexports.delayWhen = delayWhen;\nvar DelayWhenOperator = (function () {\n    function DelayWhenOperator(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    DelayWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    };\n    return DelayWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DelayWhenSubscriber = (function (_super) {\n    __extends(DelayWhenSubscriber, _super);\n    function DelayWhenSubscriber(destination, delayDurationSelector) {\n        _super.call(this, destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.values = [];\n    }\n    DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {\n        var value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype._next = function (value) {\n        try {\n            var delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    DelayWhenSubscriber.prototype._complete = function () {\n        this.completed = true;\n        this.tryComplete();\n    };\n    DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {\n        subscription.unsubscribe();\n        var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        var value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    };\n    DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {\n        var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);\n        this.add(notifierSubscription);\n        this.delayNotifierSubscriptions.push(notifierSubscription);\n        this.values.push(value);\n    };\n    DelayWhenSubscriber.prototype.tryComplete = function () {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    };\n    return DelayWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelayObservable = (function (_super) {\n    __extends(SubscriptionDelayObservable, _super);\n    function SubscriptionDelayObservable(source, subscriptionDelay) {\n        _super.call(this);\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    };\n    return SubscriptionDelayObservable;\n}(Observable_1.Observable));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubscriptionDelaySubscriber = (function (_super) {\n    __extends(SubscriptionDelaySubscriber, _super);\n    function SubscriptionDelaySubscriber(parent, source) {\n        _super.call(this);\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    SubscriptionDelaySubscriber.prototype._next = function (unused) {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype._error = function (err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    };\n    SubscriptionDelaySubscriber.prototype._complete = function () {\n        this.subscribeToSource();\n    };\n    SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    };\n    return SubscriptionDelaySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=delayWhen.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/delayWhen.js\n ** module id = 761\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that transforms Notification objects into the items or notifications they represent.\n *\n * @see {@link Notification}\n *\n * @return {Observable} an Observable that emits items and notifications embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nfunction dematerialize() {\n    return this.lift(new DeMaterializeOperator());\n}\nexports.dematerialize = dematerialize;\nvar DeMaterializeOperator = (function () {\n    function DeMaterializeOperator() {\n    }\n    DeMaterializeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DeMaterializeSubscriber(subscriber));\n    };\n    return DeMaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DeMaterializeSubscriber = (function (_super) {\n    __extends(DeMaterializeSubscriber, _super);\n    function DeMaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    DeMaterializeSubscriber.prototype._next = function (value) {\n        value.observe(this.destination);\n    };\n    return DeMaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=dematerialize.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/dematerialize.js\n ** module id = 762\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n * If a comparator function is not provided, an equality check is used by default.\n * @param {function} [compare] optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} an Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nfunction distinctUntilChanged(compare, keySelector) {\n    return this.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nexports.distinctUntilChanged = distinctUntilChanged;\nvar DistinctUntilChangedOperator = (function () {\n    function DistinctUntilChangedOperator(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    };\n    return DistinctUntilChangedOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DistinctUntilChangedSubscriber = (function (_super) {\n    __extends(DistinctUntilChangedSubscriber, _super);\n    function DistinctUntilChangedSubscriber(destination, compare, keySelector) {\n        _super.call(this, destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {\n        return x === y;\n    };\n    DistinctUntilChangedSubscriber.prototype._next = function (value) {\n        var keySelector = this.keySelector;\n        var key = value;\n        if (keySelector) {\n            key = tryCatch_1.tryCatch(this.keySelector)(value);\n            if (key === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        var result = false;\n        if (this.hasKey) {\n            result = tryCatch_1.tryCatch(this.compare)(this.key, key);\n            if (result === errorObject_1.errorObject) {\n                return this.destination.error(errorObject_1.errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    };\n    return DistinctUntilChangedSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/distinctUntilChanged.js\n ** module id = 763\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @method do\n * @name do\n * @owner Observable\n */\nfunction _do(nextOrObserver, error, complete) {\n    return this.lift(new DoOperator(nextOrObserver, error, complete));\n}\nexports._do = _do;\nvar DoOperator = (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new DoSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar DoSubscriber = (function (_super) {\n    __extends(DoSubscriber, _super);\n    function DoSubscriber(destination, nextOrObserver, error, complete) {\n        _super.call(this, destination);\n        var safeSubscriber = new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n        safeSubscriber.syncErrorThrowable = true;\n        this.add(safeSubscriber);\n        this.safeSubscriber = safeSubscriber;\n    }\n    DoSubscriber.prototype._next = function (value) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.next(value);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.next(value);\n        }\n    };\n    DoSubscriber.prototype._error = function (err) {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.error(err);\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.error(err);\n        }\n    };\n    DoSubscriber.prototype._complete = function () {\n        var safeSubscriber = this.safeSubscriber;\n        safeSubscriber.complete();\n        if (safeSubscriber.syncErrorThrown) {\n            this.destination.error(safeSubscriber.syncErrorValue);\n        }\n        else {\n            this.destination.complete();\n        }\n    };\n    return DoSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=do.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/do.js\n ** module id = 764\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable where for each item in the source Observable, the supplied function is applied to each item,\n * resulting in a new value to then be applied again with the function.\n * @param {function} project the function for projecting the next emitted item of the Observable.\n * @param {number} [concurrent] the max number of observables that can be created concurrently. defaults to infinity.\n * @param {Scheduler} [scheduler] The Scheduler to use for managing the expansions.\n * @return {Observable} an Observable containing the expansions of the source Observable.\n * @method expand\n * @owner Observable\n */\nfunction expand(project, concurrent, scheduler) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    if (scheduler === void 0) { scheduler = undefined; }\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return this.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexports.expand = expand;\nvar ExpandOperator = (function () {\n    function ExpandOperator(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    ExpandOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    };\n    return ExpandOperator;\n}());\nexports.ExpandOperator = ExpandOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ExpandSubscriber = (function (_super) {\n    __extends(ExpandSubscriber, _super);\n    function ExpandSubscriber(destination, project, concurrent, scheduler) {\n        _super.call(this, destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    ExpandSubscriber.dispatch = function (arg) {\n        var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;\n        subscriber.subscribeToProjection(result, value, index);\n    };\n    ExpandSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (destination.isUnsubscribed) {\n            this._complete();\n            return;\n        }\n        var index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            var result = tryCatch_1.tryCatch(this.project)(value, index);\n            if (result === errorObject_1.errorObject) {\n                destination.error(errorObject_1.errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                var state = { subscriber: this, result: result, value: value, index: index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {\n        this.active++;\n        this.add(subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    ExpandSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    };\n    ExpandSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return ExpandSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.ExpandSubscriber = ExpandSubscriber;\n//# sourceMappingURL=expand.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/expand.js\n ** module id = 766\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} finallySelector function to be called when source terminates.\n * @return {Observable} an Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nfunction _finally(finallySelector) {\n    return this.lift(new FinallyOperator(finallySelector));\n}\nexports._finally = _finally;\nvar FinallyOperator = (function () {\n    function FinallyOperator(finallySelector) {\n        this.finallySelector = finallySelector;\n    }\n    FinallyOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new FinallySubscriber(subscriber, this.finallySelector));\n    };\n    return FinallyOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FinallySubscriber = (function (_super) {\n    __extends(FinallySubscriber, _super);\n    function FinallySubscriber(destination, finallySelector) {\n        _super.call(this, destination);\n        this.add(new Subscription_1.Subscription(finallySelector));\n    }\n    return FinallySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=finally.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/finally.js\n ** module id = 767\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {function(value: T, index: number): R} [resultSelector] A function to\n * produce the value on the output Observable based on the values\n * and the indices of the source Observable. The arguments passed to this\n * function are:\n * - `value`: the value that was emitted on the source.\n * - `index`: the \"index\" of the value from the source.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} an Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nfunction first(predicate, resultSelector, defaultValue) {\n    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.first = first;\nvar FirstOperator = (function () {\n    function FirstOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    FirstOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return FirstOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar FirstSubscriber = (function (_super) {\n    __extends(FirstSubscriber, _super);\n    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.index = 0;\n        this.hasCompleted = false;\n    }\n    FirstSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this._emit(value, index);\n        }\n    };\n    FirstSubscriber.prototype._emit = function (value, index) {\n        if (this.resultSelector) {\n            this._tryResultSelector(value, index);\n            return;\n        }\n        this._emitFinal(value);\n    };\n    FirstSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this._emitFinal(result);\n    };\n    FirstSubscriber.prototype._emitFinal = function (value) {\n        var destination = this.destination;\n        destination.next(value);\n        destination.complete();\n        this.hasCompleted = true;\n    };\n    FirstSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {\n            destination.next(this.defaultValue);\n            destination.complete();\n        }\n        else if (!this.hasCompleted) {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return FirstSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=first.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/first.js\n ** module id = 768\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subscription_1 = require('../Subscription');\nvar Observable_1 = require('../Observable');\nvar Subject_1 = require('../Subject');\nvar Map_1 = require('../util/Map');\nvar FastMap_1 = require('../util/FastMap');\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @param {function(value: T): K} keySelector a function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] a function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * a function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} an Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nfunction groupBy(keySelector, elementSelector, durationSelector) {\n    return this.lift(new GroupByOperator(this, keySelector, elementSelector, durationSelector));\n}\nexports.groupBy = groupBy;\nvar GroupByOperator = (function () {\n    function GroupByOperator(source, keySelector, elementSelector, durationSelector) {\n        this.source = source;\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n    }\n    GroupByOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector));\n    };\n    return GroupByOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupBySubscriber = (function (_super) {\n    __extends(GroupBySubscriber, _super);\n    function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector) {\n        _super.call(this);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n        this.destination = destination;\n        this.add(destination);\n    }\n    GroupBySubscriber.prototype._next = function (value) {\n        var key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    };\n    GroupBySubscriber.prototype._group = function (value, key) {\n        var groups = this.groups;\n        if (!groups) {\n            groups = this.groups = typeof key === 'string' ? new FastMap_1.FastMap() : new Map_1.Map();\n        }\n        var group = groups.get(key);\n        if (!group) {\n            groups.set(key, group = new Subject_1.Subject());\n            var groupedObservable = new GroupedObservable(key, group, this);\n            if (this.durationSelector) {\n                this._selectDuration(key, group);\n            }\n            this.destination.next(groupedObservable);\n        }\n        if (this.elementSelector) {\n            this._selectElement(value, group);\n        }\n        else {\n            this.tryGroupNext(value, group);\n        }\n    };\n    GroupBySubscriber.prototype._selectElement = function (value, group) {\n        var result;\n        try {\n            result = this.elementSelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this.tryGroupNext(result, group);\n    };\n    GroupBySubscriber.prototype._selectDuration = function (key, group) {\n        var duration;\n        try {\n            duration = this.durationSelector(new GroupedObservable(key, group));\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n    };\n    GroupBySubscriber.prototype.tryGroupNext = function (value, group) {\n        if (!group.isUnsubscribed) {\n            group.next(value);\n        }\n    };\n    GroupBySubscriber.prototype._error = function (err) {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    };\n    GroupBySubscriber.prototype._complete = function () {\n        var groups = this.groups;\n        if (groups) {\n            groups.forEach(function (group, key) {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    };\n    GroupBySubscriber.prototype.removeGroup = function (key) {\n        this.groups.delete(key);\n    };\n    GroupBySubscriber.prototype.unsubscribe = function () {\n        if (!this.isUnsubscribed && !this.attemptedToUnsubscribe) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                _super.prototype.unsubscribe.call(this);\n            }\n        }\n    };\n    return GroupBySubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar GroupDurationSubscriber = (function (_super) {\n    __extends(GroupDurationSubscriber, _super);\n    function GroupDurationSubscriber(key, group, parent) {\n        _super.call(this);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    GroupDurationSubscriber.prototype._next = function (value) {\n        this.tryComplete();\n    };\n    GroupDurationSubscriber.prototype._error = function (err) {\n        this.tryError(err);\n    };\n    GroupDurationSubscriber.prototype._complete = function () {\n        this.tryComplete();\n    };\n    GroupDurationSubscriber.prototype.tryError = function (err) {\n        var group = this.group;\n        if (!group.isUnsubscribed) {\n            group.error(err);\n        }\n        this.parent.removeGroup(this.key);\n    };\n    GroupDurationSubscriber.prototype.tryComplete = function () {\n        var group = this.group;\n        if (!group.isUnsubscribed) {\n            group.complete();\n        }\n        this.parent.removeGroup(this.key);\n    };\n    return GroupDurationSubscriber;\n}(Subscriber_1.Subscriber));\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nvar GroupedObservable = (function (_super) {\n    __extends(GroupedObservable, _super);\n    function GroupedObservable(key, groupSubject, refCountSubscription) {\n        _super.call(this);\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    GroupedObservable.prototype._subscribe = function (subscriber) {\n        var subscription = new Subscription_1.Subscription();\n        var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;\n        if (refCountSubscription && !refCountSubscription.isUnsubscribed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    };\n    return GroupedObservable;\n}(Observable_1.Observable));\nexports.GroupedObservable = GroupedObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerRefCountSubscription = (function (_super) {\n    __extends(InnerRefCountSubscription, _super);\n    function InnerRefCountSubscription(parent) {\n        _super.call(this);\n        this.parent = parent;\n        parent.count++;\n    }\n    InnerRefCountSubscription.prototype.unsubscribe = function () {\n        var parent = this.parent;\n        if (!parent.isUnsubscribed && !this.isUnsubscribed) {\n            _super.prototype.unsubscribe.call(this);\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    };\n    return InnerRefCountSubscription;\n}(Subscription_1.Subscription));\n//# sourceMappingURL=groupBy.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/groupBy.js\n ** module id = 769\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar noop_1 = require('../util/noop');\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} an empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nfunction ignoreElements() {\n    return this.lift(new IgnoreElementsOperator());\n}\nexports.ignoreElements = ignoreElements;\n;\nvar IgnoreElementsOperator = (function () {\n    function IgnoreElementsOperator() {\n    }\n    IgnoreElementsOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new IgnoreElementsSubscriber(subscriber));\n    };\n    return IgnoreElementsOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar IgnoreElementsSubscriber = (function (_super) {\n    __extends(IgnoreElementsSubscriber, _super);\n    function IgnoreElementsSubscriber() {\n        _super.apply(this, arguments);\n    }\n    IgnoreElementsSubscriber.prototype._next = function (unused) {\n        noop_1.noop();\n    };\n    return IgnoreElementsSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=ignoreElements.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/ignoreElements.js\n ** module id = 770\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} predicate - the condition any source emitted item has to satisfy.\n * @return {Observable} an Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n * @method last\n * @owner Observable\n */\nfunction last(predicate, resultSelector, defaultValue) {\n    return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));\n}\nexports.last = last;\nvar LastOperator = (function () {\n    function LastOperator(predicate, resultSelector, defaultValue, source) {\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n    }\n    LastOperator.prototype.call = function (observer, source) {\n        return source._subscribe(new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source));\n    };\n    return LastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar LastSubscriber = (function (_super) {\n    __extends(LastSubscriber, _super);\n    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.resultSelector = resultSelector;\n        this.defaultValue = defaultValue;\n        this.source = source;\n        this.hasValue = false;\n        this.index = 0;\n        if (typeof defaultValue !== 'undefined') {\n            this.lastValue = defaultValue;\n            this.hasValue = true;\n        }\n    }\n    LastSubscriber.prototype._next = function (value) {\n        var index = this.index++;\n        if (this.predicate) {\n            this._tryPredicate(value, index);\n        }\n        else {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryPredicate = function (value, index) {\n        var result;\n        try {\n            result = this.predicate(value, index, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            if (this.resultSelector) {\n                this._tryResultSelector(value, index);\n                return;\n            }\n            this.lastValue = value;\n            this.hasValue = true;\n        }\n    };\n    LastSubscriber.prototype._tryResultSelector = function (value, index) {\n        var result;\n        try {\n            result = this.resultSelector(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.lastValue = result;\n        this.hasValue = true;\n    };\n    LastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.hasValue) {\n            destination.next(this.lastValue);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return LastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=last.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/last.js\n ** module id = 771\n ** module chunks = 2\n **/","\"use strict\";\n/**\n * @param func\n * @return {Observable<R>}\n * @method let\n * @owner Observable\n */\nfunction letProto(func) {\n    return func(this);\n}\nexports.letProto = letProto;\n//# sourceMappingURL=let.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/let.js\n ** module id = 772\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nfunction mapTo(value) {\n    return this.lift(new MapToOperator(value));\n}\nexports.mapTo = mapTo;\nvar MapToOperator = (function () {\n    function MapToOperator(value) {\n        this.value = value;\n    }\n    MapToOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MapToSubscriber(subscriber, this.value));\n    };\n    return MapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MapToSubscriber = (function (_super) {\n    __extends(MapToSubscriber, _super);\n    function MapToSubscriber(destination, value) {\n        _super.call(this, destination);\n        this.value = value;\n    }\n    MapToSubscriber.prototype._next = function (x) {\n        this.destination.next(this.value);\n    };\n    return MapToSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=mapTo.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/mapTo.js\n ** module id = 773\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Notification_1 = require('../Notification');\n/**\n * Returns an Observable that represents all of the emissions and notifications\n * from the source Observable into emissions marked with their original types\n * within a `Notification` objects.\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * @see {@link Notification}\n *\n * @scheduler materialize does not operate by default on a particular Scheduler.\n * @return {Observable<Notification<T>>} an Observable that emits items that are the result of\n * materializing the items and notifications of the source Observable.\n * @method materialize\n * @owner Observable\n */\nfunction materialize() {\n    return this.lift(new MaterializeOperator());\n}\nexports.materialize = materialize;\nvar MaterializeOperator = (function () {\n    function MaterializeOperator() {\n    }\n    MaterializeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new MaterializeSubscriber(subscriber));\n    };\n    return MaterializeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MaterializeSubscriber = (function (_super) {\n    __extends(MaterializeSubscriber, _super);\n    function MaterializeSubscriber(destination) {\n        _super.call(this, destination);\n    }\n    MaterializeSubscriber.prototype._next = function (value) {\n        this.destination.next(Notification_1.Notification.createNext(value));\n    };\n    MaterializeSubscriber.prototype._error = function (err) {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createError(err));\n        destination.complete();\n    };\n    MaterializeSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        destination.next(Notification_1.Notification.createComplete());\n        destination.complete();\n    };\n    return MaterializeSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=materialize.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/materialize.js\n ** module id = 774\n ** module chunks = 2\n **/","\"use strict\";\nvar not_1 = require('../util/not');\nvar filter_1 = require('./filter');\n/**\n * @param predicate\n * @param thisArg\n * @return {Observable<T>[]}\n * @method partition\n * @owner Observable\n */\nfunction partition(predicate, thisArg) {\n    return [\n        filter_1.filter.call(this, predicate),\n        filter_1.filter.call(this, not_1.not(predicate, thisArg))\n    ];\n}\nexports.partition = partition;\n//# sourceMappingURL=partition.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/partition.js\n ** module id = 775\n ** module chunks = 2\n **/","\"use strict\";\nvar map_1 = require('./map');\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} Returns a new Observable of property values from the\n * source values.\n * @method pluck\n * @owner Observable\n */\nfunction pluck() {\n    var properties = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        properties[_i - 0] = arguments[_i];\n    }\n    var length = properties.length;\n    if (length === 0) {\n        throw new Error('List of properties cannot be empty.');\n    }\n    return map_1.map.call(this, plucker(properties, length));\n}\nexports.pluck = pluck;\nfunction plucker(props, length) {\n    var mapper = function (x) {\n        var currentProp = x;\n        for (var i = 0; i < length; i++) {\n            var p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/pluck.js\n ** module id = 776\n ** module chunks = 2\n **/","\"use strict\";\nvar BehaviorSubject_1 = require('../BehaviorSubject');\nvar multicast_1 = require('./multicast');\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nfunction publishBehavior(value) {\n    return multicast_1.multicast.call(this, new BehaviorSubject_1.BehaviorSubject(value));\n}\nexports.publishBehavior = publishBehavior;\n//# sourceMappingURL=publishBehavior.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/publishBehavior.js\n ** module id = 778\n ** module chunks = 2\n **/","\"use strict\";\nvar AsyncSubject_1 = require('../AsyncSubject');\nvar multicast_1 = require('./multicast');\n/**\n * @return {ConnectableObservable<T>}\n * @method publishLast\n * @owner Observable\n */\nfunction publishLast() {\n    return multicast_1.multicast.call(this, new AsyncSubject_1.AsyncSubject());\n}\nexports.publishLast = publishLast;\n//# sourceMappingURL=publishLast.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/publishLast.js\n ** module id = 779\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times,\n * on a particular Scheduler.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {Scheduler} [scheduler] the Scheduler to emit the items on.\n * @param {number} [count] the number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} an Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nfunction repeat(count) {\n    if (count === void 0) { count = -1; }\n    if (count === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else if (count < 0) {\n        return this.lift(new RepeatOperator(-1, this));\n    }\n    else {\n        return this.lift(new RepeatOperator(count - 1, this));\n    }\n}\nexports.repeat = repeat;\nvar RepeatOperator = (function () {\n    function RepeatOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RepeatOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    };\n    return RepeatOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RepeatSubscriber = (function (_super) {\n    __extends(RepeatSubscriber, _super);\n    function RepeatSubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RepeatSubscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.complete.call(this);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            this.unsubscribe();\n            this.isStopped = false;\n            this.isUnsubscribed = false;\n            source.subscribe(this);\n        }\n    };\n    return RepeatSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=repeat.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/repeat.js\n ** module id = 781\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that mirrors the source Observable, resubscribing to it if it calls `error` and the\n * predicate returns true for that specific exception and retry count.\n * If the source Observable calls `error`, this method will resubscribe to the source Observable for a maximum of\n * count resubscriptions (given as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} number of retry attempts before failing.\n * @return {Observable} the source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nfunction retry(count) {\n    if (count === void 0) { count = -1; }\n    return this.lift(new RetryOperator(count, this));\n}\nexports.retry = retry;\nvar RetryOperator = (function () {\n    function RetryOperator(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    RetryOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    };\n    return RetryOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetrySubscriber = (function (_super) {\n    __extends(RetrySubscriber, _super);\n    function RetrySubscriber(destination, count, source) {\n        _super.call(this, destination);\n        this.count = count;\n        this.source = source;\n    }\n    RetrySubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _a = this, source = _a.source, count = _a.count;\n            if (count === 0) {\n                return _super.prototype.error.call(this, err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            this.unsubscribe();\n            this.isStopped = false;\n            this.isUnsubscribed = false;\n            source.subscribe(this);\n        }\n    };\n    return RetrySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=retry.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/retry.js\n ** module id = 782\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that emits the same values as the source observable with the exception of an `error`.\n * An `error` will cause the emission of the Throwable that cause the error to the Observable returned from\n * notificationHandler. If that Observable calls onComplete or `error` then retry will call `complete` or `error`\n * on the child subscription. Otherwise, this Observable will resubscribe to the source observable, on a particular\n * Scheduler.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {notificationHandler} receives an Observable of notifications with which a user can `complete` or `error`,\n * aborting the retry.\n * @param {scheduler} the Scheduler on which to subscribe to the source Observable.\n * @return {Observable} the source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nfunction retryWhen(notifier) {\n    return this.lift(new RetryWhenOperator(notifier, this));\n}\nexports.retryWhen = retryWhen;\nvar RetryWhenOperator = (function () {\n    function RetryWhenOperator(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    };\n    return RetryWhenOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar RetryWhenSubscriber = (function (_super) {\n    __extends(RetryWhenSubscriber, _super);\n    function RetryWhenSubscriber(destination, notifier, source) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    RetryWhenSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var errors = this.errors;\n            var retries = this.retries;\n            var retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject_1.Subject();\n                retries = tryCatch_1.tryCatch(this.notifier)(errors);\n                if (retries === errorObject_1.errorObject) {\n                    return _super.prototype.error.call(this, errorObject_1.errorObject.e);\n                }\n                retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this.unsubscribe();\n            this.isUnsubscribed = false;\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    };\n    RetryWhenSubscriber.prototype._unsubscribe = function () {\n        var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    };\n    RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, errors = _a.errors, retries = _a.retries, retriesSubscription = _a.retriesSubscription;\n        this.errors = null;\n        this.retries = null;\n        this.retriesSubscription = null;\n        this.unsubscribe();\n        this.isStopped = false;\n        this.isUnsubscribed = false;\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        this.source.subscribe(this);\n    };\n    return RetryWhenSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=retryWhen.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/retryWhen.js\n ** module id = 783\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that, when the specified sampler Observable emits an item or completes, it then emits the most\n * recently emitted item (if any) emitted by the source Observable since the previous emission from the sampler\n * Observable.\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * @param {Observable} sampler - the Observable to use for sampling the source Observable.\n * @return {Observable<T>} an Observable that emits the results of sampling the items emitted by this Observable\n * whenever the sampler Observable emits an item or completes.\n * @method sample\n * @owner Observable\n */\nfunction sample(notifier) {\n    return this.lift(new SampleOperator(notifier));\n}\nexports.sample = sample;\nvar SampleOperator = (function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SampleSubscriber(subscriber, this.notifier));\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = (function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/sample.js\n ** module id = 784\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * @param delay\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method sampleTime\n * @owner Observable\n */\nfunction sampleTime(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new SampleTimeOperator(delay, scheduler));\n}\nexports.sampleTime = sampleTime;\nvar SampleTimeOperator = (function () {\n    function SampleTimeOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    SampleTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SampleTimeSubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return SampleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleTimeSubscriber = (function (_super) {\n    __extends(SampleTimeSubscriber, _super);\n    function SampleTimeSubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, delay, { subscriber: this, delay: delay }));\n    }\n    SampleTimeSubscriber.prototype._next = function (value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    };\n    SampleTimeSubscriber.prototype.notifyNext = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    };\n    return SampleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNotification(state) {\n    var subscriber = state.subscriber, delay = state.delay;\n    subscriber.notifyNext();\n    this.schedule(state, delay);\n}\n//# sourceMappingURL=sampleTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/sampleTime.js\n ** module id = 785\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Applies an accumulation function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T): R} accumulator The accumulator function\n * called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nfunction scan(accumulator, seed) {\n    return this.lift(new ScanOperator(accumulator, seed));\n}\nexports.scan = scan;\nvar ScanOperator = (function () {\n    function ScanOperator(accumulator, seed) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n    }\n    ScanOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed));\n    };\n    return ScanOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ScanSubscriber = (function (_super) {\n    __extends(ScanSubscriber, _super);\n    function ScanSubscriber(destination, accumulator, seed) {\n        _super.call(this, destination);\n        this.accumulator = accumulator;\n        this.accumulatorSet = false;\n        this.seed = seed;\n        this.accumulator = accumulator;\n        this.accumulatorSet = typeof seed !== 'undefined';\n    }\n    Object.defineProperty(ScanSubscriber.prototype, \"seed\", {\n        get: function () {\n            return this._seed;\n        },\n        set: function (value) {\n            this.accumulatorSet = true;\n            this._seed = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ScanSubscriber.prototype._next = function (value) {\n        if (!this.accumulatorSet) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    };\n    ScanSubscriber.prototype._tryNext = function (value) {\n        var result;\n        try {\n            result = this.accumulator(this.seed, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    };\n    return ScanSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=scan.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/scan.js\n ** module id = 786\n ** module chunks = 2\n **/","\"use strict\";\nvar multicast_1 = require('./multicast');\nvar Subject_1 = require('../Subject');\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .publish().refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} an Observable that upon connection causes the source Observable to emit items to its Observers\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return multicast_1.multicast.call(this, shareSubjectFactory).refCount();\n}\nexports.share = share;\n;\n//# sourceMappingURL=share.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/share.js\n ** module id = 787\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar EmptyError_1 = require('../util/EmptyError');\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * such items, notify of an IllegalArgumentException or NoSuchElementException respectively.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} a predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} an Observable that emits the single item emitted by the source Observable that matches\n * the predicate.\n .\n * @method single\n * @owner Observable\n */\nfunction single(predicate) {\n    return this.lift(new SingleOperator(predicate, this));\n}\nexports.single = single;\nvar SingleOperator = (function () {\n    function SingleOperator(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    SingleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    };\n    return SingleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SingleSubscriber = (function (_super) {\n    __extends(SingleSubscriber, _super);\n    function SingleSubscriber(destination, predicate, source) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    SingleSubscriber.prototype.applySingleValue = function (value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    };\n    SingleSubscriber.prototype._next = function (value) {\n        var predicate = this.predicate;\n        this.index++;\n        if (predicate) {\n            this.tryNext(value);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    };\n    SingleSubscriber.prototype.tryNext = function (value) {\n        try {\n            var result = this.predicate(value, this.index, this.source);\n            if (result) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    SingleSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError_1.EmptyError);\n        }\n    };\n    return SingleSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=single.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/single.js\n ** module id = 788\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips `n` items emitted by an Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} the `n` of times, items emitted by source Observable should be skipped.\n * @return {Observable} an Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(total) {\n    return this.lift(new SkipOperator(total));\n}\nexports.skip = skip;\nvar SkipOperator = (function () {\n    function SkipOperator(total) {\n        this.total = total;\n    }\n    SkipOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SkipSubscriber(subscriber, this.total));\n    };\n    return SkipOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipSubscriber = (function (_super) {\n    __extends(SkipSubscriber, _super);\n    function SkipSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.count = 0;\n    }\n    SkipSubscriber.prototype._next = function (x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    };\n    return SkipSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skip.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/skip.js\n ** module id = 789\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} the second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} an Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nfunction skipUntil(notifier) {\n    return this.lift(new SkipUntilOperator(notifier));\n}\nexports.skipUntil = skipUntil;\nvar SkipUntilOperator = (function () {\n    function SkipUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SkipUntilOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SkipUntilSubscriber(subscriber, this.notifier));\n    };\n    return SkipUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipUntilSubscriber = (function (_super) {\n    __extends(SkipUntilSubscriber, _super);\n    function SkipUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.isInnerStopped = false;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    SkipUntilSubscriber.prototype._next = function (value) {\n        if (this.hasValue) {\n            _super.prototype._next.call(this, value);\n        }\n    };\n    SkipUntilSubscriber.prototype._complete = function () {\n        if (this.isInnerStopped) {\n            _super.prototype._complete.call(this);\n        }\n        else {\n            this.unsubscribe();\n        }\n    };\n    SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n    };\n    SkipUntilSubscriber.prototype.notifyComplete = function () {\n        this.isInnerStopped = true;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    return SkipUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=skipUntil.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/skipUntil.js\n ** module id = 790\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - a function to test each item emitted from the source Observable.\n * @return {Observable<T>} an Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nfunction skipWhile(predicate) {\n    return this.lift(new SkipWhileOperator(predicate));\n}\nexports.skipWhile = skipWhile;\nvar SkipWhileOperator = (function () {\n    function SkipWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    SkipWhileOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    };\n    return SkipWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SkipWhileSubscriber = (function (_super) {\n    __extends(SkipWhileSubscriber, _super);\n    function SkipWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    SkipWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    };\n    SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {\n        try {\n            var result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    };\n    return SkipWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=skipWhile.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/skipWhile.js\n ** module id = 791\n ** module chunks = 2\n **/","\"use strict\";\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar ScalarObservable_1 = require('../observable/ScalarObservable');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\nvar concat_1 = require('./concat');\nvar isScheduler_1 = require('../util/isScheduler');\n/**\n * Returns an Observable that emits the items in a specified Iterable before it begins to emit items emitted by the\n * source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {Values} an Iterable that contains the items you want the modified Observable to emit first.\n * @return {Observable} an Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nfunction startWith() {\n    var array = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        array[_i - 0] = arguments[_i];\n    }\n    var scheduler = array[array.length - 1];\n    if (isScheduler_1.isScheduler(scheduler)) {\n        array.pop();\n    }\n    else {\n        scheduler = null;\n    }\n    var len = array.length;\n    if (len === 1) {\n        return concat_1.concatStatic(new ScalarObservable_1.ScalarObservable(array[0], scheduler), this);\n    }\n    else if (len > 1) {\n        return concat_1.concatStatic(new ArrayObservable_1.ArrayObservable(array, scheduler), this);\n    }\n    else {\n        return concat_1.concatStatic(new EmptyObservable_1.EmptyObservable(scheduler), this);\n    }\n}\nexports.startWith = startWith;\n//# sourceMappingURL=startWith.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/startWith.js\n ** module id = 792\n ** module chunks = 2\n **/","\"use strict\";\nvar SubscribeOnObservable_1 = require('../observable/SubscribeOnObservable');\n/**\n * Asynchronously subscribes Observers to this Observable on the specified Scheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} the Scheduler to perform subscription actions on.\n * @return {Observable<T>} the source Observable modified so that its subscriptions happen on the specified Scheduler\n .\n * @method subscribeOn\n * @owner Observable\n */\nfunction subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return new SubscribeOnObservable_1.SubscribeOnObservable(this, delay, scheduler);\n}\nexports.subscribeOn = subscribeOn;\n//# sourceMappingURL=subscribeOn.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/subscribeOn.js\n ** module id = 793\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * subscribing to only the most recently emitted of those inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * previous inner Observable once a new one appears.</span>\n *\n * <img src=\"./img/switch.png\" width=\"100%\">\n *\n * `switch` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable subscribes to the inner Observable and\n * begins emitting the items emitted by that. So far, it behaves\n * like {@link mergeAll}. However, when a new inner Observable is emitted,\n * `switch` unsubscribes from the earlier-emitted inner Observable and\n * subscribes to the new inner Observable and begins emitting items from it. It\n * continues to behave like this for subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * // Each click event is mapped to an Observable that ticks every second\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var switched = higherOrder.switch();\n * // The outcome is that `switched` is essentially a timer that restarts\n * // on every click. The interval Observables from older clicks do not merge\n * // with the current interval Observable.\n * switched.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link zipAll}\n *\n * @return {Observable<T>} An Observable that emits the items emitted by the\n * Observable most recently emitted by the source Observable.\n * @method switch\n * @name switch\n * @owner Observable\n */\nfunction _switch() {\n    return this.lift(new SwitchOperator());\n}\nexports._switch = _switch;\nvar SwitchOperator = (function () {\n    function SwitchOperator() {\n    }\n    SwitchOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchSubscriber(subscriber));\n    };\n    return SwitchOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchSubscriber = (function (_super) {\n    __extends(SwitchSubscriber, _super);\n    function SwitchSubscriber(destination) {\n        _super.call(this, destination);\n        this.active = 0;\n        this.hasCompleted = false;\n    }\n    SwitchSubscriber.prototype._next = function (value) {\n        this.unsubscribeInner();\n        this.active++;\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, value));\n    };\n    SwitchSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    SwitchSubscriber.prototype.unsubscribeInner = function () {\n        this.active = this.active > 0 ? this.active - 1 : 0;\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n            this.remove(innerSubscription);\n        }\n    };\n    SwitchSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    SwitchSubscriber.prototype.notifyError = function (err) {\n        this.destination.error(err);\n    };\n    SwitchSubscriber.prototype.notifyComplete = function () {\n        this.unsubscribeInner();\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    };\n    return SwitchSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switch.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/switch.js\n ** module id = 794\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): Observable} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nfunction switchMap(project, resultSelector) {\n    return this.lift(new SwitchMapOperator(project, resultSelector));\n}\nexports.switchMap = switchMap;\nvar SwitchMapOperator = (function () {\n    function SwitchMapOperator(project, resultSelector) {\n        this.project = project;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapSubscriber(subscriber, this.project, this.resultSelector));\n    };\n    return SwitchMapOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapSubscriber = (function (_super) {\n    __extends(SwitchMapSubscriber, _super);\n    function SwitchMapSubscriber(destination, project, resultSelector) {\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapSubscriber.prototype._next = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    };\n    SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, result, value, index));\n    };\n    SwitchMapSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.isUnsubscribed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._tryNotifyNext(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    SwitchMapSubscriber.prototype._tryNotifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return SwitchMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMap.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/switchMap.js\n ** module id = 795\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {Observable} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` every time a value is emitted on the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nfunction switchMapTo(innerObservable, resultSelector) {\n    return this.lift(new SwitchMapToOperator(innerObservable, resultSelector));\n}\nexports.switchMapTo = switchMapTo;\nvar SwitchMapToOperator = (function () {\n    function SwitchMapToOperator(observable, resultSelector) {\n        this.observable = observable;\n        this.resultSelector = resultSelector;\n    }\n    SwitchMapToOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector));\n    };\n    return SwitchMapToOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SwitchMapToSubscriber = (function (_super) {\n    __extends(SwitchMapToSubscriber, _super);\n    function SwitchMapToSubscriber(destination, inner, resultSelector) {\n        _super.call(this, destination);\n        this.inner = inner;\n        this.resultSelector = resultSelector;\n        this.index = 0;\n    }\n    SwitchMapToSubscriber.prototype._next = function (value) {\n        var innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult_1.subscribeToResult(this, this.inner, value, this.index++));\n    };\n    SwitchMapToSubscriber.prototype._complete = function () {\n        var innerSubscription = this.innerSubscription;\n        if (!innerSubscription || innerSubscription.isUnsubscribed) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype._unsubscribe = function () {\n        this.innerSubscription = null;\n    };\n    SwitchMapToSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            _super.prototype._complete.call(this);\n        }\n    };\n    SwitchMapToSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        if (resultSelector) {\n            this.tryResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            destination.next(innerValue);\n        }\n    };\n    SwitchMapToSubscriber.prototype.tryResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var _a = this, resultSelector = _a.resultSelector, destination = _a.destination;\n        var result;\n        try {\n            result = resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        destination.next(result);\n    };\n    return SwitchMapToSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=switchMapTo.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/switchMapTo.js\n ** module id = 796\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\n/**\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n * @param total\n * @return {any}\n * @method takeLast\n * @owner Observable\n */\nfunction takeLast(total) {\n    if (total === 0) {\n        return new EmptyObservable_1.EmptyObservable();\n    }\n    else {\n        return this.lift(new TakeLastOperator(total));\n    }\n}\nexports.takeLast = takeLast;\nvar TakeLastOperator = (function () {\n    function TakeLastOperator(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\n        }\n    }\n    TakeLastOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeLastSubscriber(subscriber, this.total));\n    };\n    return TakeLastOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeLastSubscriber = (function (_super) {\n    __extends(TakeLastSubscriber, _super);\n    function TakeLastSubscriber(destination, total) {\n        _super.call(this, destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    TakeLastSubscriber.prototype._next = function (value) {\n        var ring = this.ring;\n        var total = this.total;\n        var count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            var index = count % total;\n            ring[index] = value;\n        }\n    };\n    TakeLastSubscriber.prototype._complete = function () {\n        var destination = this.destination;\n        var count = this.count;\n        if (count > 0) {\n            var total = this.count >= this.total ? this.total : this.count;\n            var ring = this.ring;\n            for (var i = 0; i < total; i++) {\n                var idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    };\n    return TakeLastSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeLast.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/takeLast.js\n ** module id = 798\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * @param notifier\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method takeUntil\n * @owner Observable\n */\nfunction takeUntil(notifier) {\n    return this.lift(new TakeUntilOperator(notifier));\n}\nexports.takeUntil = takeUntil;\nvar TakeUntilOperator = (function () {\n    function TakeUntilOperator(notifier) {\n        this.notifier = notifier;\n    }\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeUntilSubscriber(subscriber, this.notifier));\n    };\n    return TakeUntilOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeUntilSubscriber = (function (_super) {\n    __extends(TakeUntilSubscriber, _super);\n    function TakeUntilSubscriber(destination, notifier) {\n        _super.call(this, destination);\n        this.notifier = notifier;\n        this.add(subscribeToResult_1.subscribeToResult(this, notifier));\n    }\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    };\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    return TakeUntilSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=takeUntil.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/takeUntil.js\n ** module id = 799\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * @param predicate\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method takeWhile\n * @owner Observable\n */\nfunction takeWhile(predicate) {\n    return this.lift(new TakeWhileOperator(predicate));\n}\nexports.takeWhile = takeWhile;\nvar TakeWhileOperator = (function () {\n    function TakeWhileOperator(predicate) {\n        this.predicate = predicate;\n    }\n    TakeWhileOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    };\n    return TakeWhileOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TakeWhileSubscriber = (function (_super) {\n    __extends(TakeWhileSubscriber, _super);\n    function TakeWhileSubscriber(destination, predicate) {\n        _super.call(this, destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    TakeWhileSubscriber.prototype._next = function (value) {\n        var destination = this.destination;\n        var result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    };\n    TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {\n        var destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    };\n    return TakeWhileSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=takeWhile.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/takeWhile.js\n ** module id = 800\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * @param durationSelector\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method throttle\n * @owner Observable\n */\nfunction throttle(durationSelector) {\n    return this.lift(new ThrottleOperator(durationSelector));\n}\nexports.throttle = throttle;\nvar ThrottleOperator = (function () {\n    function ThrottleOperator(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    ThrottleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ThrottleSubscriber(subscriber, this.durationSelector));\n    };\n    return ThrottleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleSubscriber = (function (_super) {\n    __extends(ThrottleSubscriber, _super);\n    function ThrottleSubscriber(destination, durationSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n    }\n    ThrottleSubscriber.prototype._next = function (value) {\n        if (!this.throttled) {\n            this.tryDurationSelector(value);\n        }\n    };\n    ThrottleSubscriber.prototype.tryDurationSelector = function (value) {\n        var duration = null;\n        try {\n            duration = this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.emitAndThrottle(value, duration);\n    };\n    ThrottleSubscriber.prototype.emitAndThrottle = function (value, duration) {\n        this.add(this.throttled = subscribeToResult_1.subscribeToResult(this, duration));\n        this.destination.next(value);\n    };\n    ThrottleSubscriber.prototype._unsubscribe = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n    };\n    ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._unsubscribe();\n    };\n    ThrottleSubscriber.prototype.notifyComplete = function () {\n        this._unsubscribe();\n    };\n    return ThrottleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=throttle.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/throttle.js\n ** module id = 801\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar async_1 = require('../scheduler/async');\n/**\n * @param delay\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method throttleTime\n * @owner Observable\n */\nfunction throttleTime(delay, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new ThrottleTimeOperator(delay, scheduler));\n}\nexports.throttleTime = throttleTime;\nvar ThrottleTimeOperator = (function () {\n    function ThrottleTimeOperator(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    ThrottleTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ThrottleTimeSubscriber(subscriber, this.delay, this.scheduler));\n    };\n    return ThrottleTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ThrottleTimeSubscriber = (function (_super) {\n    __extends(ThrottleTimeSubscriber, _super);\n    function ThrottleTimeSubscriber(destination, delay, scheduler) {\n        _super.call(this, destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    ThrottleTimeSubscriber.prototype._next = function (value) {\n        if (!this.throttled) {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.delay, { subscriber: this }));\n            this.destination.next(value);\n        }\n    };\n    ThrottleTimeSubscriber.prototype.clearThrottle = function () {\n        var throttled = this.throttled;\n        if (throttled) {\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    };\n    return ThrottleTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchNext(arg) {\n    var subscriber = arg.subscriber;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/throttleTime.js\n ** module id = 802\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar Subscriber_1 = require('../Subscriber');\n/**\n * @param due\n * @param errorToSend\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeout\n * @owner Observable\n */\nfunction timeout(due, errorToSend, scheduler) {\n    if (errorToSend === void 0) { errorToSend = null; }\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler));\n}\nexports.timeout = timeout;\nvar TimeoutOperator = (function () {\n    function TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.errorToSend = errorToSend;\n        this.scheduler = scheduler;\n    }\n    TimeoutOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.errorToSend, this.scheduler));\n    };\n    return TimeoutOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutSubscriber = (function (_super) {\n    __extends(TimeoutSubscriber, _super);\n    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, errorToSend, scheduler) {\n        _super.call(this, destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.errorToSend = errorToSend;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this._previousIndex = 0;\n        this._hasCompleted = false;\n        this.scheduleTimeout();\n    }\n    Object.defineProperty(TimeoutSubscriber.prototype, \"previousIndex\", {\n        get: function () {\n            return this._previousIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimeoutSubscriber.prototype, \"hasCompleted\", {\n        get: function () {\n            return this._hasCompleted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimeoutSubscriber.dispatchTimeout = function (state) {\n        var source = state.subscriber;\n        var currentIndex = state.index;\n        if (!source.hasCompleted && source.previousIndex === currentIndex) {\n            source.notifyTimeout();\n        }\n    };\n    TimeoutSubscriber.prototype.scheduleTimeout = function () {\n        var currentIndex = this.index;\n        this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, { subscriber: this, index: currentIndex });\n        this.index++;\n        this._previousIndex = currentIndex;\n    };\n    TimeoutSubscriber.prototype._next = function (value) {\n        this.destination.next(value);\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n    };\n    TimeoutSubscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this._hasCompleted = true;\n    };\n    TimeoutSubscriber.prototype._complete = function () {\n        this.destination.complete();\n        this._hasCompleted = true;\n    };\n    TimeoutSubscriber.prototype.notifyTimeout = function () {\n        this.error(this.errorToSend || new Error('timeout'));\n    };\n    return TimeoutSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=timeout.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/timeout.js\n ** module id = 803\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar async_1 = require('../scheduler/async');\nvar isDate_1 = require('../util/isDate');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * @param due\n * @param withObservable\n * @param scheduler\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method timeoutWith\n * @owner Observable\n */\nfunction timeoutWith(due, withObservable, scheduler) {\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    var absoluteTimeout = isDate_1.isDate(due);\n    var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n    return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n}\nexports.timeoutWith = timeoutWith;\nvar TimeoutWithOperator = (function () {\n    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    TimeoutWithOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    };\n    return TimeoutWithOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar TimeoutWithSubscriber = (function (_super) {\n    __extends(TimeoutWithSubscriber, _super);\n    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        _super.call(this);\n        this.destination = destination;\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.timeoutSubscription = undefined;\n        this.index = 0;\n        this._previousIndex = 0;\n        this._hasCompleted = false;\n        destination.add(this);\n        this.scheduleTimeout();\n    }\n    Object.defineProperty(TimeoutWithSubscriber.prototype, \"previousIndex\", {\n        get: function () {\n            return this._previousIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TimeoutWithSubscriber.prototype, \"hasCompleted\", {\n        get: function () {\n            return this._hasCompleted;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TimeoutWithSubscriber.dispatchTimeout = function (state) {\n        var source = state.subscriber;\n        var currentIndex = state.index;\n        if (!source.hasCompleted && source.previousIndex === currentIndex) {\n            source.handleTimeout();\n        }\n    };\n    TimeoutWithSubscriber.prototype.scheduleTimeout = function () {\n        var currentIndex = this.index;\n        var timeoutState = { subscriber: this, index: currentIndex };\n        this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, timeoutState);\n        this.index++;\n        this._previousIndex = currentIndex;\n    };\n    TimeoutWithSubscriber.prototype._next = function (value) {\n        this.destination.next(value);\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n    };\n    TimeoutWithSubscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this._hasCompleted = true;\n    };\n    TimeoutWithSubscriber.prototype._complete = function () {\n        this.destination.complete();\n        this._hasCompleted = true;\n    };\n    TimeoutWithSubscriber.prototype.handleTimeout = function () {\n        if (!this.isUnsubscribed) {\n            var withObservable = this.withObservable;\n            this.unsubscribe();\n            this.destination.add(this.timeoutSubscription = subscribeToResult_1.subscribeToResult(this, withObservable));\n        }\n    };\n    return TimeoutWithSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=timeoutWith.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/timeoutWith.js\n ** module id = 804\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * @return {Observable<any[]>|WebSocketSubject<T>|Observable<T>}\n * @method toArray\n * @owner Observable\n */\nfunction toArray() {\n    return this.lift(new ToArrayOperator());\n}\nexports.toArray = toArray;\nvar ToArrayOperator = (function () {\n    function ToArrayOperator() {\n    }\n    ToArrayOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ToArraySubscriber(subscriber));\n    };\n    return ToArrayOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ToArraySubscriber = (function (_super) {\n    __extends(ToArraySubscriber, _super);\n    function ToArraySubscriber(destination) {\n        _super.call(this, destination);\n        this.array = [];\n    }\n    ToArraySubscriber.prototype._next = function (x) {\n        this.array.push(x);\n    };\n    ToArraySubscriber.prototype._complete = function () {\n        this.destination.next(this.array);\n        this.destination.complete();\n    };\n    return ToArraySubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=toArray.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/toArray.js\n ** module id = 805\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nfunction window(windowBoundaries) {\n    return this.lift(new WindowOperator(windowBoundaries));\n}\nexports.window = window;\nvar WindowOperator = (function () {\n    function WindowOperator(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowSubscriber(subscriber, this.windowBoundaries));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, windowBoundaries) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowBoundaries = windowBoundaries;\n        this.add(subscribeToResult_1.subscribeToResult(this, windowBoundaries));\n        this.openWindow();\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this._complete();\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n    };\n    WindowSubscriber.prototype.openWindow = function () {\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var destination = this.destination;\n        var newWindow = this.window = new Subject_1.Subject();\n        destination.add(newWindow);\n        destination.next(newWindow);\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=window.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/window.js\n ** module id = 806\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subject_1 = require('../Subject');\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nfunction windowCount(windowSize, startWindowEvery) {\n    if (startWindowEvery === void 0) { startWindowEvery = 0; }\n    return this.lift(new WindowCountOperator(windowSize, startWindowEvery));\n}\nexports.windowCount = windowCount;\nvar WindowCountOperator = (function () {\n    function WindowCountOperator(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    WindowCountOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    };\n    return WindowCountOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowCountSubscriber = (function (_super) {\n    __extends(WindowCountSubscriber, _super);\n    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject_1.Subject()];\n        this.count = 0;\n        var firstWindow = this.windows[0];\n        destination.add(firstWindow);\n        destination.next(firstWindow);\n    }\n    WindowCountSubscriber.prototype._next = function (value) {\n        var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        var destination = this.destination;\n        var windowSize = this.windowSize;\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            windows[i].next(value);\n        }\n        var c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0) {\n            var window_1 = new Subject_1.Subject();\n            windows.push(window_1);\n            destination.add(window_1);\n            destination.next(window_1);\n        }\n    };\n    WindowCountSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowCountSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().complete();\n        }\n        this.destination.complete();\n    };\n    return WindowCountSubscriber;\n}(Subscriber_1.Subscriber));\n//# sourceMappingURL=windowCount.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/windowCount.js\n ** module id = 807\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\nvar Subject_1 = require('../Subject');\nvar async_1 = require('../scheduler/async');\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowTime.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds start a window 1 second long, and emit at most 2 click events per window</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowTime(1000, 5000)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nfunction windowTime(windowTimeSpan, windowCreationInterval, scheduler) {\n    if (windowCreationInterval === void 0) { windowCreationInterval = null; }\n    if (scheduler === void 0) { scheduler = async_1.async; }\n    return this.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler));\n}\nexports.windowTime = windowTime;\nvar WindowTimeOperator = (function () {\n    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.scheduler = scheduler;\n    }\n    WindowTimeOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.scheduler));\n    };\n    return WindowTimeOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowTimeSubscriber = (function (_super) {\n    __extends(WindowTimeSubscriber, _super);\n    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, scheduler) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.scheduler = scheduler;\n        this.windows = [];\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            var window_1 = this.openWindow();\n            var closeState = { subscriber: this, window: window_1, context: null };\n            var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: this, scheduler: scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            var window_2 = this.openWindow();\n            var timeSpanOnlyState = { subscriber: this, window: window_2, windowTimeSpan: windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    WindowTimeSubscriber.prototype._next = function (value) {\n        var windows = this.windows;\n        var len = windows.length;\n        for (var i = 0; i < len; i++) {\n            var window_3 = windows[i];\n            if (!window_3.isUnsubscribed) {\n                window_3.next(value);\n            }\n        }\n    };\n    WindowTimeSubscriber.prototype._error = function (err) {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    };\n    WindowTimeSubscriber.prototype._complete = function () {\n        var windows = this.windows;\n        while (windows.length > 0) {\n            var window_4 = windows.shift();\n            if (!window_4.isUnsubscribed) {\n                window_4.complete();\n            }\n        }\n        this.destination.complete();\n    };\n    WindowTimeSubscriber.prototype.openWindow = function () {\n        var window = new Subject_1.Subject();\n        this.windows.push(window);\n        var destination = this.destination;\n        destination.add(window);\n        destination.next(window);\n        return window;\n    };\n    WindowTimeSubscriber.prototype.closeWindow = function (window) {\n        window.complete();\n        var windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    };\n    return WindowTimeSubscriber;\n}(Subscriber_1.Subscriber));\nfunction dispatchWindowTimeSpanOnly(state) {\n    var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;\n    if (window) {\n        window.complete();\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;\n    var window = subscriber.openWindow();\n    var action = this;\n    var context = { action: action, subscription: null };\n    var timeSpanState = { subscriber: subscriber, window: window, context: context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(arg) {\n    var subscriber = arg.subscriber, window = arg.window, context = arg.context;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/windowTime.js\n ** module id = 808\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar Subscription_1 = require('../Subscription');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nfunction windowToggle(openings, closingSelector) {\n    return this.lift(new WindowToggleOperator(openings, closingSelector));\n}\nexports.windowToggle = windowToggle;\nvar WindowToggleOperator = (function () {\n    function WindowToggleOperator(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    WindowToggleOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    };\n    return WindowToggleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowToggleSubscriber = (function (_super) {\n    __extends(WindowToggleSubscriber, _super);\n    function WindowToggleSubscriber(destination, openings, closingSelector) {\n        _super.call(this, destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult_1.subscribeToResult(this, openings, openings));\n    }\n    WindowToggleSubscriber.prototype._next = function (value) {\n        var contexts = this.contexts;\n        if (contexts) {\n            var len = contexts.length;\n            for (var i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype._error = function (err) {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._error.call(this, err);\n    };\n    WindowToggleSubscriber.prototype._complete = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        _super.prototype._complete.call(this);\n    };\n    WindowToggleSubscriber.prototype._unsubscribe = function () {\n        var contexts = this.contexts;\n        this.contexts = null;\n        if (contexts) {\n            var len = contexts.length;\n            var index = -1;\n            while (++index < len) {\n                var context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            var closingSelector = this.closingSelector;\n            var closingNotifier = tryCatch_1.tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject_1.errorObject) {\n                return this.error(errorObject_1.errorObject.e);\n            }\n            else {\n                var window_1 = new Subject_1.Subject();\n                var subscription = new Subscription_1.Subscription();\n                var context = { window: window_1, subscription: subscription };\n                this.contexts.push(context);\n                var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);\n                if (innerSubscription.isUnsubscribed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window_1);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    };\n    WindowToggleSubscriber.prototype.notifyError = function (err) {\n        this.error(err);\n    };\n    WindowToggleSubscriber.prototype.notifyComplete = function (inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    };\n    WindowToggleSubscriber.prototype.closeWindow = function (index) {\n        if (index === -1) {\n            return;\n        }\n        var contexts = this.contexts;\n        var context = contexts[index];\n        var window = context.window, subscription = context.subscription;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    };\n    return WindowToggleSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowToggle.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/windowToggle.js\n ** module id = 809\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('../Subject');\nvar tryCatch_1 = require('../util/tryCatch');\nvar errorObject_1 = require('../util/errorObject');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nfunction windowWhen(closingSelector) {\n    return this.lift(new WindowOperator(closingSelector));\n}\nexports.windowWhen = windowWhen;\nvar WindowOperator = (function () {\n    function WindowOperator(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    WindowOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    };\n    return WindowOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WindowSubscriber = (function (_super) {\n    __extends(WindowSubscriber, _super);\n    function WindowSubscriber(destination, closingSelector) {\n        _super.call(this, destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype.notifyError = function (error, innerSub) {\n        this._error(error);\n    };\n    WindowSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.openWindow(innerSub);\n    };\n    WindowSubscriber.prototype._next = function (value) {\n        this.window.next(value);\n    };\n    WindowSubscriber.prototype._error = function (err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype._complete = function () {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    };\n    WindowSubscriber.prototype.unsubscribeClosingNotification = function () {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    };\n    WindowSubscriber.prototype.openWindow = function (innerSub) {\n        if (innerSub === void 0) { innerSub = null; }\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        var prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        var window = this.window = new Subject_1.Subject();\n        this.destination.next(window);\n        var closingNotifier = tryCatch_1.tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject_1.errorObject) {\n            var err = errorObject_1.errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));\n            this.add(window);\n        }\n    };\n    return WindowSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=windowWhen.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/windowWhen.js\n ** module id = 810\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {Observable} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nfunction withLatestFrom() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i - 0] = arguments[_i];\n    }\n    var project;\n    if (typeof args[args.length - 1] === 'function') {\n        project = args.pop();\n    }\n    var observables = args;\n    return this.lift(new WithLatestFromOperator(observables, project));\n}\nexports.withLatestFrom = withLatestFrom;\n/* tslint:enable:max-line-length */\nvar WithLatestFromOperator = (function () {\n    function WithLatestFromOperator(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    WithLatestFromOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    };\n    return WithLatestFromOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar WithLatestFromSubscriber = (function (_super) {\n    __extends(WithLatestFromSubscriber, _super);\n    function WithLatestFromSubscriber(destination, observables, project) {\n        _super.call(this, destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        var len = observables.length;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (var i = 0; i < len; i++) {\n            var observable = observables[i];\n            this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n        }\n    }\n    WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        var toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            var found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype.notifyComplete = function () {\n        // noop\n    };\n    WithLatestFromSubscriber.prototype._next = function (value) {\n        if (this.toRespond.length === 0) {\n            var args = [value].concat(this.values);\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    };\n    WithLatestFromSubscriber.prototype._tryProject = function (args) {\n        var result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return WithLatestFromSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=withLatestFrom.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/withLatestFrom.js\n ** module id = 811\n ** module chunks = 2\n **/","\"use strict\";\nvar zip_1 = require('./zip');\n/**\n * @param project\n * @return {Observable<R>|WebSocketSubject<T>|Observable<T>}\n * @method zipAll\n * @owner Observable\n */\nfunction zipAll(project) {\n    return this.lift(new zip_1.ZipOperator(project));\n}\nexports.zipAll = zipAll;\n//# sourceMappingURL=zipAll.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/operator/zipAll.js\n ** module id = 812\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Immediate_1 = require('../util/Immediate');\nvar FutureAction_1 = require('./FutureAction');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar AsapAction = (function (_super) {\n    __extends(AsapAction, _super);\n    function AsapAction() {\n        _super.apply(this, arguments);\n    }\n    AsapAction.prototype._schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay > 0) {\n            return _super.prototype._schedule.call(this, state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        var scheduler = this.scheduler;\n        scheduler.actions.push(this);\n        if (!scheduler.scheduledId) {\n            scheduler.scheduledId = Immediate_1.Immediate.setImmediate(function () {\n                scheduler.scheduledId = null;\n                scheduler.flush();\n            });\n        }\n        return this;\n    };\n    AsapAction.prototype._unsubscribe = function () {\n        var scheduler = this.scheduler;\n        var scheduledId = scheduler.scheduledId, actions = scheduler.actions;\n        _super.prototype._unsubscribe.call(this);\n        if (actions.length === 0) {\n            scheduler.active = false;\n            if (scheduledId != null) {\n                scheduler.scheduledId = null;\n                Immediate_1.Immediate.clearImmediate(scheduledId);\n            }\n        }\n    };\n    return AsapAction;\n}(FutureAction_1.FutureAction));\nexports.AsapAction = AsapAction;\n//# sourceMappingURL=AsapAction.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/scheduler/AsapAction.js\n ** module id = 813\n ** module chunks = 2\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AsapAction_1 = require('./AsapAction');\nvar QueueScheduler_1 = require('./QueueScheduler');\nvar AsapScheduler = (function (_super) {\n    __extends(AsapScheduler, _super);\n    function AsapScheduler() {\n        _super.apply(this, arguments);\n    }\n    AsapScheduler.prototype.scheduleNow = function (work, state) {\n        return new AsapAction_1.AsapAction(this, work).schedule(state);\n    };\n    return AsapScheduler;\n}(QueueScheduler_1.QueueScheduler));\nexports.AsapScheduler = AsapScheduler;\n//# sourceMappingURL=AsapScheduler.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/scheduler/AsapScheduler.js\n ** module id = 814\n ** module chunks = 2\n **/","\"use strict\";\nvar FastMap = (function () {\n    function FastMap() {\n        this.values = {};\n    }\n    FastMap.prototype.delete = function (key) {\n        this.values[key] = null;\n        return true;\n    };\n    FastMap.prototype.set = function (key, value) {\n        this.values[key] = value;\n        return this;\n    };\n    FastMap.prototype.get = function (key) {\n        return this.values[key];\n    };\n    FastMap.prototype.forEach = function (cb, thisArg) {\n        var values = this.values;\n        for (var key in values) {\n            if (values.hasOwnProperty(key) && values[key] !== null) {\n                cb.call(thisArg, values[key], key);\n            }\n        }\n    };\n    FastMap.prototype.clear = function () {\n        this.values = {};\n    };\n    return FastMap;\n}());\nexports.FastMap = FastMap;\n//# sourceMappingURL=FastMap.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/FastMap.js\n ** module id = 817\n ** module chunks = 2\n **/","/**\nSome credit for this helper goes to http://github.com/YuzuJS/setImmediate\n*/\n\"use strict\";\nvar root_1 = require('./root');\nvar ImmediateDefinition = (function () {\n    function ImmediateDefinition(root) {\n        this.root = root;\n        if (root.setImmediate && typeof root.setImmediate === 'function') {\n            this.setImmediate = root.setImmediate.bind(root);\n            this.clearImmediate = root.clearImmediate.bind(root);\n        }\n        else {\n            this.nextHandle = 1;\n            this.tasksByHandle = {};\n            this.currentlyRunningATask = false;\n            // Don't get fooled by e.g. browserify environments.\n            if (this.canUseProcessNextTick()) {\n                // For Node.js before 0.9\n                this.setImmediate = this.createProcessNextTickSetImmediate();\n            }\n            else if (this.canUsePostMessage()) {\n                // For non-IE10 modern browsers\n                this.setImmediate = this.createPostMessageSetImmediate();\n            }\n            else if (this.canUseMessageChannel()) {\n                // For web workers, where supported\n                this.setImmediate = this.createMessageChannelSetImmediate();\n            }\n            else if (this.canUseReadyStateChange()) {\n                // For IE 6–8\n                this.setImmediate = this.createReadyStateChangeSetImmediate();\n            }\n            else {\n                // For older browsers\n                this.setImmediate = this.createSetTimeoutSetImmediate();\n            }\n            var ci = function clearImmediate(handle) {\n                delete clearImmediate.instance.tasksByHandle[handle];\n            };\n            ci.instance = this;\n            this.clearImmediate = ci;\n        }\n    }\n    ImmediateDefinition.prototype.identify = function (o) {\n        return this.root.Object.prototype.toString.call(o);\n    };\n    ImmediateDefinition.prototype.canUseProcessNextTick = function () {\n        return this.identify(this.root.process) === '[object process]';\n    };\n    ImmediateDefinition.prototype.canUseMessageChannel = function () {\n        return Boolean(this.root.MessageChannel);\n    };\n    ImmediateDefinition.prototype.canUseReadyStateChange = function () {\n        var document = this.root.document;\n        return Boolean(document && 'onreadystatechange' in document.createElement('script'));\n    };\n    ImmediateDefinition.prototype.canUsePostMessage = function () {\n        var root = this.root;\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `root.postMessage` means something completely different and can't be used for this purpose.\n        if (root.postMessage && !root.importScripts) {\n            var postMessageIsAsynchronous_1 = true;\n            var oldOnMessage = root.onmessage;\n            root.onmessage = function () {\n                postMessageIsAsynchronous_1 = false;\n            };\n            root.postMessage('', '*');\n            root.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous_1;\n        }\n        return false;\n    };\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    ImmediateDefinition.prototype.partiallyApplied = function (handler) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var fn = function result() {\n            var _a = result, handler = _a.handler, args = _a.args;\n            if (typeof handler === 'function') {\n                handler.apply(undefined, args);\n            }\n            else {\n                (new Function('' + handler))();\n            }\n        };\n        fn.handler = handler;\n        fn.args = args;\n        return fn;\n    };\n    ImmediateDefinition.prototype.addFromSetImmediateArguments = function (args) {\n        this.tasksByHandle[this.nextHandle] = this.partiallyApplied.apply(undefined, args);\n        return this.nextHandle++;\n    };\n    ImmediateDefinition.prototype.createProcessNextTickSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.process.nextTick(instance.partiallyApplied(instance.runIfPresent, handle));\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createPostMessageSetImmediate = function () {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n        var root = this.root;\n        var messagePrefix = 'setImmediate$' + root.Math.random() + '$';\n        var onGlobalMessage = function globalMessageHandler(event) {\n            var instance = globalMessageHandler.instance;\n            if (event.source === root &&\n                typeof event.data === 'string' &&\n                event.data.indexOf(messagePrefix) === 0) {\n                instance.runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n        onGlobalMessage.instance = this;\n        root.addEventListener('message', onGlobalMessage, false);\n        var fn = function setImmediate() {\n            var _a = setImmediate, messagePrefix = _a.messagePrefix, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.postMessage(messagePrefix + handle, '*');\n            return handle;\n        };\n        fn.instance = this;\n        fn.messagePrefix = messagePrefix;\n        return fn;\n    };\n    ImmediateDefinition.prototype.runIfPresent = function (handle) {\n        // From the spec: 'Wait until any invocations of this algorithm started before this one have completed.'\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (this.currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // 'too much recursion' error.\n            this.root.setTimeout(this.partiallyApplied(this.runIfPresent, handle), 0);\n        }\n        else {\n            var task = this.tasksByHandle[handle];\n            if (task) {\n                this.currentlyRunningATask = true;\n                try {\n                    task();\n                }\n                finally {\n                    this.clearImmediate(handle);\n                    this.currentlyRunningATask = false;\n                }\n            }\n        }\n    };\n    ImmediateDefinition.prototype.createMessageChannelSetImmediate = function () {\n        var _this = this;\n        var channel = new this.root.MessageChannel();\n        channel.port1.onmessage = function (event) {\n            var handle = event.data;\n            _this.runIfPresent(handle);\n        };\n        var fn = function setImmediate() {\n            var _a = setImmediate, channel = _a.channel, instance = _a.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n        fn.channel = channel;\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createReadyStateChangeSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var root = instance.root;\n            var doc = root.document;\n            var html = doc.documentElement;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement('script');\n            script.onreadystatechange = function () {\n                instance.runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    ImmediateDefinition.prototype.createSetTimeoutSetImmediate = function () {\n        var fn = function setImmediate() {\n            var instance = setImmediate.instance;\n            var handle = instance.addFromSetImmediateArguments(arguments);\n            instance.root.setTimeout(instance.partiallyApplied(instance.runIfPresent, handle), 0);\n            return handle;\n        };\n        fn.instance = this;\n        return fn;\n    };\n    return ImmediateDefinition;\n}());\nexports.ImmediateDefinition = ImmediateDefinition;\nexports.Immediate = new ImmediateDefinition(root_1.root);\n//# sourceMappingURL=Immediate.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/Immediate.js\n ** module id = 818\n ** module chunks = 2\n **/","\"use strict\";\nvar root_1 = require('./root');\nvar MapPolyfill_1 = require('./MapPolyfill');\nexports.Map = root_1.root.Map || (function () { return MapPolyfill_1.MapPolyfill; })();\n//# sourceMappingURL=Map.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/Map.js\n ** module id = 819\n ** module chunks = 2\n **/","\"use strict\";\nvar MapPolyfill = (function () {\n    function MapPolyfill() {\n        this.size = 0;\n        this._values = [];\n        this._keys = [];\n    }\n    MapPolyfill.prototype.get = function (key) {\n        var i = this._keys.indexOf(key);\n        return i === -1 ? undefined : this._values[i];\n    };\n    MapPolyfill.prototype.set = function (key, value) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            this._keys.push(key);\n            this._values.push(value);\n            this.size++;\n        }\n        else {\n            this._values[i] = value;\n        }\n        return this;\n    };\n    MapPolyfill.prototype.delete = function (key) {\n        var i = this._keys.indexOf(key);\n        if (i === -1) {\n            return false;\n        }\n        this._values.splice(i, 1);\n        this._keys.splice(i, 1);\n        this.size--;\n        return true;\n    };\n    MapPolyfill.prototype.clear = function () {\n        this._keys.length = 0;\n        this._values.length = 0;\n        this.size = 0;\n    };\n    MapPolyfill.prototype.forEach = function (cb, thisArg) {\n        for (var i = 0; i < this.size; i++) {\n            cb.call(thisArg, this._values[i], this._keys[i]);\n        }\n    };\n    return MapPolyfill;\n}());\nexports.MapPolyfill = MapPolyfill;\n//# sourceMappingURL=MapPolyfill.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/MapPolyfill.js\n ** module id = 820\n ** module chunks = 2\n **/","\"use strict\";\nfunction not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\nexports.not = not;\n//# sourceMappingURL=not.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/rxjs/util/not.js\n ** module id = 821\n ** module chunks = 2\n **/","\"use strict\";\r\nvar paginate_pipe_1 = require('./paginate-pipe');\r\nexports.PaginatePipe = paginate_pipe_1.PaginatePipe;\r\nvar pagination_service_1 = require('./pagination-service');\r\nexports.PaginationService = pagination_service_1.PaginationService;\r\nvar pagination_controls_cmp_1 = require('./pagination-controls-cmp');\r\nexports.PaginationControlsCmp = pagination_controls_cmp_1.PaginationControlsCmp;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-pagination/dist/ng2-pagination.js\n ** module id = 986\n ** module chunks = 2\n **/","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = require(\"@angular/core\");\r\nvar pagination_service_1 = require(\"./pagination-service\");\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (args instanceof Array) {\r\n            // compatible with angular2 before beta16\r\n            args = args[0];\r\n        }\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId;\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems !== undefined;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        // save the state for server-side collection to avoid null\r\n        // flash as new data loads.\r\n        this.saveState(id, collection, collection, start, end);\r\n        return collection;\r\n    };\r\n    /**\r\n     * Create an IPaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, args) {\r\n        var config = args;\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id || this.service.defaultId,\r\n            itemsPerPage: config.itemsPerPage || 0,\r\n            currentPage: config.currentPage || 1,\r\n            totalItems: config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !config.hasOwnProperty(prop); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe = __decorate([\r\n        core_1.Pipe({\r\n            name: 'paginate',\r\n            pure: false\r\n        }), \r\n        __metadata('design:paramtypes', [pagination_service_1.PaginationService])\r\n    ], PaginatePipe);\r\n    return PaginatePipe;\r\n}());\r\nexports.PaginatePipe = PaginatePipe;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-pagination/dist/paginate-pipe.js\n ** module id = 987\n ** module chunks = 2\n **/","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar core_1 = require('@angular/core');\r\nvar pagination_service_1 = require(\"./pagination-service\");\r\nvar template_1 = require('./template');\r\nvar PaginationControlsCmp = (function () {\r\n    function PaginationControlsCmp(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new core_1.EventEmitter();\r\n        this.pages = [];\r\n        this.hasTemplate = false;\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n            }\r\n        });\r\n    }\r\n    Object.defineProperty(PaginationControlsCmp.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsCmp.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = !!value && value !== 'false';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    PaginationControlsCmp.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId;\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsCmp.prototype.ngOnChanges = function () {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsCmp.prototype.ngAfterViewInit = function () {\r\n        var _this = this;\r\n        if (this.template && 0 < this.template.nativeElement.children.length) {\r\n            this.hasTemplate = true;\r\n            setTimeout(function () { return _this.changeDetectorRef.markForCheck(); });\r\n        }\r\n    };\r\n    PaginationControlsCmp.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsCmp.prototype.previous = function () {\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsCmp.prototype.next = function () {\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsCmp.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsCmp.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsCmp.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsCmp.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsCmp.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsCmp.prototype.updatePageLinks = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            this.setCurrent(correctedCurrentPage);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsCmp.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of IPage objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsCmp.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsCmp.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', String)\r\n    ], PaginationControlsCmp.prototype, \"id\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Number)\r\n    ], PaginationControlsCmp.prototype, \"maxSize\", void 0);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], PaginationControlsCmp.prototype, \"directionLinks\", null);\r\n    __decorate([\r\n        core_1.Input(), \r\n        __metadata('design:type', Boolean)\r\n    ], PaginationControlsCmp.prototype, \"autoHide\", null);\r\n    __decorate([\r\n        core_1.Output(), \r\n        __metadata('design:type', core_1.EventEmitter)\r\n    ], PaginationControlsCmp.prototype, \"pageChange\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('template'), \r\n        __metadata('design:type', Object)\r\n    ], PaginationControlsCmp.prototype, \"template\", void 0);\r\n    PaginationControlsCmp = __decorate([\r\n        core_1.Component({\r\n            selector: 'pagination-controls',\r\n            template: template_1.DEFAULT_TEMPLATE,\r\n            styles: [template_1.DEFAULT_STYLES],\r\n            changeDetection: core_1.ChangeDetectionStrategy.OnPush\r\n        }), \r\n        __metadata('design:paramtypes', [pagination_service_1.PaginationService, core_1.ChangeDetectorRef])\r\n    ], PaginationControlsCmp);\r\n    return PaginationControlsCmp;\r\n}());\r\nexports.PaginationControlsCmp = PaginationControlsCmp;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-pagination/dist/pagination-controls-cmp.js\n ** module id = 988\n ** module chunks = 2\n **/","/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\n\"use strict\";\r\nexports.DEFAULT_TEMPLATE = \"\\n    <div #template>\\n        <ng-content></ng-content>\\n    </div>\\n    <ul class=\\\"ng2-pagination\\\" \\n        role=\\\"navigation\\\" \\n        aria-label=\\\"Pagination\\\" \\n        *ngIf=\\\"!hasTemplate && !(autoHide && pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a *ngIf=\\\"1 < getCurrent()\\\" (click)=\\\"previous()\\\" aria-label=\\\"Next page\\\">\\n                Previous <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"isFirstPage()\\\">Previous <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n        <li [class.current]=\\\"getCurrent() === page.value\\\" *ngFor=\\\"let page of pages\\\">\\n            <a (click)=\\\"setCurrent(page.value)\\\" *ngIf=\\\"getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">Page</span>\\n                <span>{{ page.label }}</span>\\n            </a>\\n            <div *ngIf=\\\"getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">You're on page</span>\\n                <span>{{ page.label }}</span> \\n            </div>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a *ngIf=\\\"!isLastPage()\\\" (click)=\\\"next()\\\" aria-label=\\\"Next page\\\">\\n                Next <span class=\\\"show-for-sr\\\">page</span>\\n            </a>\\n            <span *ngIf=\\\"isLastPage()\\\">Next <span class=\\\"show-for-sr\\\">page</span></span>\\n        </li>\\n\\n    </ul>\\n    \";\r\nexports.DEFAULT_STYLES = \"\\n.ng2-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ng2-pagination::before, .ng2-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ng2-pagination::after {\\n    clear: both; }\\n  .ng2-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    font-size: 20px;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ng2-pagination li {\\n    display: inline-block; }\\n  .ng2-pagination a,\\n  .ng2-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ng2-pagination a:hover,\\n    .ng2-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ng2-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ng2-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ng2-pagination .disabled:hover {\\n      background: transparent; }\\n  .ng2-pagination .ellipsis::after {\\n    content: '\\u2026';\\n    padding: 0.1875rem 0.625rem;\\n    color: #0a0a0a; }\\n\\n.ng2-pagination .pagination-previous a::before,\\n.ng2-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ng2-pagination .pagination-next a::after,\\n.ng2-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ng2-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\";\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ng2-pagination/dist/template.js\n ** module id = 989\n ** module chunks = 2\n **/"],"mappings":";;;;;AACA;;AAEA;AACA;AACA;AAOA;;AAEA;AACA;AACA;AAMA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAEA;AACA;AAGA;AAEA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA3EA;AAAA;;AAAA;AA6EA;;AAAA;AA5EA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;;AAEA;AACA;AAEA;AACA;AAIA;AAKA;AAAA;AAJA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA7DA;AAAA;;AAAA;AA8DA;;AAAA;AA7DA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AACA;AAGA;AAOA;AAAA;AANA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAhHA;AAAA;;AAAA;AAkHA;;AAAA;AAjHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;;AAEA;;;;;;;;;;;AAEA;AAMA;AACA;AAGA;AAMA;AAAA;AALA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AA9IA;AAAA;;AAAA;AA+IA;;AAAA;AA9IA;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA;AAKA;AAAA;AAeA;AAdA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AACA;AACA;;AAAA;AAgBA;AAAA;AAfA;;;;;;;;;;;;;;;;;ACLA;AAEA;AACA;AAGA;AAEA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AApCA;AAAA;;AAAA;AAsCA;;AAAA;AArCA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAMA;AAQA;AASA;AACA;AAeA;AASA;AATA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AA3DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;;AAbA;AAqDA;;AAAA;AAnDA;;;;;;;;;;;;;;;;;;;;ACxCA;AAEA;AACA;AACA;AASA;AAUA;AAVA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AA5DA;AAAA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;;AAdA;AAyDA;;AAAA;AAvDA;;;;;;;;;;;;;;;;;;;;ACbA;AAIA;AACA;AAEA;AACA;AAQA;AAaA;AAbA;AAeA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AArEA;AAAA;AACA;AACA;AACA;AACA;AAgBA;AACA;AAGA;;AApBA;AAmEA;;AAAA;AAjEA;;;;;;;;;;;;;;;;;AChBA;AACA;AAIA;AASA;AASA;AATA;AASA;AAAA;AAAA;AAPA;AAIA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA/EA;AAAA;;AAAA;AARA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAoFA;;AAAA;AAlFA;;;;;;;;;;;;;;;;;ACdA;AAkBA;AAAA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAyFA;AAvFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AA1GA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAEA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AA3BA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAgHA;;AAAA;AA9GA;;;;;;;;;;;;;;;;;AClBA;AAEA;AACA;AAGA;AAEA;AAAA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAhCA;AAAA;;AAAA;AAkCA;;AAAA;AAjxhDA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA6DA;;AAAA;AA5DA;;;;;;;;;;;;;;;;;AChBA;AAKA;AAKA;AAUA;AACA;AACA;AAGA;AACA;AAaA;AAOA;AAAA;AANA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAiEA;;AAAA;AA/DA;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AAIA;AACA;AAEA;AAMA;AACA;AACA;AASA;AAUA;AAVA;AAUA;AAAA;AACA;AAVA;AAMA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AAAA;;AAZA;AAwEA;;AAAA;AAtEA;;;;;;;;;;;;;;;;;;;;AC1BA;AAOA;AAIA;AAkBA;AACA;AACA;AACA;AASA;AAQA;AAAA;AAAA;AAAA;AAPA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAtDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;;AAVA;AAiDA;;AAAA;AA/CA;;;;;;;;;;;;;;;;;ACzCA;;AAEA;AACA;AACA;AAWA;AAAA;AACA;AAIA;AAHA;AACA;AACA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAOA;AAAA;AALA;;;;;;;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AAYA;AAIA;AAJA;AAIA;AAAA;AAHA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AAAA;AACA;AAKA;AACA;;AAAA;AAsBA;;AAAA;AApBA;;;;;;;;;;;;;;;;;AChBA;;AAEA;AACA;AAEA;AACA;AA4CA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAhEA;AAAA;AACA;AAmCA;AACA;AACA;AACA;AACA;;AAAA;AAyBA;;AAAA;AAvBA;;;;;;;;;;;;;;;;;AClDA;AAIA;AACA;AAEA;AAEA;AAQA;AACA;AAsgJA;;AAAA;AA9IA;;;;;;;;;;;;;;;;;ACxCA;AACA;AAOA;AACA;AACA;AACA;AAOA;AAaA;AAuBA;AAvBA;AAuBA;AAAA;AAAA;AACA;AAAA;AAAA;AAtBA;AAuuJA;;AAAA;AApJA;;;;;;;;;;;;;;;;;AC/BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AAkBA;AAAA;AAAA;AAAA;AAjBA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAlEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAuDA;;AAAA;AArDA;;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AACA;AAKA;AACA;AASA;AAYA;AAZA;AAgBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAzEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAeA;AAEA;AAIA;;AArBA;AAsEA;;AAAA;AApEA;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAkBA;AAOA;AAPA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAyCA;;AAAA;AAvCA;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAmBA;AA0BA;AA1BA;AA0BA;AAAA;AAAA;AACA;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAsBA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA9KA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAuKA;;AAAA;AArKA;;;;;;;;;;;;;;;;;AC9BA;;AAEA;AACA;AACA;AAEA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;AAEA;AAkCA;AAAA;AAEA;AAjCA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;;;;;;;;;;;;;;;;;ACrEA;AAEA;AACA;AAGA;AAEA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AArDA;AAAA;;AAAA;AAuDA;;AAAA;AAtDA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACzjzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjqBA;AAAA;AACA;AACA;AApBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;;;;;;;;AC/CA;;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;ACdA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA4BA;AAAA;AAAA;AA1BA;AAAA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;AC9CA;AAMA;AAQA;AAOA;AAKA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAzBA;AAAA;;AAAA;AANA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AA6BA;;AAAA;AA5BA;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AAEA;AACA;AAEA;AAQA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA3CA;AAAA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;;AARA;AAwCA;;AAAA;AAvCA;;;;;;;;;;;;;;;;;ACdA;AAIA;AACA;AASA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAUA;;AAAA;AATA;;;;;;;;;;;;;;;;;ACdA;AAIA;AACA;AAQA;AAAA;AAGA;AAFA;AAAA;;AAAA;AARA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAKA;AAAA;AAHA;;;;;;;;;;;;;;;;;ACbA;AAKA;AAuBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;;;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AA3JA;AAAA;;AAAA;AA1CA;AAAA;AACA;AACA;AAiBA;AACA;;AAAA;AAkLA;AAAA;AAhLA;;;;;;;AC5BA;;AAEA;;AAEA;AAAA;AAuDA;AAtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAvDA;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AACA;AAQA;AAMA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AA1BA;AAAA;;AAAA;AARA;AAAA;AACA;AACA;AACA;AACA;AAQA;;AARA;AAgCA;;AAAA;AA9BA;;;;;;;;;;;;;;;;;ACZA;;AAEA;AACA;AAQA;AAAA;AAEA;AARA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAIA;AAAA;AAFA;;;;;;;;;;;;;;;;;ACXA;AAWA;AAAA;AAEA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAIA;AAAA;AAFA;;;;;;;;;;;;;;;;;ACXA;;AAEA;AACA;AACA;AACA;AASA;AAKA;AAAA;AAAA;AAJA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAsBA;;AAAA;AApBA;;;;;;;;;;;;;;;;;;;;ACdA;;AAEA;AACA;AAIA;AAQA;AAKA;AAYA;AAMA;AAAA;AAAA;AAJA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAlDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;;AARA;AA2CA;;AAAA;AAzCA;;;;;;;;;;;;;;;;;;;;AChCA;;AAEA;AACA;AAIA;AAOA;AAEA;AAQA;AAMA;AAAA;AAAA;AALA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AA/BA;AAAA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;;AARA;AA4BA;;AAAA;AA1BA;;;;;;;;;;;;;;;;;ACxBA;AAKA;AAEA;AAQA;AACA;AAAA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA6BA;;AAAA;AA3BA;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAkBA;AAaA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAYA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AA1CA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAhBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA+CA;;AAAA;AA7CA;;;;;;;;ACvBA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjGA;AACA;AAAA;AA0BA;AAzBA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA1BA;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACXA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjjvlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC1GA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACphnvzHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChxhGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACptzlnzrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChvlDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClrxznjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnhNA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjPA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}